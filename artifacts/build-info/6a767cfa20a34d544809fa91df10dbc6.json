{
	"id": "6a767cfa20a34d544809fa91df10dbc6",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"Token.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.13;\n\n// Import OpenZeppelin upgradeable contracts for ERC20 token functionality and ownership management\nimport {ERC20Upgradeable} from \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\";\nimport {OwnableUpgradeable} from \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\";\n\n/**\n * @title Token\n * @dev A simple upgradeable ERC20 token contract with mint and burn functionality\n * @notice This contract inherits from OpenZeppelin's upgradeable contracts to support proxy patterns\n */\ncontract Token is ERC20Upgradeable, OwnableUpgradeable {\n    \n    /**\n     * @dev Initializes the token contract with name and symbol\n     * @param name The name of the token (e.g., \"MyToken\")\n     * @param symbol The symbol of the token (e.g., \"MTK\")\n     * @notice This function replaces the constructor in upgradeable contracts\n     * @notice Can only be called once due to the initializer modifier\n     */\n    function initialize(\n        string memory name,\n        string memory symbol\n    ) public initializer {\n        // Initialize the ERC20 functionality with the provided name and symbol\n        __ERC20_init(name, symbol);\n        \n        // Set the deployer as the initial owner of the contract\n        __Ownable_init(msg.sender);\n    }\n\n    /**\n     * @dev Mints new tokens to a specified address\n     * @param to The address that will receive the newly minted tokens\n     * @param amount The amount of tokens to mint (in wei units)\n     * @notice Only the contract owner can call this function\n     * @notice This increases the total supply of tokens\n     */\n    function mint(address to, uint256 amount) public onlyOwner {\n        // Use OpenZeppelin's internal _mint function to create new tokens\n        _mint(to, amount);\n    }\n\n    /**\n     * @dev Burns tokens from a specified address\n     * @param to The address from which tokens will be burned\n     * @param amount The amount of tokens to burn (in wei units)\n     * @notice Only the contract owner can call this function\n     * @notice This decreases the total supply of tokens\n     * @notice The address must have sufficient balance for the burn to succeed\n     */\n    function burn(address to, uint256 amount) public onlyOwner {\n        // Use OpenZeppelin's internal _burn function to destroy tokens\n        _burn(to, amount);\n    }\n}"
			},
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract OwnableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Ownable\n    struct OwnableStorage {\n        address _owner;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Ownable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant OwnableStorageLocation = 0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300;\n\n    function _getOwnableStorage() private pure returns (OwnableStorage storage $) {\n        assembly {\n            $.slot := OwnableStorageLocation\n        }\n    }\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    function __Ownable_init(address initialOwner) internal onlyInitializing {\n        __Ownable_init_unchained(initialOwner);\n    }\n\n    function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        OwnableStorage storage $ = _getOwnableStorage();\n        return $._owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        OwnableStorage storage $ = _getOwnableStorage();\n        address oldOwner = $._owner;\n        $._owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport {IERC20Metadata} from \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\nimport {ContextUpgradeable} from \"../../utils/ContextUpgradeable.sol\";\nimport {IERC20Errors} from \"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20Upgradeable is Initializable, ContextUpgradeable, IERC20, IERC20Metadata, IERC20Errors {\n    /// @custom:storage-location erc7201:openzeppelin.storage.ERC20\n    struct ERC20Storage {\n        mapping(address account => uint256) _balances;\n\n        mapping(address account => mapping(address spender => uint256)) _allowances;\n\n        uint256 _totalSupply;\n\n        string _name;\n        string _symbol;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.ERC20\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant ERC20StorageLocation = 0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00;\n\n    function _getERC20Storage() private pure returns (ERC20Storage storage $) {\n        assembly {\n            $.slot := ERC20StorageLocation\n        }\n    }\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * Both values are immutable: they can only be set once during construction.\n     */\n    function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {\n        __ERC20_init_unchained(name_, symbol_);\n    }\n\n    function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {\n        ERC20Storage storage $ = _getERC20Storage();\n        $._name = name_;\n        $._symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /// @inheritdoc IERC20\n    function totalSupply() public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._totalSupply;\n    }\n\n    /// @inheritdoc IERC20\n    function balanceOf(address account) public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /// @inheritdoc IERC20\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        ERC20Storage storage $ = _getERC20Storage();\n        return $._allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        ERC20Storage storage $ = _getERC20Storage();\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            $._totalSupply += value;\n        } else {\n            uint256 fromBalance = $._balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                $._balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                $._totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                $._balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        ERC20Storage storage $ = _getERC20Storage();\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        $._allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reinitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n     *\n     * NOTE: Consider following the ERC-7201 formula to derive storage locations.\n     */\n    function _initializableStorageSlot() internal pure virtual returns (bytes32) {\n        return INITIALIZABLE_STORAGE;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        bytes32 slot = _initializableStorageSlot();\n        assembly {\n            $.slot := slot\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (interfaces/draft-IERC6093.sol)\npragma solidity >=0.8.4;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity >=0.6.2;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.4.0) (token/ERC20/IERC20.sol)\n\npragma solidity >=0.4.16;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"OwnableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":\"OwnableUpgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
				"ERC20Upgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":\"ERC20Upgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xfcd09c2aa8cc3f93e12545454359f901965db312bc03833daf84de0c03e05022\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07701188648d2ab83dab1037808298585264559bddf243bd8929037adcb984b0\",\"dweb:/ipfs/QmavmG5REdHCAWsZ8Cag26BCxAq27DRKGxr3uBg5ZYxQ51\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Token.sol": {
				"Token": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "A simple upgradeable ERC20 token contract with mint and burn functionality",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"burn(address,uint256)": {
								"details": "Burns tokens from a specified address",
								"params": {
									"amount": "The amount of tokens to burn (in wei units)",
									"to": "The address from which tokens will be burned"
								}
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"initialize(string,string)": {
								"details": "Initializes the token contract with name and symbol",
								"params": {
									"name": "The name of the token (e.g., \"MyToken\")",
									"symbol": "The symbol of the token (e.g., \"MTK\")"
								}
							},
							"mint(address,uint256)": {
								"details": "Mints new tokens to a specified address",
								"params": {
									"amount": "The amount of tokens to mint (in wei units)",
									"to": "The address that will receive the newly minted tokens"
								}
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"title": "Token",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Token.sol\":573:2385  contract Token is ERC20Upgradeable, OwnableUpgradeable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Token.sol\":573:2385  contract Token is ERC20Upgradeable, OwnableUpgradeable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_18\n      jumpi\n      dup1\n      0x9dc29fac\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x9dc29fac\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_17\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x23b872dd\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x4cd88b76\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2697:2841  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5114:5300  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3850:4002  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5892:6136  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_6:\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      tag_38\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3735:3817  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Token.sol\":1652:1820  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_8:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_45:\n      tag_46\n      jump\t// in\n    tag_44:\n      stop\n        /* \"Token.sol\":987:1323  function initialize(... */\n    tag_9:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n    tag_47:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4035:4206  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_10:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      tag_54\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_11:\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_12:\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2954:3102  function symbol() public view virtual returns (string memory) {... */\n    tag_13:\n      tag_62\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Token.sol\":2218:2383  function burn(address to, uint256 amount) public onlyOwner {... */\n    tag_14:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_66:\n      tag_67\n      jump\t// in\n    tag_65:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4401:4579  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_15:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_69:\n      tag_70\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4612:4807  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_16:\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      tag_75\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_17:\n      tag_77\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_78:\n      tag_79\n      jump\t// in\n    tag_77:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2697:2841  function name() public view virtual returns (string memory) {... */\n    tag_22:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2742:2755  string memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2767:2789  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2792:2810  _getERC20Storage() */\n      tag_81\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2792:2808  _getERC20Storage */\n      tag_82\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2792:2810  _getERC20Storage() */\n      jump\t// in\n    tag_81:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2767:2810  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2827:2828  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2827:2834  $._name */\n      0x03\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2820:2834  return $._name */\n      dup1\n      sload\n      tag_83\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_85\n      swap1\n      tag_84\n      jump\t// in\n    tag_85:\n      dup1\n      iszero\n      tag_86\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_87\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_86)\n    tag_87:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_88:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_88\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_86:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2697:2841  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5114:5300  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_28:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5187:5191  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5203:5216  address owner */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5219:5231  _msgSender() */\n      tag_90\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5219:5229  _msgSender */\n      tag_91\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5219:5231  _msgSender() */\n      jump\t// in\n    tag_90:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5203:5231  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5241:5272  _approve(owner, spender, value) */\n      tag_92\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5250:5255  owner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5257:5264  spender */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5266:5271  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5241:5249  _approve */\n      tag_93\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5241:5272  _approve(owner, spender, value) */\n      jump\t// in\n    tag_92:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5289:5293  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5282:5293  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5114:5300  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3850:4002  function totalSupply() public view virtual returns (uint256) {... */\n    tag_32:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3902:3909  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3921:3943  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3946:3964  _getERC20Storage() */\n      tag_95\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3946:3962  _getERC20Storage */\n      tag_82\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3946:3964  _getERC20Storage() */\n      jump\t// in\n    tag_95:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3921:3964  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3981:3982  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3981:3995  $._totalSupply */\n      0x02\n      add\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3974:3995  return $._totalSupply */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3850:4002  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5892:6136  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_38:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5979:5983  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5995:6010  address spender */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6013:6025  _msgSender() */\n      tag_97\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6013:6023  _msgSender */\n      tag_91\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6013:6025  _msgSender() */\n      jump\t// in\n    tag_97:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5995:6025  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6035:6072  _spendAllowance(from, spender, value) */\n      tag_98\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6051:6055  from */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6057:6064  spender */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6066:6071  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6035:6050  _spendAllowance */\n      tag_99\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6035:6072  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_98:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6082:6108  _transfer(from, to, value) */\n      tag_100\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6092:6096  from */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6098:6100  to */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6102:6107  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6082:6091  _transfer */\n      tag_101\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6082:6108  _transfer(from, to, value) */\n      jump\t// in\n    tag_100:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6125:6129  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6118:6129  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":5892:6136  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3735:3817  function decimals() public view virtual returns (uint8) {... */\n    tag_41:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3784:3789  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3808:3810  18 */\n      0x12\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3801:3810  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3735:3817  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"Token.sol\":1652:1820  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_46:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_104\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_105\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_104:\n        /* \"Token.sol\":1796:1813  _mint(to, amount) */\n      tag_107\n        /* \"Token.sol\":1802:1804  to */\n      dup3\n        /* \"Token.sol\":1806:1812  amount */\n      dup3\n        /* \"Token.sol\":1796:1801  _mint */\n      tag_108\n        /* \"Token.sol\":1796:1813  _mint(to, amount) */\n      jump\t// in\n    tag_107:\n        /* \"Token.sol\":1652:1820  function mint(address to, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Token.sol\":987:1323  function initialize(... */\n    tag_50:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4188  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      tag_110\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4215  _getInitializableStorage */\n      tag_111\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4191:4217  _getInitializableStorage() */\n      jump\t// in\n    tag_110:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4217  InitializableStorage storage $ = _getInitializableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4298  bool isTopLevelCall */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4303  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4301:4317  !$._initializing */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4279:4317  bool isTopLevelCall = !$._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4345  uint64 initialized */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4349  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4362  $._initialized */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4327:4362  uint64 initialized = $._initialized */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4704:4721  bool initialSetup */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4739:4740  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4724:4735  initialized */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4724:4740  initialized == 0 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4724:4758  initialized == 0 && isTopLevelCall */\n      dup1\n      iszero\n      tag_112\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4744:4758  isTopLevelCall */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4724:4758  initialized == 0 && isTopLevelCall */\n    tag_112:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4704:4758  bool initialSetup = initialized == 0 && isTopLevelCall */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4768:4785  bool construction */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4803:4804  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4799  initialized */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4804  initialized == 1 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4838  initialized == 1 && address(this).code.length == 0 */\n      dup1\n      iszero\n      tag_113\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4837:4838  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4816:4820  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4808:4833  address(this).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4808:4838  address(this).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4788:4838  initialized == 1 && address(this).code.length == 0 */\n    tag_113:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4768:4838  bool construction = initialized == 1 && address(this).code.length == 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4854:4866  initialSetup */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4853:4866  !initialSetup */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4853:4883  !initialSetup && !construction */\n      dup1\n      iszero\n      tag_114\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4871:4883  construction */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4870:4883  !construction */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4853:4883  !initialSetup && !construction */\n    tag_114:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4849:4940  if (!initialSetup && !construction) {... */\n      iszero\n      tag_115\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4906:4929  InvalidInitialization() */\n      mload(0x40)\n      0xf92ee8a900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4849:4940  if (!initialSetup && !construction) {... */\n    tag_115:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4966:4967  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4949:4950  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4949:4963  $._initialized */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4949:4967  $._initialized = 1 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4981:4995  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4977:5044  if (isTopLevelCall) {... */\n      iszero\n      tag_116\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5029:5033  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5011:5012  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5011:5026  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5011:5033  $._initializing = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4977:5044  if (isTopLevelCall) {... */\n    tag_116:\n        /* \"Token.sol\":1180:1206  __ERC20_init(name, symbol) */\n      tag_118\n        /* \"Token.sol\":1193:1197  name */\n      dup8\n        /* \"Token.sol\":1199:1205  symbol */\n      dup8\n        /* \"Token.sol\":1180:1192  __ERC20_init */\n      tag_119\n        /* \"Token.sol\":1180:1206  __ERC20_init(name, symbol) */\n      jump\t// in\n    tag_118:\n        /* \"Token.sol\":1290:1316  __Ownable_init(msg.sender) */\n      tag_120\n        /* \"Token.sol\":1305:1315  msg.sender */\n      caller\n        /* \"Token.sol\":1290:1304  __Ownable_init */\n      tag_121\n        /* \"Token.sol\":1290:1316  __Ownable_init(msg.sender) */\n      jump\t// in\n    tag_120:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5068:5082  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5064:5165  if (isTopLevelCall) {... */\n      iszero\n      tag_122\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5116:5121  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5098:5099  $ */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5098:5113  $._initializing */\n      0x00\n      add\n      0x08\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5098:5121  $._initializing = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5140:5154  Initialized(1) */\n      0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5152:5153  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5140:5154  Initialized(1) */\n      mload(0x40)\n      tag_123\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5064:5165  if (isTopLevelCall) {... */\n    tag_122:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4092:5171  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"Token.sol\":987:1323  function initialize(... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4035:4206  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_54:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4100:4107  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4119:4141  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4144:4162  _getERC20Storage() */\n      tag_126\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4144:4160  _getERC20Storage */\n      tag_82\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4144:4162  _getERC20Storage() */\n      jump\t// in\n    tag_126:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4119:4162  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4179:4180  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4179:4190  $._balances */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4179:4199  $._balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4191:4198  account */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4179:4199  $._balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4172:4199  return $._balances[account] */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4035:4206  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n    tag_57:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_128\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_105\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_128:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      tag_130\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3246:3247  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3237  _transferOwnership */\n      tag_131\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3219:3249  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_130:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3155:3256  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n    tag_59:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2487:2494  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2506:2530  OwnableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2553  _getOwnableStorage() */\n      tag_133\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2551  _getOwnableStorage */\n      tag_134\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2533:2553  _getOwnableStorage() */\n      jump\t// in\n    tag_133:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2506:2553  OwnableStorage storage $ = _getOwnableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2571  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2570:2578  $._owner */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2563:2578  return $._owner */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2441:2585  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2954:3102  function symbol() public view virtual returns (string memory) {... */\n    tag_63:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3001:3014  string memory */\n      0x60\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3026:3048  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3051:3069  _getERC20Storage() */\n      tag_136\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3051:3067  _getERC20Storage */\n      tag_82\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3051:3069  _getERC20Storage() */\n      jump\t// in\n    tag_136:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3026:3069  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3086:3087  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3086:3095  $._symbol */\n      0x04\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":3079:3095  return $._symbol */\n      dup1\n      sload\n      tag_137\n      swap1\n      tag_84\n      jump\t// in\n    tag_137:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_138\n      swap1\n      tag_84\n      jump\t// in\n    tag_138:\n      dup1\n      iszero\n      tag_139\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_140\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_139)\n    tag_140:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_141:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_141\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_139:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2954:3102  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"Token.sol\":2218:2383  function burn(address to, uint256 amount) public onlyOwner {... */\n    tag_67:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_143\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_105\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_143:\n        /* \"Token.sol\":2359:2376  _burn(to, amount) */\n      tag_145\n        /* \"Token.sol\":2365:2367  to */\n      dup3\n        /* \"Token.sol\":2369:2375  amount */\n      dup3\n        /* \"Token.sol\":2359:2364  _burn */\n      tag_146\n        /* \"Token.sol\":2359:2376  _burn(to, amount) */\n      jump\t// in\n    tag_145:\n        /* \"Token.sol\":2218:2383  function burn(address to, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4401:4579  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_70:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4470:4474  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4486:4499  address owner */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4502:4514  _msgSender() */\n      tag_148\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4502:4512  _msgSender */\n      tag_91\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4502:4514  _msgSender() */\n      jump\t// in\n    tag_148:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4486:4514  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4524:4551  _transfer(owner, to, value) */\n      tag_149\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4534:4539  owner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4541:4543  to */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4545:4550  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4524:4533  _transfer */\n      tag_101\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4524:4551  _transfer(owner, to, value) */\n      jump\t// in\n    tag_149:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4568:4572  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4561:4572  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4401:4579  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4612:4807  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_75:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4692:4699  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4711:4733  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4736:4754  _getERC20Storage() */\n      tag_151\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4736:4752  _getERC20Storage */\n      tag_82\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4736:4754  _getERC20Storage() */\n      jump\t// in\n    tag_151:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4711:4754  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4771:4772  $ */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4771:4784  $._allowances */\n      0x01\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4771:4791  $._allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4785:4790  owner */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4771:4791  $._allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4771:4800  $._allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4792:4799  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4771:4800  $._allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4764:4800  return $._allowances[owner][spender] */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":4612:4807  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_79:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      tag_153\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2345  _checkOwner */\n      tag_105\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2334:2347  _checkOwner() */\n      jump\t// in\n    tag_153:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3509:3510  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3497  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3489:3511  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n      tag_155\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3562:3563  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3534:3565  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_156\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_156:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3485:3576  if (newOwner == address(0)) {... */\n    tag_155:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      tag_157\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3604:3612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3603  _transferOwnership */\n      tag_131\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3585:3613  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_157:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3405:3620  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":1947:2100  function _getERC20Storage() private pure returns (ERC20Storage storage $) {... */\n    tag_82:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":1997:2019  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2064:2084  ERC20StorageLocation */\n      0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2054:2084  $.slot := ERC20StorageLocation */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":1947:2100  function _getERC20Storage() private pure returns (ERC20Storage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n    tag_91:\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":940:947  address */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":959:976  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9905:10033  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_93:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9989:10026  _approve(owner, spender, value, true) */\n      tag_161\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9998:10003  owner */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10005:10012  spender */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10014:10019  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10021:10025  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9989:9997  _approve */\n      tag_162\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9989:10026  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_161:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9905:10033  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11649:12125  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_99:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11748:11772  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11775:11800  allowance(owner, spender) */\n      tag_164\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11785:11790  owner */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11792:11799  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11775:11784  allowance */\n      tag_75\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11775:11800  allowance(owner, spender) */\n      jump\t// in\n    tag_164:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11748:11800  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11833:11850  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11814:11830  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11814:11850  currentAllowance < type(uint256).max */\n      lt\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11810:12119  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_165\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11889:11894  value */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11870:11886  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11870:11894  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11866:11996  if (currentAllowance < value) {... */\n      iszero\n      tag_166\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11948:11955  spender */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11957:11973  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11975:11980  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11921:11981  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_167\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_167:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11866:11996  if (currentAllowance < value) {... */\n    tag_166:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12037:12094  _approve(owner, spender, currentAllowance - value, false) */\n      tag_169\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12046:12051  owner */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12053:12060  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12081:12086  value */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12062:12078  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12062:12086  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12088:12093  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12037:12045  _approve */\n      tag_162\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":12037:12094  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_169:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11810:12119  if (currentAllowance < type(uint256).max) {... */\n    tag_165:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11738:12125  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11649:12125  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6509:6809  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_101:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6608:6609  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6592:6610  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6592:6596  from */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6592:6610  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6588:6674  if (from == address(0)) {... */\n      tag_171\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6660:6661  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6633:6663  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_172\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_172:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6588:6674  if (from == address(0)) {... */\n    tag_171:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6701:6702  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6687:6703  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6687:6689  to */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6687:6703  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6683:6769  if (to == address(0)) {... */\n      tag_173\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6755:6756  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6726:6758  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_174\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_174:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6683:6769  if (to == address(0)) {... */\n    tag_173:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6778:6802  _update(from, to, value) */\n      tag_175\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6786:6790  from */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6792:6794  to */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6796:6801  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6778:6785  _update */\n      tag_176\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6778:6802  _update(from, to, value) */\n      jump\t// in\n    tag_175:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":6509:6809  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n    tag_105:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2740  _msgSender() */\n      tag_178\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2738  _msgSender */\n      tag_91\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2728:2740  _msgSender() */\n      jump\t// in\n    tag_178:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      tag_179\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2722  owner */\n      tag_59\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2724  owner() */\n      jump\t// in\n    tag_179:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2717:2740  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n      tag_180\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2802  _msgSender() */\n      tag_181\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2800  _msgSender */\n      tag_91\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2790:2802  _msgSender() */\n      jump\t// in\n    tag_181:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2763:2803  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_182\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_182:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2713:2814  if (owner() != _msgSender()) {... */\n    tag_180:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2658:2820  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8637:8845  function _mint(address account, uint256 value) internal {... */\n    tag_108:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8726:8727  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8707:8728  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8707:8714  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8707:8728  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8703:8794  if (account == address(0)) {... */\n      tag_184\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8780:8781  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8751:8783  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_185\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_185:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8703:8794  if (account == address(0)) {... */\n    tag_184:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8803:8838  _update(address(0), account, value) */\n      tag_186\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8819:8820  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8823:8830  account */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8832:8837  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8803:8810  _update */\n      tag_176\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8803:8838  _update(address(0), account, value) */\n      jump\t// in\n    tag_186:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8637:8845  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9071:9276  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n    tag_111:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9129:9159  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9171:9183  bytes32 slot */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9186:9213  _initializableStorageSlot() */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9186:9211  _initializableStorageSlot */\n      tag_189\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9186:9213  _initializableStorageSlot() */\n      jump\t// in\n    tag_188:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9171:9213  bytes32 slot = _initializableStorageSlot() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9256:9260  slot */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9246:9260  $.slot := slot */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9232:9270  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":9071:9276  function _getInitializableStorage() private pure returns (InitializableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2263:2410  function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {... */\n    tag_119:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      tag_191\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6947  _checkInitializing */\n      tag_192\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      jump\t// in\n    tag_191:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2365:2403  __ERC20_init_unchained(name_, symbol_) */\n      tag_194\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2388:2393  name_ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2395:2402  symbol_ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2365:2387  __ERC20_init_unchained */\n      tag_195\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2365:2403  __ERC20_init_unchained(name_, symbol_) */\n      jump\t// in\n    tag_194:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2263:2410  function __ERC20_init(string memory name_, string memory symbol_) internal onlyInitializing {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1847:1974  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n    tag_121:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      tag_197\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6947  _checkInitializing */\n      tag_192\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      jump\t// in\n    tag_197:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      tag_199\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1954:1966  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1953  __Ownable_init_unchained */\n      tag_200\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1929:1967  __Ownable_init_unchained(initialOwner) */\n      jump\t// in\n    tag_199:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1847:1974  function __Ownable_init(address initialOwner) internal onlyInitializing {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_131:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3871  OwnableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3894  _getOwnableStorage() */\n      tag_202\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3892  _getOwnableStorage */\n      tag_134\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3874:3894  _getOwnableStorage() */\n      jump\t// in\n    tag_202:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3847:3894  OwnableStorage storage $ = _getOwnableStorage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3904:3920  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3924  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3923:3931  $._owner */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3904:3931  address oldOwner = $._owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3952:3960  newOwner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3942  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3949  $._owner */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3941:3960  $._owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":4006:4014  newOwner */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3996:4004  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3975:4015  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3837:4022  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":3774:4022  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1192:1351  function _getOwnableStorage() private pure returns (OwnableStorage storage $) {... */\n    tag_134:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1244:1268  OwnableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1313:1335  OwnableStorageLocation */\n      0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1303:1335  $.slot := OwnableStorageLocation */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1192:1351  function _getOwnableStorage() private pure returns (OwnableStorage storage $) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9163:9369  function _burn(address account, uint256 value) internal {... */\n    tag_146:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9252:9253  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9233:9254  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9233:9240  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9233:9254  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9229:9318  if (account == address(0)) {... */\n      tag_205\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9304:9305  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9277:9307  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_206\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_206:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9229:9318  if (account == address(0)) {... */\n    tag_205:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9327:9362  _update(account, address(0), value) */\n      tag_207\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9335:9342  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9352:9353  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9356:9361  value */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9327:9334  _update */\n      tag_176\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9327:9362  _update(account, address(0), value) */\n      jump\t// in\n    tag_207:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":9163:9369  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10880:11367  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_162:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10988:11010  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11013:11031  _getERC20Storage() */\n      tag_209\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11013:11029  _getERC20Storage */\n      tag_82\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11013:11031  _getERC20Storage() */\n      jump\t// in\n    tag_209:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10988:11031  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11062:11063  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11045:11064  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11045:11050  owner */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11045:11064  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11041:11130  if (owner == address(0)) {... */\n      tag_210\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11116:11117  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11087:11119  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_211\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_211:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11041:11130  if (owner == address(0)) {... */\n    tag_210:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11162:11163  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11143:11164  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11143:11150  spender */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11143:11164  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11139:11229  if (spender == address(0)) {... */\n      tag_212\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11215:11216  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11187:11218  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_213\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_213:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11139:11229  if (spender == address(0)) {... */\n    tag_212:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11270:11275  value */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11238:11239  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11238:11251  $._allowances */\n      0x01\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11238:11258  $._allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11252:11257  owner */\n      dup8\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11238:11258  $._allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11238:11267  $._allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11259:11266  spender */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11238:11267  $._allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11238:11275  $._allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11289:11298  emitEvent */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11285:11361  if (emitEvent) {... */\n      iszero\n      tag_214\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11335:11342  spender */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11319:11350  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11328:11333  owner */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11319:11350  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11344:11349  value */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11319:11350  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_215\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_215:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":11285:11361  if (emitEvent) {... */\n    tag_214:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10978:11367  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":10880:11367  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7124:8294  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_176:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7209:7231  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7234:7252  _getERC20Storage() */\n      tag_217\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7234:7250  _getERC20Storage */\n      tag_82\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7234:7252  _getERC20Storage() */\n      jump\t// in\n    tag_217:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7209:7252  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7282:7283  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7266:7284  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7266:7270  from */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7266:7284  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7262:7808  if (from == address(0)) {... */\n      tag_218\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7420:7425  value */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7402:7403  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7402:7416  $._totalSupply */\n      0x02\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7402:7425  $._totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_219\n      swap2\n      swap1\n      tag_220\n      jump\t// in\n    tag_219:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7262:7808  if (from == address(0)) {... */\n      jump(tag_221)\n    tag_218:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7456:7475  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7478:7479  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7478:7489  $._balances */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7478:7495  $._balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7490:7494  from */\n      dup7\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7478:7495  $._balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7456:7495  uint256 fromBalance = $._balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7527:7532  value */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7513:7524  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7513:7532  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7509:7624  if (fromBalance < value) {... */\n      iszero\n      tag_222\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7584:7588  from */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7590:7601  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7603:7608  value */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7559:7609  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_223\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_223:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7509:7624  if (fromBalance < value) {... */\n    tag_222:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7778:7783  value */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7764:7775  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7764:7783  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7744:7745  $ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7744:7755  $._balances */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7744:7761  $._balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7756:7760  from */\n      dup8\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7744:7761  $._balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7744:7783  $._balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7442:7808  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7262:7808  if (from == address(0)) {... */\n    tag_221:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7836:7837  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7822:7838  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7822:7824  to */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7822:7838  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7818:8247  if (to == address(0)) {... */\n      tag_224\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8003:8008  value */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7985:7986  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7985:7999  $._totalSupply */\n      0x02\n      add\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7985:8008  $._totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7818:8247  if (to == address(0)) {... */\n      jump(tag_225)\n    tag_224:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8217:8222  value */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8198:8199  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8198:8209  $._balances */\n      0x00\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8198:8213  $._balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8210:8212  to */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8198:8213  $._balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8198:8222  $._balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7818:8247  if (to == address(0)) {... */\n    tag_225:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8277:8279  to */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8262:8287  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8271:8275  from */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8262:8287  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8281:8286  value */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":8262:8287  Transfer(from, to, value) */\n      mload(0x40)\n      tag_226\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_226:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7199:8294  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":7124:8294  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8819:8941  function _initializableStorageSlot() internal pure virtual returns (bytes32) {... */\n    tag_189:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8887:8894  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":3147:3213  0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00 */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8913:8934  INITIALIZABLE_STORAGE */\n      0x00\n      shl\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8906:8934  return INITIALIZABLE_STORAGE */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8819:8941  function _initializableStorageSlot() internal pure virtual returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7082:7223  function _checkInitializing() internal view virtual {... */\n    tag_192:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7149:7166  _isInitializing() */\n      tag_229\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7149:7164  _isInitializing */\n      tag_230\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7149:7166  _isInitializing() */\n      jump\t// in\n    tag_229:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7144:7217  if (!_isInitializing()) {... */\n      tag_231\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7189:7206  NotInitializing() */\n      mload(0x40)\n      0xd7e6bcf800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7144:7217  if (!_isInitializing()) {... */\n    tag_231:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7082:7223  function _checkInitializing() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2416:2632  function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {... */\n    tag_195:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      tag_233\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6947  _checkInitializing */\n      tag_192\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      jump\t// in\n    tag_233:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2528:2550  ERC20Storage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2553:2571  _getERC20Storage() */\n      tag_235\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2553:2569  _getERC20Storage */\n      tag_82\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2553:2571  _getERC20Storage() */\n      jump\t// in\n    tag_235:\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2528:2571  ERC20Storage storage $ = _getERC20Storage() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2591:2596  name_ */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2581:2582  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2581:2588  $._name */\n      0x03\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2581:2596  $._name = name_ */\n      swap1\n      dup2\n      tag_236\n      swap2\n      swap1\n      tag_237\n      jump\t// in\n    tag_236:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2618:2625  symbol_ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2606:2607  $ */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2606:2615  $._symbol */\n      0x04\n      add\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2606:2625  $._symbol = symbol_ */\n      swap1\n      dup2\n      tag_238\n      swap2\n      swap1\n      tag_237\n      jump\t// in\n    tag_238:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2518:2632  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":2416:2632  function __ERC20_init_unchained(string memory name_, string memory symbol_) internal onlyInitializing {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1980:2215  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n    tag_200:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      tag_240\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6947  _checkInitializing */\n      tag_192\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6929:6949  _checkInitializing() */\n      jump\t// in\n    tag_240:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2100:2101  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2102  initialOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2088  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2076:2102  initialOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2072:2167  if (initialOwner == address(0)) {... */\n      tag_242\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2153:2154  0 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2125:2156  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_243\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_243:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2072:2167  if (initialOwner == address(0)) {... */\n    tag_242:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2208  _transferOwnership(initialOwner) */\n      tag_244\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2195:2207  initialOwner */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2194  _transferOwnership */\n      tag_131\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":2176:2208  _transferOwnership(initialOwner) */\n      jump\t// in\n    tag_244:\n        /* \"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":1980:2215  function __Ownable_init_unchained(address initialOwner) internal onlyInitializing {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8485:8605  function _isInitializing() internal view returns (bool) {... */\n    tag_230:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8535:8539  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8558:8584  _getInitializableStorage() */\n      tag_246\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8558:8582  _getInitializableStorage */\n      tag_111\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8558:8584  _getInitializableStorage() */\n      jump\t// in\n    tag_246:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8558:8598  _getInitializableStorage()._initializing */\n      0x00\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8551:8598  return _getInitializableStorage()._initializing */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8485:8605  function _isInitializing() internal view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_247:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_248:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_249:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_250:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_251:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_304\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_247\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":711:782   */\n      tag_305\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_248\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_306\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_249\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":881:910   */\n      tag_307\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_250\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_24:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_309\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_251\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1242:1317   */\n    tag_252:\n        /* \"#utility.yul\":1275:1281   */\n      0x00\n        /* \"#utility.yul\":1308:1310   */\n      0x40\n        /* \"#utility.yul\":1302:1311   */\n      mload\n        /* \"#utility.yul\":1292:1311   */\n      swap1\n      pop\n        /* \"#utility.yul\":1242:1317   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_253:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      0x00\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1446:1563   */\n    tag_254:\n        /* \"#utility.yul\":1555:1556   */\n      0x00\n        /* \"#utility.yul\":1552:1553   */\n      0x00\n        /* \"#utility.yul\":1545:1557   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_255:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_256:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_315\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_255\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_257:\n        /* \"#utility.yul\":1876:1900   */\n      tag_317\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_256\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_318\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      0x00\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_318:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_258:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_320\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_257\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_259:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_260:\n        /* \"#utility.yul\":2232:2256   */\n      tag_323\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_259\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_324\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      0x00\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_324:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_261:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_326\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_260\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_27:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      0x00\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_328\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_329\n      tag_253\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":2525:2644   */\n    tag_328:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_330\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_258\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_331\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_261\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_262:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_263:\n        /* \"#utility.yul\":3089:3110   */\n      tag_334\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_262\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_30:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_336\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_263\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_264:\n        /* \"#utility.yul\":3426:3450   */\n      tag_338\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_259\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_34:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_340\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_264\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4310   */\n    tag_37:\n        /* \"#utility.yul\":3768:3774   */\n      0x00\n        /* \"#utility.yul\":3776:3782   */\n      0x00\n        /* \"#utility.yul\":3784:3790   */\n      0x00\n        /* \"#utility.yul\":3833:3835   */\n      0x60\n        /* \"#utility.yul\":3821:3830   */\n      dup5\n        /* \"#utility.yul\":3812:3819   */\n      dup7\n        /* \"#utility.yul\":3808:3831   */\n      sub\n        /* \"#utility.yul\":3804:3836   */\n      slt\n        /* \"#utility.yul\":3801:3920   */\n      iszero\n      tag_342\n      jumpi\n        /* \"#utility.yul\":3839:3918   */\n      tag_343\n      tag_253\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":3801:3920   */\n    tag_342:\n        /* \"#utility.yul\":3959:3960   */\n      0x00\n        /* \"#utility.yul\":3984:4037   */\n      tag_344\n        /* \"#utility.yul\":4029:4036   */\n      dup7\n        /* \"#utility.yul\":4020:4026   */\n      dup3\n        /* \"#utility.yul\":4009:4018   */\n      dup8\n        /* \"#utility.yul\":4005:4027   */\n      add\n        /* \"#utility.yul\":3984:4037   */\n      tag_258\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":3974:4037   */\n      swap4\n      pop\n        /* \"#utility.yul\":3930:4047   */\n      pop\n        /* \"#utility.yul\":4086:4088   */\n      0x20\n        /* \"#utility.yul\":4112:4165   */\n      tag_345\n        /* \"#utility.yul\":4157:4164   */\n      dup7\n        /* \"#utility.yul\":4148:4154   */\n      dup3\n        /* \"#utility.yul\":4137:4146   */\n      dup8\n        /* \"#utility.yul\":4133:4155   */\n      add\n        /* \"#utility.yul\":4112:4165   */\n      tag_258\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":4102:4165   */\n      swap3\n      pop\n        /* \"#utility.yul\":4057:4175   */\n      pop\n        /* \"#utility.yul\":4214:4216   */\n      0x40\n        /* \"#utility.yul\":4240:4293   */\n      tag_346\n        /* \"#utility.yul\":4285:4292   */\n      dup7\n        /* \"#utility.yul\":4276:4282   */\n      dup3\n        /* \"#utility.yul\":4265:4274   */\n      dup8\n        /* \"#utility.yul\":4261:4283   */\n      add\n        /* \"#utility.yul\":4240:4293   */\n      tag_261\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":4230:4293   */\n      swap2\n      pop\n        /* \"#utility.yul\":4185:4303   */\n      pop\n        /* \"#utility.yul\":3691:4310   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4316:4402   */\n    tag_265:\n        /* \"#utility.yul\":4351:4358   */\n      0x00\n        /* \"#utility.yul\":4391:4395   */\n      0xff\n        /* \"#utility.yul\":4384:4389   */\n      dup3\n        /* \"#utility.yul\":4380:4396   */\n      and\n        /* \"#utility.yul\":4369:4396   */\n      swap1\n      pop\n        /* \"#utility.yul\":4316:4402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4408:4520   */\n    tag_266:\n        /* \"#utility.yul\":4491:4513   */\n      tag_349\n        /* \"#utility.yul\":4507:4512   */\n      dup2\n        /* \"#utility.yul\":4491:4513   */\n      tag_265\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":4486:4489   */\n      dup3\n        /* \"#utility.yul\":4479:4514   */\n      mstore\n        /* \"#utility.yul\":4408:4520   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4526:4740   */\n    tag_43:\n        /* \"#utility.yul\":4615:4619   */\n      0x00\n        /* \"#utility.yul\":4653:4655   */\n      0x20\n        /* \"#utility.yul\":4642:4651   */\n      dup3\n        /* \"#utility.yul\":4638:4656   */\n      add\n        /* \"#utility.yul\":4630:4656   */\n      swap1\n      pop\n        /* \"#utility.yul\":4666:4733   */\n      tag_351\n        /* \"#utility.yul\":4730:4731   */\n      0x00\n        /* \"#utility.yul\":4719:4728   */\n      dup4\n        /* \"#utility.yul\":4715:4732   */\n      add\n        /* \"#utility.yul\":4706:4712   */\n      dup5\n        /* \"#utility.yul\":4666:4733   */\n      tag_266\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":4526:4740   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4746:4863   */\n    tag_267:\n        /* \"#utility.yul\":4855:4856   */\n      0x00\n        /* \"#utility.yul\":4852:4853   */\n      0x00\n        /* \"#utility.yul\":4845:4857   */\n      revert\n        /* \"#utility.yul\":4869:4986   */\n    tag_268:\n        /* \"#utility.yul\":4978:4979   */\n      0x00\n        /* \"#utility.yul\":4975:4976   */\n      0x00\n        /* \"#utility.yul\":4968:4980   */\n      revert\n        /* \"#utility.yul\":4992:5172   */\n    tag_269:\n        /* \"#utility.yul\":5040:5117   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5037:5038   */\n      0x00\n        /* \"#utility.yul\":5030:5118   */\n      mstore\n        /* \"#utility.yul\":5137:5141   */\n      0x41\n        /* \"#utility.yul\":5134:5135   */\n      0x04\n        /* \"#utility.yul\":5127:5142   */\n      mstore\n        /* \"#utility.yul\":5161:5165   */\n      0x24\n        /* \"#utility.yul\":5158:5159   */\n      0x00\n        /* \"#utility.yul\":5151:5166   */\n      revert\n        /* \"#utility.yul\":5178:5459   */\n    tag_270:\n        /* \"#utility.yul\":5261:5288   */\n      tag_356\n        /* \"#utility.yul\":5283:5287   */\n      dup3\n        /* \"#utility.yul\":5261:5288   */\n      tag_250\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":5253:5259   */\n      dup2\n        /* \"#utility.yul\":5249:5289   */\n      add\n        /* \"#utility.yul\":5391:5397   */\n      dup2\n        /* \"#utility.yul\":5379:5389   */\n      dup2\n        /* \"#utility.yul\":5376:5398   */\n      lt\n        /* \"#utility.yul\":5355:5373   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5343:5353   */\n      dup3\n        /* \"#utility.yul\":5340:5374   */\n      gt\n        /* \"#utility.yul\":5337:5399   */\n      or\n        /* \"#utility.yul\":5334:5422   */\n      iszero\n      tag_357\n      jumpi\n        /* \"#utility.yul\":5402:5420   */\n      tag_358\n      tag_269\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":5334:5422   */\n    tag_357:\n        /* \"#utility.yul\":5442:5452   */\n      dup1\n        /* \"#utility.yul\":5438:5440   */\n      0x40\n        /* \"#utility.yul\":5431:5453   */\n      mstore\n        /* \"#utility.yul\":5221:5459   */\n      pop\n        /* \"#utility.yul\":5178:5459   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5465:5594   */\n    tag_271:\n        /* \"#utility.yul\":5499:5505   */\n      0x00\n        /* \"#utility.yul\":5526:5546   */\n      tag_360\n      tag_252\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":5516:5546   */\n      swap1\n      pop\n        /* \"#utility.yul\":5555:5588   */\n      tag_361\n        /* \"#utility.yul\":5583:5587   */\n      dup3\n        /* \"#utility.yul\":5575:5581   */\n      dup3\n        /* \"#utility.yul\":5555:5588   */\n      tag_270\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":5465:5594   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5600:5908   */\n    tag_272:\n        /* \"#utility.yul\":5662:5666   */\n      0x00\n        /* \"#utility.yul\":5752:5770   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5744:5750   */\n      dup3\n        /* \"#utility.yul\":5741:5771   */\n      gt\n        /* \"#utility.yul\":5738:5794   */\n      iszero\n      tag_363\n      jumpi\n        /* \"#utility.yul\":5774:5792   */\n      tag_364\n      tag_269\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":5738:5794   */\n    tag_363:\n        /* \"#utility.yul\":5812:5841   */\n      tag_365\n        /* \"#utility.yul\":5834:5840   */\n      dup3\n        /* \"#utility.yul\":5812:5841   */\n      tag_250\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":5804:5841   */\n      swap1\n      pop\n        /* \"#utility.yul\":5896:5900   */\n      0x20\n        /* \"#utility.yul\":5890:5894   */\n      dup2\n        /* \"#utility.yul\":5886:5901   */\n      add\n        /* \"#utility.yul\":5878:5901   */\n      swap1\n      pop\n        /* \"#utility.yul\":5600:5908   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5914:6062   */\n    tag_273:\n        /* \"#utility.yul\":6012:6018   */\n      dup3\n        /* \"#utility.yul\":6007:6010   */\n      dup2\n        /* \"#utility.yul\":6002:6005   */\n      dup4\n        /* \"#utility.yul\":5989:6019   */\n      calldatacopy\n        /* \"#utility.yul\":6053:6054   */\n      0x00\n        /* \"#utility.yul\":6044:6050   */\n      dup4\n        /* \"#utility.yul\":6039:6042   */\n      dup4\n        /* \"#utility.yul\":6035:6051   */\n      add\n        /* \"#utility.yul\":6028:6055   */\n      mstore\n        /* \"#utility.yul\":5914:6062   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6068:6493   */\n    tag_274:\n        /* \"#utility.yul\":6146:6151   */\n      0x00\n        /* \"#utility.yul\":6171:6237   */\n      tag_368\n        /* \"#utility.yul\":6187:6236   */\n      tag_369\n        /* \"#utility.yul\":6229:6235   */\n      dup5\n        /* \"#utility.yul\":6187:6236   */\n      tag_272\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":6171:6237   */\n      tag_271\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":6162:6237   */\n      swap1\n      pop\n        /* \"#utility.yul\":6260:6266   */\n      dup3\n        /* \"#utility.yul\":6253:6258   */\n      dup2\n        /* \"#utility.yul\":6246:6267   */\n      mstore\n        /* \"#utility.yul\":6298:6302   */\n      0x20\n        /* \"#utility.yul\":6291:6296   */\n      dup2\n        /* \"#utility.yul\":6287:6303   */\n      add\n        /* \"#utility.yul\":6336:6339   */\n      dup5\n        /* \"#utility.yul\":6327:6333   */\n      dup5\n        /* \"#utility.yul\":6322:6325   */\n      dup5\n        /* \"#utility.yul\":6318:6334   */\n      add\n        /* \"#utility.yul\":6315:6340   */\n      gt\n        /* \"#utility.yul\":6312:6424   */\n      iszero\n      tag_370\n      jumpi\n        /* \"#utility.yul\":6343:6422   */\n      tag_371\n      tag_268\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":6312:6424   */\n    tag_370:\n        /* \"#utility.yul\":6433:6487   */\n      tag_372\n        /* \"#utility.yul\":6480:6486   */\n      dup5\n        /* \"#utility.yul\":6475:6478   */\n      dup3\n        /* \"#utility.yul\":6470:6473   */\n      dup6\n        /* \"#utility.yul\":6433:6487   */\n      tag_273\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":6152:6493   */\n      pop\n        /* \"#utility.yul\":6068:6493   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6513:6853   */\n    tag_275:\n        /* \"#utility.yul\":6569:6574   */\n      0x00\n        /* \"#utility.yul\":6618:6621   */\n      dup3\n        /* \"#utility.yul\":6611:6615   */\n      0x1f\n        /* \"#utility.yul\":6603:6609   */\n      dup4\n        /* \"#utility.yul\":6599:6616   */\n      add\n        /* \"#utility.yul\":6595:6622   */\n      slt\n        /* \"#utility.yul\":6585:6707   */\n      tag_374\n      jumpi\n        /* \"#utility.yul\":6626:6705   */\n      tag_375\n      tag_267\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":6585:6707   */\n    tag_374:\n        /* \"#utility.yul\":6743:6749   */\n      dup2\n        /* \"#utility.yul\":6730:6750   */\n      calldataload\n        /* \"#utility.yul\":6768:6847   */\n      tag_376\n        /* \"#utility.yul\":6843:6846   */\n      dup5\n        /* \"#utility.yul\":6835:6841   */\n      dup3\n        /* \"#utility.yul\":6828:6832   */\n      0x20\n        /* \"#utility.yul\":6820:6826   */\n      dup7\n        /* \"#utility.yul\":6816:6833   */\n      add\n        /* \"#utility.yul\":6768:6847   */\n      tag_274\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":6759:6847   */\n      swap2\n      pop\n        /* \"#utility.yul\":6575:6853   */\n      pop\n        /* \"#utility.yul\":6513:6853   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6859:7693   */\n    tag_49:\n        /* \"#utility.yul\":6947:6953   */\n      0x00\n        /* \"#utility.yul\":6955:6961   */\n      0x00\n        /* \"#utility.yul\":7004:7006   */\n      0x40\n        /* \"#utility.yul\":6992:7001   */\n      dup4\n        /* \"#utility.yul\":6983:6990   */\n      dup6\n        /* \"#utility.yul\":6979:7002   */\n      sub\n        /* \"#utility.yul\":6975:7007   */\n      slt\n        /* \"#utility.yul\":6972:7091   */\n      iszero\n      tag_378\n      jumpi\n        /* \"#utility.yul\":7010:7089   */\n      tag_379\n      tag_253\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":6972:7091   */\n    tag_378:\n        /* \"#utility.yul\":7158:7159   */\n      0x00\n        /* \"#utility.yul\":7147:7156   */\n      dup4\n        /* \"#utility.yul\":7143:7160   */\n      add\n        /* \"#utility.yul\":7130:7161   */\n      calldataload\n        /* \"#utility.yul\":7188:7206   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7180:7186   */\n      dup2\n        /* \"#utility.yul\":7177:7207   */\n      gt\n        /* \"#utility.yul\":7174:7291   */\n      iszero\n      tag_380\n      jumpi\n        /* \"#utility.yul\":7210:7289   */\n      tag_381\n      tag_254\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":7174:7291   */\n    tag_380:\n        /* \"#utility.yul\":7315:7378   */\n      tag_382\n        /* \"#utility.yul\":7370:7377   */\n      dup6\n        /* \"#utility.yul\":7361:7367   */\n      dup3\n        /* \"#utility.yul\":7350:7359   */\n      dup7\n        /* \"#utility.yul\":7346:7368   */\n      add\n        /* \"#utility.yul\":7315:7378   */\n      tag_275\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":7305:7378   */\n      swap3\n      pop\n        /* \"#utility.yul\":7101:7388   */\n      pop\n        /* \"#utility.yul\":7455:7457   */\n      0x20\n        /* \"#utility.yul\":7444:7453   */\n      dup4\n        /* \"#utility.yul\":7440:7458   */\n      add\n        /* \"#utility.yul\":7427:7459   */\n      calldataload\n        /* \"#utility.yul\":7486:7504   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7478:7484   */\n      dup2\n        /* \"#utility.yul\":7475:7505   */\n      gt\n        /* \"#utility.yul\":7472:7589   */\n      iszero\n      tag_383\n      jumpi\n        /* \"#utility.yul\":7508:7587   */\n      tag_384\n      tag_254\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":7472:7589   */\n    tag_383:\n        /* \"#utility.yul\":7613:7676   */\n      tag_385\n        /* \"#utility.yul\":7668:7675   */\n      dup6\n        /* \"#utility.yul\":7659:7665   */\n      dup3\n        /* \"#utility.yul\":7648:7657   */\n      dup7\n        /* \"#utility.yul\":7644:7666   */\n      add\n        /* \"#utility.yul\":7613:7676   */\n      tag_275\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":7603:7676   */\n      swap2\n      pop\n        /* \"#utility.yul\":7398:7686   */\n      pop\n        /* \"#utility.yul\":6859:7693   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7699:8028   */\n    tag_53:\n        /* \"#utility.yul\":7758:7764   */\n      0x00\n        /* \"#utility.yul\":7807:7809   */\n      0x20\n        /* \"#utility.yul\":7795:7804   */\n      dup3\n        /* \"#utility.yul\":7786:7793   */\n      dup5\n        /* \"#utility.yul\":7782:7805   */\n      sub\n        /* \"#utility.yul\":7778:7810   */\n      slt\n        /* \"#utility.yul\":7775:7894   */\n      iszero\n      tag_387\n      jumpi\n        /* \"#utility.yul\":7813:7892   */\n      tag_388\n      tag_253\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":7775:7894   */\n    tag_387:\n        /* \"#utility.yul\":7933:7934   */\n      0x00\n        /* \"#utility.yul\":7958:8011   */\n      tag_389\n        /* \"#utility.yul\":8003:8010   */\n      dup5\n        /* \"#utility.yul\":7994:8000   */\n      dup3\n        /* \"#utility.yul\":7983:7992   */\n      dup6\n        /* \"#utility.yul\":7979:8001   */\n      add\n        /* \"#utility.yul\":7958:8011   */\n      tag_258\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":7948:8011   */\n      swap2\n      pop\n        /* \"#utility.yul\":7904:8021   */\n      pop\n        /* \"#utility.yul\":7699:8028   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8034:8152   */\n    tag_276:\n        /* \"#utility.yul\":8121:8145   */\n      tag_391\n        /* \"#utility.yul\":8139:8144   */\n      dup2\n        /* \"#utility.yul\":8121:8145   */\n      tag_256\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":8116:8119   */\n      dup3\n        /* \"#utility.yul\":8109:8146   */\n      mstore\n        /* \"#utility.yul\":8034:8152   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8158:8380   */\n    tag_61:\n        /* \"#utility.yul\":8251:8255   */\n      0x00\n        /* \"#utility.yul\":8289:8291   */\n      0x20\n        /* \"#utility.yul\":8278:8287   */\n      dup3\n        /* \"#utility.yul\":8274:8292   */\n      add\n        /* \"#utility.yul\":8266:8292   */\n      swap1\n      pop\n        /* \"#utility.yul\":8302:8373   */\n      tag_393\n        /* \"#utility.yul\":8370:8371   */\n      0x00\n        /* \"#utility.yul\":8359:8368   */\n      dup4\n        /* \"#utility.yul\":8355:8372   */\n      add\n        /* \"#utility.yul\":8346:8352   */\n      dup5\n        /* \"#utility.yul\":8302:8373   */\n      tag_276\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":8158:8380   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8386:8860   */\n    tag_74:\n        /* \"#utility.yul\":8454:8460   */\n      0x00\n        /* \"#utility.yul\":8462:8468   */\n      0x00\n        /* \"#utility.yul\":8511:8513   */\n      0x40\n        /* \"#utility.yul\":8499:8508   */\n      dup4\n        /* \"#utility.yul\":8490:8497   */\n      dup6\n        /* \"#utility.yul\":8486:8509   */\n      sub\n        /* \"#utility.yul\":8482:8514   */\n      slt\n        /* \"#utility.yul\":8479:8598   */\n      iszero\n      tag_395\n      jumpi\n        /* \"#utility.yul\":8517:8596   */\n      tag_396\n      tag_253\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":8479:8598   */\n    tag_395:\n        /* \"#utility.yul\":8637:8638   */\n      0x00\n        /* \"#utility.yul\":8662:8715   */\n      tag_397\n        /* \"#utility.yul\":8707:8714   */\n      dup6\n        /* \"#utility.yul\":8698:8704   */\n      dup3\n        /* \"#utility.yul\":8687:8696   */\n      dup7\n        /* \"#utility.yul\":8683:8705   */\n      add\n        /* \"#utility.yul\":8662:8715   */\n      tag_258\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":8652:8715   */\n      swap3\n      pop\n        /* \"#utility.yul\":8608:8725   */\n      pop\n        /* \"#utility.yul\":8764:8766   */\n      0x20\n        /* \"#utility.yul\":8790:8843   */\n      tag_398\n        /* \"#utility.yul\":8835:8842   */\n      dup6\n        /* \"#utility.yul\":8826:8832   */\n      dup3\n        /* \"#utility.yul\":8815:8824   */\n      dup7\n        /* \"#utility.yul\":8811:8833   */\n      add\n        /* \"#utility.yul\":8790:8843   */\n      tag_258\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":8780:8843   */\n      swap2\n      pop\n        /* \"#utility.yul\":8735:8853   */\n      pop\n        /* \"#utility.yul\":8386:8860   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8866:9046   */\n    tag_277:\n        /* \"#utility.yul\":8914:8991   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8911:8912   */\n      0x00\n        /* \"#utility.yul\":8904:8992   */\n      mstore\n        /* \"#utility.yul\":9011:9015   */\n      0x22\n        /* \"#utility.yul\":9008:9009   */\n      0x04\n        /* \"#utility.yul\":9001:9016   */\n      mstore\n        /* \"#utility.yul\":9035:9039   */\n      0x24\n        /* \"#utility.yul\":9032:9033   */\n      0x00\n        /* \"#utility.yul\":9025:9040   */\n      revert\n        /* \"#utility.yul\":9052:9372   */\n    tag_84:\n        /* \"#utility.yul\":9096:9102   */\n      0x00\n        /* \"#utility.yul\":9133:9134   */\n      0x02\n        /* \"#utility.yul\":9127:9131   */\n      dup3\n        /* \"#utility.yul\":9123:9135   */\n      div\n        /* \"#utility.yul\":9113:9135   */\n      swap1\n      pop\n        /* \"#utility.yul\":9180:9181   */\n      0x01\n        /* \"#utility.yul\":9174:9178   */\n      dup3\n        /* \"#utility.yul\":9170:9182   */\n      and\n        /* \"#utility.yul\":9201:9219   */\n      dup1\n        /* \"#utility.yul\":9191:9272   */\n      tag_401\n      jumpi\n        /* \"#utility.yul\":9257:9261   */\n      0x7f\n        /* \"#utility.yul\":9249:9255   */\n      dup3\n        /* \"#utility.yul\":9245:9262   */\n      and\n        /* \"#utility.yul\":9235:9262   */\n      swap2\n      pop\n        /* \"#utility.yul\":9191:9272   */\n    tag_401:\n        /* \"#utility.yul\":9319:9321   */\n      0x20\n        /* \"#utility.yul\":9311:9317   */\n      dup3\n        /* \"#utility.yul\":9308:9322   */\n      lt\n        /* \"#utility.yul\":9288:9306   */\n      dup2\n        /* \"#utility.yul\":9285:9323   */\n      sub\n        /* \"#utility.yul\":9282:9366   */\n      tag_402\n      jumpi\n        /* \"#utility.yul\":9338:9356   */\n      tag_403\n      tag_277\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":9282:9366   */\n    tag_402:\n        /* \"#utility.yul\":9103:9372   */\n      pop\n        /* \"#utility.yul\":9052:9372   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9378:9463   */\n    tag_278:\n        /* \"#utility.yul\":9423:9430   */\n      0x00\n        /* \"#utility.yul\":9452:9457   */\n      dup2\n        /* \"#utility.yul\":9441:9457   */\n      swap1\n      pop\n        /* \"#utility.yul\":9378:9463   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9469:9570   */\n    tag_279:\n        /* \"#utility.yul\":9505:9512   */\n      0x00\n        /* \"#utility.yul\":9545:9563   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9538:9543   */\n      dup3\n        /* \"#utility.yul\":9534:9564   */\n      and\n        /* \"#utility.yul\":9523:9564   */\n      swap1\n      pop\n        /* \"#utility.yul\":9469:9570   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9576:9636   */\n    tag_280:\n        /* \"#utility.yul\":9604:9607   */\n      0x00\n        /* \"#utility.yul\":9625:9630   */\n      dup2\n        /* \"#utility.yul\":9618:9630   */\n      swap1\n      pop\n        /* \"#utility.yul\":9576:9636   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9642:9798   */\n    tag_281:\n        /* \"#utility.yul\":9699:9708   */\n      0x00\n        /* \"#utility.yul\":9732:9792   */\n      tag_408\n        /* \"#utility.yul\":9749:9791   */\n      tag_409\n        /* \"#utility.yul\":9758:9790   */\n      tag_410\n        /* \"#utility.yul\":9784:9789   */\n      dup5\n        /* \"#utility.yul\":9758:9790   */\n      tag_278\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":9749:9791   */\n      tag_280\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":9732:9792   */\n      tag_279\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":9719:9792   */\n      swap1\n      pop\n        /* \"#utility.yul\":9642:9798   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9804:9949   */\n    tag_282:\n        /* \"#utility.yul\":9898:9942   */\n      tag_412\n        /* \"#utility.yul\":9936:9941   */\n      dup2\n        /* \"#utility.yul\":9898:9942   */\n      tag_281\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":9893:9896   */\n      dup3\n        /* \"#utility.yul\":9886:9943   */\n      mstore\n        /* \"#utility.yul\":9804:9949   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9955:10191   */\n    tag_124:\n        /* \"#utility.yul\":10055:10059   */\n      0x00\n        /* \"#utility.yul\":10093:10095   */\n      0x20\n        /* \"#utility.yul\":10082:10091   */\n      dup3\n        /* \"#utility.yul\":10078:10096   */\n      add\n        /* \"#utility.yul\":10070:10096   */\n      swap1\n      pop\n        /* \"#utility.yul\":10106:10184   */\n      tag_414\n        /* \"#utility.yul\":10181:10182   */\n      0x00\n        /* \"#utility.yul\":10170:10179   */\n      dup4\n        /* \"#utility.yul\":10166:10183   */\n      add\n        /* \"#utility.yul\":10157:10163   */\n      dup5\n        /* \"#utility.yul\":10106:10184   */\n      tag_282\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":9955:10191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10197:10639   */\n    tag_168:\n        /* \"#utility.yul\":10346:10350   */\n      0x00\n        /* \"#utility.yul\":10384:10386   */\n      0x60\n        /* \"#utility.yul\":10373:10382   */\n      dup3\n        /* \"#utility.yul\":10369:10387   */\n      add\n        /* \"#utility.yul\":10361:10387   */\n      swap1\n      pop\n        /* \"#utility.yul\":10397:10468   */\n      tag_416\n        /* \"#utility.yul\":10465:10466   */\n      0x00\n        /* \"#utility.yul\":10454:10463   */\n      dup4\n        /* \"#utility.yul\":10450:10467   */\n      add\n        /* \"#utility.yul\":10441:10447   */\n      dup7\n        /* \"#utility.yul\":10397:10468   */\n      tag_276\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":10478:10550   */\n      tag_417\n        /* \"#utility.yul\":10546:10548   */\n      0x20\n        /* \"#utility.yul\":10535:10544   */\n      dup4\n        /* \"#utility.yul\":10531:10549   */\n      add\n        /* \"#utility.yul\":10522:10528   */\n      dup6\n        /* \"#utility.yul\":10478:10550   */\n      tag_264\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":10560:10632   */\n      tag_418\n        /* \"#utility.yul\":10628:10630   */\n      0x40\n        /* \"#utility.yul\":10617:10626   */\n      dup4\n        /* \"#utility.yul\":10613:10631   */\n      add\n        /* \"#utility.yul\":10604:10610   */\n      dup5\n        /* \"#utility.yul\":10560:10632   */\n      tag_264\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":10197:10639   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10645:10825   */\n    tag_283:\n        /* \"#utility.yul\":10693:10770   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10690:10691   */\n      0x00\n        /* \"#utility.yul\":10683:10771   */\n      mstore\n        /* \"#utility.yul\":10790:10794   */\n      0x11\n        /* \"#utility.yul\":10787:10788   */\n      0x04\n        /* \"#utility.yul\":10780:10795   */\n      mstore\n        /* \"#utility.yul\":10814:10818   */\n      0x24\n        /* \"#utility.yul\":10811:10812   */\n      0x00\n        /* \"#utility.yul\":10804:10819   */\n      revert\n        /* \"#utility.yul\":10831:11022   */\n    tag_220:\n        /* \"#utility.yul\":10871:10874   */\n      0x00\n        /* \"#utility.yul\":10890:10910   */\n      tag_421\n        /* \"#utility.yul\":10908:10909   */\n      dup3\n        /* \"#utility.yul\":10890:10910   */\n      tag_259\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":10885:10910   */\n      swap2\n      pop\n        /* \"#utility.yul\":10924:10944   */\n      tag_422\n        /* \"#utility.yul\":10942:10943   */\n      dup4\n        /* \"#utility.yul\":10924:10944   */\n      tag_259\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":10919:10944   */\n      swap3\n      pop\n        /* \"#utility.yul\":10967:10968   */\n      dup3\n        /* \"#utility.yul\":10964:10965   */\n      dup3\n        /* \"#utility.yul\":10960:10969   */\n      add\n        /* \"#utility.yul\":10953:10969   */\n      swap1\n      pop\n        /* \"#utility.yul\":10988:10991   */\n      dup1\n        /* \"#utility.yul\":10985:10986   */\n      dup3\n        /* \"#utility.yul\":10982:10992   */\n      gt\n        /* \"#utility.yul\":10979:11015   */\n      iszero\n      tag_423\n      jumpi\n        /* \"#utility.yul\":10995:11013   */\n      tag_424\n      tag_283\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":10979:11015   */\n    tag_423:\n        /* \"#utility.yul\":10831:11022   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11028:11169   */\n    tag_284:\n        /* \"#utility.yul\":11077:11081   */\n      0x00\n        /* \"#utility.yul\":11100:11103   */\n      dup2\n        /* \"#utility.yul\":11092:11103   */\n      swap1\n      pop\n        /* \"#utility.yul\":11123:11126   */\n      dup2\n        /* \"#utility.yul\":11120:11121   */\n      0x00\n        /* \"#utility.yul\":11113:11127   */\n      mstore\n        /* \"#utility.yul\":11157:11161   */\n      0x20\n        /* \"#utility.yul\":11154:11155   */\n      0x00\n        /* \"#utility.yul\":11144:11162   */\n      keccak256\n        /* \"#utility.yul\":11136:11162   */\n      swap1\n      pop\n        /* \"#utility.yul\":11028:11169   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11175:11268   */\n    tag_285:\n        /* \"#utility.yul\":11212:11218   */\n      0x00\n        /* \"#utility.yul\":11259:11261   */\n      0x20\n        /* \"#utility.yul\":11254:11256   */\n      0x1f\n        /* \"#utility.yul\":11247:11252   */\n      dup4\n        /* \"#utility.yul\":11243:11257   */\n      add\n        /* \"#utility.yul\":11239:11262   */\n      div\n        /* \"#utility.yul\":11229:11262   */\n      swap1\n      pop\n        /* \"#utility.yul\":11175:11268   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11274:11381   */\n    tag_286:\n        /* \"#utility.yul\":11318:11326   */\n      0x00\n        /* \"#utility.yul\":11368:11373   */\n      dup3\n        /* \"#utility.yul\":11362:11366   */\n      dup3\n        /* \"#utility.yul\":11358:11374   */\n      shl\n        /* \"#utility.yul\":11337:11374   */\n      swap1\n      pop\n        /* \"#utility.yul\":11274:11381   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11387:11780   */\n    tag_287:\n        /* \"#utility.yul\":11456:11462   */\n      0x00\n        /* \"#utility.yul\":11506:11507   */\n      0x08\n        /* \"#utility.yul\":11494:11504   */\n      dup4\n        /* \"#utility.yul\":11490:11508   */\n      mul\n        /* \"#utility.yul\":11529:11626   */\n      tag_429\n        /* \"#utility.yul\":11559:11625   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":11548:11557   */\n      dup3\n        /* \"#utility.yul\":11529:11626   */\n      tag_286\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":11647:11686   */\n      tag_430\n        /* \"#utility.yul\":11677:11685   */\n      dup7\n        /* \"#utility.yul\":11666:11675   */\n      dup4\n        /* \"#utility.yul\":11647:11686   */\n      tag_286\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":11635:11686   */\n      swap6\n      pop\n        /* \"#utility.yul\":11719:11723   */\n      dup1\n        /* \"#utility.yul\":11715:11724   */\n      not\n        /* \"#utility.yul\":11708:11713   */\n      dup5\n        /* \"#utility.yul\":11704:11725   */\n      and\n        /* \"#utility.yul\":11695:11725   */\n      swap4\n      pop\n        /* \"#utility.yul\":11768:11772   */\n      dup1\n        /* \"#utility.yul\":11758:11766   */\n      dup7\n        /* \"#utility.yul\":11754:11773   */\n      and\n        /* \"#utility.yul\":11747:11752   */\n      dup5\n        /* \"#utility.yul\":11744:11774   */\n      or\n        /* \"#utility.yul\":11734:11774   */\n      swap3\n      pop\n        /* \"#utility.yul\":11463:11780   */\n      pop\n      pop\n        /* \"#utility.yul\":11387:11780   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11786:11928   */\n    tag_288:\n        /* \"#utility.yul\":11836:11845   */\n      0x00\n        /* \"#utility.yul\":11869:11922   */\n      tag_432\n        /* \"#utility.yul\":11887:11921   */\n      tag_433\n        /* \"#utility.yul\":11896:11920   */\n      tag_434\n        /* \"#utility.yul\":11914:11919   */\n      dup5\n        /* \"#utility.yul\":11896:11920   */\n      tag_259\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":11887:11921   */\n      tag_280\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":11869:11922   */\n      tag_259\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":11856:11922   */\n      swap1\n      pop\n        /* \"#utility.yul\":11786:11928   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11934:12009   */\n    tag_289:\n        /* \"#utility.yul\":11977:11980   */\n      0x00\n        /* \"#utility.yul\":11998:12003   */\n      dup2\n        /* \"#utility.yul\":11991:12003   */\n      swap1\n      pop\n        /* \"#utility.yul\":11934:12009   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12015:12284   */\n    tag_290:\n        /* \"#utility.yul\":12125:12164   */\n      tag_437\n        /* \"#utility.yul\":12156:12163   */\n      dup4\n        /* \"#utility.yul\":12125:12164   */\n      tag_288\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":12186:12277   */\n      tag_438\n        /* \"#utility.yul\":12235:12276   */\n      tag_439\n        /* \"#utility.yul\":12259:12275   */\n      dup3\n        /* \"#utility.yul\":12235:12276   */\n      tag_289\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":12227:12233   */\n      dup5\n        /* \"#utility.yul\":12220:12224   */\n      dup5\n        /* \"#utility.yul\":12214:12225   */\n      sload\n        /* \"#utility.yul\":12186:12277   */\n      tag_287\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":12180:12184   */\n      dup3\n        /* \"#utility.yul\":12173:12278   */\n      sstore\n        /* \"#utility.yul\":12091:12284   */\n      pop\n        /* \"#utility.yul\":12015:12284   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12290:12363   */\n    tag_291:\n        /* \"#utility.yul\":12335:12338   */\n      0x00\n        /* \"#utility.yul\":12356:12357   */\n      0x00\n        /* \"#utility.yul\":12349:12357   */\n      swap1\n      pop\n        /* \"#utility.yul\":12290:12363   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":12369:12558   */\n    tag_292:\n        /* \"#utility.yul\":12446:12478   */\n      tag_442\n      tag_291\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":12487:12552   */\n      tag_443\n        /* \"#utility.yul\":12545:12551   */\n      dup2\n        /* \"#utility.yul\":12537:12543   */\n      dup5\n        /* \"#utility.yul\":12531:12535   */\n      dup5\n        /* \"#utility.yul\":12487:12552   */\n      tag_290\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":12422:12558   */\n      pop\n        /* \"#utility.yul\":12369:12558   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12564:12750   */\n    tag_293:\n        /* \"#utility.yul\":12624:12744   */\n    tag_445:\n        /* \"#utility.yul\":12641:12644   */\n      dup2\n        /* \"#utility.yul\":12634:12639   */\n      dup2\n        /* \"#utility.yul\":12631:12645   */\n      lt\n        /* \"#utility.yul\":12624:12744   */\n      iszero\n      tag_447\n      jumpi\n        /* \"#utility.yul\":12695:12734   */\n      tag_448\n        /* \"#utility.yul\":12732:12733   */\n      0x00\n        /* \"#utility.yul\":12725:12730   */\n      dup3\n        /* \"#utility.yul\":12695:12734   */\n      tag_292\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":12668:12669   */\n      0x01\n        /* \"#utility.yul\":12661:12666   */\n      dup2\n        /* \"#utility.yul\":12657:12670   */\n      add\n        /* \"#utility.yul\":12648:12670   */\n      swap1\n      pop\n        /* \"#utility.yul\":12624:12744   */\n      jump(tag_445)\n    tag_447:\n        /* \"#utility.yul\":12564:12750   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12756:13299   */\n    tag_294:\n        /* \"#utility.yul\":12857:12859   */\n      0x1f\n        /* \"#utility.yul\":12852:12855   */\n      dup3\n        /* \"#utility.yul\":12849:12860   */\n      gt\n        /* \"#utility.yul\":12846:13292   */\n      iszero\n      tag_450\n      jumpi\n        /* \"#utility.yul\":12891:12929   */\n      tag_451\n        /* \"#utility.yul\":12923:12928   */\n      dup2\n        /* \"#utility.yul\":12891:12929   */\n      tag_284\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":12975:13004   */\n      tag_452\n        /* \"#utility.yul\":12993:13003   */\n      dup5\n        /* \"#utility.yul\":12975:13004   */\n      tag_285\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":12965:12973   */\n      dup2\n        /* \"#utility.yul\":12961:13005   */\n      add\n        /* \"#utility.yul\":13158:13160   */\n      0x20\n        /* \"#utility.yul\":13146:13156   */\n      dup6\n        /* \"#utility.yul\":13143:13161   */\n      lt\n        /* \"#utility.yul\":13140:13189   */\n      iszero\n      tag_453\n      jumpi\n        /* \"#utility.yul\":13179:13187   */\n      dup2\n        /* \"#utility.yul\":13164:13187   */\n      swap1\n      pop\n        /* \"#utility.yul\":13140:13189   */\n    tag_453:\n        /* \"#utility.yul\":13202:13282   */\n      tag_454\n        /* \"#utility.yul\":13258:13280   */\n      tag_455\n        /* \"#utility.yul\":13276:13279   */\n      dup6\n        /* \"#utility.yul\":13258:13280   */\n      tag_285\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":13248:13256   */\n      dup4\n        /* \"#utility.yul\":13244:13281   */\n      add\n        /* \"#utility.yul\":13231:13242   */\n      dup3\n        /* \"#utility.yul\":13202:13282   */\n      tag_293\n      jump\t// in\n    tag_454:\n        /* \"#utility.yul\":12861:13292   */\n      pop\n      pop\n        /* \"#utility.yul\":12846:13292   */\n    tag_450:\n        /* \"#utility.yul\":12756:13299   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13305:13422   */\n    tag_295:\n        /* \"#utility.yul\":13359:13367   */\n      0x00\n        /* \"#utility.yul\":13409:13414   */\n      dup3\n        /* \"#utility.yul\":13403:13407   */\n      dup3\n        /* \"#utility.yul\":13399:13415   */\n      shr\n        /* \"#utility.yul\":13378:13415   */\n      swap1\n      pop\n        /* \"#utility.yul\":13305:13422   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13428:13597   */\n    tag_296:\n        /* \"#utility.yul\":13472:13478   */\n      0x00\n        /* \"#utility.yul\":13505:13556   */\n      tag_458\n        /* \"#utility.yul\":13553:13554   */\n      0x00\n        /* \"#utility.yul\":13549:13555   */\n      not\n        /* \"#utility.yul\":13541:13546   */\n      dup5\n        /* \"#utility.yul\":13538:13539   */\n      0x08\n        /* \"#utility.yul\":13534:13547   */\n      mul\n        /* \"#utility.yul\":13505:13556   */\n      tag_295\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":13501:13557   */\n      not\n        /* \"#utility.yul\":13586:13590   */\n      dup1\n        /* \"#utility.yul\":13580:13584   */\n      dup4\n        /* \"#utility.yul\":13576:13591   */\n      and\n        /* \"#utility.yul\":13566:13591   */\n      swap2\n      pop\n        /* \"#utility.yul\":13479:13597   */\n      pop\n        /* \"#utility.yul\":13428:13597   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13602:13897   */\n    tag_297:\n        /* \"#utility.yul\":13678:13682   */\n      0x00\n        /* \"#utility.yul\":13824:13853   */\n      tag_460\n        /* \"#utility.yul\":13849:13852   */\n      dup4\n        /* \"#utility.yul\":13843:13847   */\n      dup4\n        /* \"#utility.yul\":13824:13853   */\n      tag_296\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":13816:13853   */\n      swap2\n      pop\n        /* \"#utility.yul\":13886:13889   */\n      dup3\n        /* \"#utility.yul\":13883:13884   */\n      0x02\n        /* \"#utility.yul\":13879:13890   */\n      mul\n        /* \"#utility.yul\":13873:13877   */\n      dup3\n        /* \"#utility.yul\":13870:13891   */\n      or\n        /* \"#utility.yul\":13862:13891   */\n      swap1\n      pop\n        /* \"#utility.yul\":13602:13897   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13902:15297   */\n    tag_237:\n        /* \"#utility.yul\":14019:14056   */\n      tag_462\n        /* \"#utility.yul\":14052:14055   */\n      dup3\n        /* \"#utility.yul\":14019:14056   */\n      tag_247\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":14121:14139   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":14113:14119   */\n      dup2\n        /* \"#utility.yul\":14110:14140   */\n      gt\n        /* \"#utility.yul\":14107:14163   */\n      iszero\n      tag_463\n      jumpi\n        /* \"#utility.yul\":14143:14161   */\n      tag_464\n      tag_269\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":14107:14163   */\n    tag_463:\n        /* \"#utility.yul\":14187:14225   */\n      tag_465\n        /* \"#utility.yul\":14219:14223   */\n      dup3\n        /* \"#utility.yul\":14213:14224   */\n      sload\n        /* \"#utility.yul\":14187:14225   */\n      tag_84\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":14272:14339   */\n      tag_466\n        /* \"#utility.yul\":14332:14338   */\n      dup3\n        /* \"#utility.yul\":14324:14330   */\n      dup3\n        /* \"#utility.yul\":14318:14322   */\n      dup6\n        /* \"#utility.yul\":14272:14339   */\n      tag_294\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":14366:14367   */\n      0x00\n        /* \"#utility.yul\":14390:14394   */\n      0x20\n        /* \"#utility.yul\":14377:14394   */\n      swap1\n      pop\n        /* \"#utility.yul\":14422:14424   */\n      0x1f\n        /* \"#utility.yul\":14414:14420   */\n      dup4\n        /* \"#utility.yul\":14411:14425   */\n      gt\n        /* \"#utility.yul\":14439:14440   */\n      0x01\n        /* \"#utility.yul\":14434:15052   */\n      dup2\n      eq\n      tag_468\n      jumpi\n        /* \"#utility.yul\":15096:15097   */\n      0x00\n        /* \"#utility.yul\":15113:15119   */\n      dup5\n        /* \"#utility.yul\":15110:15187   */\n      iszero\n      tag_469\n      jumpi\n        /* \"#utility.yul\":15162:15171   */\n      dup3\n        /* \"#utility.yul\":15157:15160   */\n      dup8\n        /* \"#utility.yul\":15153:15172   */\n      add\n        /* \"#utility.yul\":15147:15173   */\n      mload\n        /* \"#utility.yul\":15138:15173   */\n      swap1\n      pop\n        /* \"#utility.yul\":15110:15187   */\n    tag_469:\n        /* \"#utility.yul\":15213:15280   */\n      tag_470\n        /* \"#utility.yul\":15273:15279   */\n      dup6\n        /* \"#utility.yul\":15266:15271   */\n      dup3\n        /* \"#utility.yul\":15213:15280   */\n      tag_297\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":15207:15211   */\n      dup7\n        /* \"#utility.yul\":15200:15281   */\n      sstore\n        /* \"#utility.yul\":15069:15291   */\n      pop\n        /* \"#utility.yul\":14404:15291   */\n      jump(tag_467)\n        /* \"#utility.yul\":14434:15052   */\n    tag_468:\n        /* \"#utility.yul\":14486:14490   */\n      0x1f\n        /* \"#utility.yul\":14482:14491   */\n      not\n        /* \"#utility.yul\":14474:14480   */\n      dup5\n        /* \"#utility.yul\":14470:14492   */\n      and\n        /* \"#utility.yul\":14520:14557   */\n      tag_471\n        /* \"#utility.yul\":14552:14556   */\n      dup7\n        /* \"#utility.yul\":14520:14557   */\n      tag_284\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":14579:14580   */\n      0x00\n        /* \"#utility.yul\":14593:14801   */\n    tag_472:\n        /* \"#utility.yul\":14607:14614   */\n      dup3\n        /* \"#utility.yul\":14604:14605   */\n      dup2\n        /* \"#utility.yul\":14601:14615   */\n      lt\n        /* \"#utility.yul\":14593:14801   */\n      iszero\n      tag_474\n      jumpi\n        /* \"#utility.yul\":14686:14695   */\n      dup5\n        /* \"#utility.yul\":14681:14684   */\n      dup10\n        /* \"#utility.yul\":14677:14696   */\n      add\n        /* \"#utility.yul\":14671:14697   */\n      mload\n        /* \"#utility.yul\":14663:14669   */\n      dup3\n        /* \"#utility.yul\":14656:14698   */\n      sstore\n        /* \"#utility.yul\":14737:14738   */\n      0x01\n        /* \"#utility.yul\":14729:14735   */\n      dup3\n        /* \"#utility.yul\":14725:14739   */\n      add\n        /* \"#utility.yul\":14715:14739   */\n      swap2\n      pop\n        /* \"#utility.yul\":14784:14786   */\n      0x20\n        /* \"#utility.yul\":14773:14782   */\n      dup6\n        /* \"#utility.yul\":14769:14787   */\n      add\n        /* \"#utility.yul\":14756:14787   */\n      swap5\n      pop\n        /* \"#utility.yul\":14630:14634   */\n      0x20\n        /* \"#utility.yul\":14627:14628   */\n      dup2\n        /* \"#utility.yul\":14623:14635   */\n      add\n        /* \"#utility.yul\":14618:14635   */\n      swap1\n      pop\n        /* \"#utility.yul\":14593:14801   */\n      jump(tag_472)\n    tag_474:\n        /* \"#utility.yul\":14829:14835   */\n      dup7\n        /* \"#utility.yul\":14820:14827   */\n      dup4\n        /* \"#utility.yul\":14817:14836   */\n      lt\n        /* \"#utility.yul\":14814:14993   */\n      iszero\n      tag_475\n      jumpi\n        /* \"#utility.yul\":14887:14896   */\n      dup5\n        /* \"#utility.yul\":14882:14885   */\n      dup10\n        /* \"#utility.yul\":14878:14897   */\n      add\n        /* \"#utility.yul\":14872:14898   */\n      mload\n        /* \"#utility.yul\":14930:14978   */\n      tag_476\n        /* \"#utility.yul\":14972:14976   */\n      0x1f\n        /* \"#utility.yul\":14964:14970   */\n      dup10\n        /* \"#utility.yul\":14960:14977   */\n      and\n        /* \"#utility.yul\":14949:14958   */\n      dup3\n        /* \"#utility.yul\":14930:14978   */\n      tag_296\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":14922:14928   */\n      dup4\n        /* \"#utility.yul\":14915:14979   */\n      sstore\n        /* \"#utility.yul\":14837:14993   */\n      pop\n        /* \"#utility.yul\":14814:14993   */\n    tag_475:\n        /* \"#utility.yul\":15039:15040   */\n      0x01\n        /* \"#utility.yul\":15035:15036   */\n      0x02\n        /* \"#utility.yul\":15027:15033   */\n      dup9\n        /* \"#utility.yul\":15023:15037   */\n      mul\n        /* \"#utility.yul\":15019:15041   */\n      add\n        /* \"#utility.yul\":15013:15017   */\n      dup9\n        /* \"#utility.yul\":15006:15042   */\n      sstore\n        /* \"#utility.yul\":14441:15052   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":14404:15291   */\n    tag_467:\n      pop\n        /* \"#utility.yul\":13994:15297   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":13902:15297   */\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122056c3ac632fc98887d4535227f9b7350bdd05c02ef5c5c17eda369365fc808a5064736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f5ffd5b50611a758061001c5f395ff3fe608060405234801561000f575f5ffd5b50600436106100f3575f3560e01c806370a08231116100955780639dc29fac116100645780639dc29fac1461025f578063a9059cbb1461027b578063dd62ed3e146102ab578063f2fde38b146102db576100f3565b806370a08231146101e9578063715018a6146102195780638da5cb5b1461022357806395d89b4114610241576100f3565b806323b872dd116100d157806323b872dd14610163578063313ce5671461019357806340c10f19146101b15780634cd88b76146101cd576100f3565b806306fdde03146100f7578063095ea7b31461011557806318160ddd14610145575b5f5ffd5b6100ff6102f7565b60405161010c919061126b565b60405180910390f35b61012f600480360381019061012a9190611329565b610395565b60405161013c9190611381565b60405180910390f35b61014d6103b7565b60405161015a91906113a9565b60405180910390f35b61017d600480360381019061017891906113c2565b6103ce565b60405161018a9190611381565b60405180910390f35b61019b6103fc565b6040516101a8919061142d565b60405180910390f35b6101cb60048036038101906101c69190611329565b610404565b005b6101e760048036038101906101e29190611572565b61041a565b005b61020360048036038101906101fe91906115e8565b6105a6565b60405161021091906113a9565b60405180910390f35b6102216105f9565b005b61022b61060c565b6040516102389190611622565b60405180910390f35b610249610641565b604051610256919061126b565b60405180910390f35b61027960048036038101906102749190611329565b6106df565b005b61029560048036038101906102909190611329565b6106f5565b6040516102a29190611381565b60405180910390f35b6102c560048036038101906102c0919061163b565b610717565b6040516102d291906113a9565b60405180910390f35b6102f560048036038101906102f091906115e8565b6107a7565b005b60605f61030261082b565b9050806003018054610313906116a6565b80601f016020809104026020016040519081016040528092919081815260200182805461033f906116a6565b801561038a5780601f106103615761010080835404028352916020019161038a565b820191905f5260205f20905b81548152906001019060200180831161036d57829003601f168201915b505050505091505090565b5f5f61039f610852565b90506103ac818585610859565b600191505092915050565b5f5f6103c161082b565b9050806002015491505090565b5f5f6103d8610852565b90506103e585828561086b565b6103f08585856108fe565b60019150509392505050565b5f6012905090565b61040c6109ee565b6104168282610a75565b5050565b5f610423610af4565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f5f8267ffffffffffffffff1614801561046b5750825b90505f60018367ffffffffffffffff1614801561049e57505f3073ffffffffffffffffffffffffffffffffffffffff163b145b9050811580156104ac575080155b156104e3576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315610530576001855f0160086101000a81548160ff0219169083151502179055505b61053a8787610b07565b61054333610b1d565b831561059d575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d26001604051610594919061172b565b60405180910390a15b50505050505050565b5f5f6105b061082b565b9050805f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054915050919050565b6106016109ee565b61060a5f610b31565b565b5f5f610616610c02565b9050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b60605f61064c61082b565b905080600401805461065d906116a6565b80601f0160208091040260200160405190810160405280929190818152602001828054610689906116a6565b80156106d45780601f106106ab576101008083540402835291602001916106d4565b820191905f5260205f20905b8154815290600101906020018083116106b757829003601f168201915b505050505091505090565b6106e76109ee565b6106f18282610c29565b5050565b5f5f6106ff610852565b905061070c8185856108fe565b600191505092915050565b5f5f61072161082b565b9050806001015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205491505092915050565b6107af6109ee565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361081f575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016108169190611622565b60405180910390fd5b61082881610b31565b50565b5f7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00905090565b5f33905090565b6108668383836001610ca8565b505050565b5f6108768484610717565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156108f857818110156108e9578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016108e093929190611744565b60405180910390fd5b6108f784848484035f610ca8565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361096e575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016109659190611622565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109de575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016109d59190611622565b60405180910390fd5b6109e9838383610e85565b505050565b6109f6610852565b73ffffffffffffffffffffffffffffffffffffffff16610a1461060c565b73ffffffffffffffffffffffffffffffffffffffff1614610a7357610a37610852565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610a6a9190611622565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ae5575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610adc9190611622565b60405180910390fd5b610af05f8383610e85565b5050565b5f5f610afe6110b4565b90508091505090565b610b0f6110dd565b610b19828261111d565b5050565b610b256110dd565b610b2e81611159565b50565b5f610b3a610c02565b90505f815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082825f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b5f7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c99575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610c909190611622565b60405180910390fd5b610ca4825f83610e85565b5050565b5f610cb161082b565b90505f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610d23575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610d1a9190611622565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610d93575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610d8a9190611622565b60405180910390fd5b82816001015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508115610e7e578373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92585604051610e7591906113a9565b60405180910390a35b5050505050565b5f610e8e61082b565b90505f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610ee25781816002015f828254610ed691906117a6565b92505081905550610fb4565b5f815f015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905082811015610f6d578481846040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610f6493929190611744565b60405180910390fd5b828103825f015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ffd5781816002015f8282540392505081905550611049565b81815f015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516110a691906113a9565b60405180910390a350505050565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005f1b905090565b6110e56111dd565b61111b576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6111256110dd565b5f61112e61082b565b9050828160030190816111419190611970565b50818160040190816111539190611970565b50505050565b6111616110dd565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036111d1575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016111c89190611622565b60405180910390fd5b6111da81610b31565b50565b5f6111e6610af4565b5f0160089054906101000a900460ff16905090565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61123d826111fb565b6112478185611205565b9350611257818560208601611215565b61126081611223565b840191505092915050565b5f6020820190508181035f8301526112838184611233565b905092915050565b5f604051905090565b5f5ffd5b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6112c58261129c565b9050919050565b6112d5816112bb565b81146112df575f5ffd5b50565b5f813590506112f0816112cc565b92915050565b5f819050919050565b611308816112f6565b8114611312575f5ffd5b50565b5f81359050611323816112ff565b92915050565b5f5f6040838503121561133f5761133e611294565b5b5f61134c858286016112e2565b925050602061135d85828601611315565b9150509250929050565b5f8115159050919050565b61137b81611367565b82525050565b5f6020820190506113945f830184611372565b92915050565b6113a3816112f6565b82525050565b5f6020820190506113bc5f83018461139a565b92915050565b5f5f5f606084860312156113d9576113d8611294565b5b5f6113e6868287016112e2565b93505060206113f7868287016112e2565b925050604061140886828701611315565b9150509250925092565b5f60ff82169050919050565b61142781611412565b82525050565b5f6020820190506114405f83018461141e565b92915050565b5f5ffd5b5f5ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61148482611223565b810181811067ffffffffffffffff821117156114a3576114a261144e565b5b80604052505050565b5f6114b561128b565b90506114c1828261147b565b919050565b5f67ffffffffffffffff8211156114e0576114df61144e565b5b6114e982611223565b9050602081019050919050565b828183375f83830152505050565b5f611516611511846114c6565b6114ac565b9050828152602081018484840111156115325761153161144a565b5b61153d8482856114f6565b509392505050565b5f82601f83011261155957611558611446565b5b8135611569848260208601611504565b91505092915050565b5f5f6040838503121561158857611587611294565b5b5f83013567ffffffffffffffff8111156115a5576115a4611298565b5b6115b185828601611545565b925050602083013567ffffffffffffffff8111156115d2576115d1611298565b5b6115de85828601611545565b9150509250929050565b5f602082840312156115fd576115fc611294565b5b5f61160a848285016112e2565b91505092915050565b61161c816112bb565b82525050565b5f6020820190506116355f830184611613565b92915050565b5f5f6040838503121561165157611650611294565b5b5f61165e858286016112e2565b925050602061166f858286016112e2565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806116bd57607f821691505b6020821081036116d0576116cf611679565b5b50919050565b5f819050919050565b5f67ffffffffffffffff82169050919050565b5f819050919050565b5f61171561171061170b846116d6565b6116f2565b6116df565b9050919050565b611725816116fb565b82525050565b5f60208201905061173e5f83018461171c565b92915050565b5f6060820190506117575f830186611613565b611764602083018561139a565b611771604083018461139a565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6117b0826112f6565b91506117bb836112f6565b92508282019050808211156117d3576117d2611779565b5b92915050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026118357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826117fa565b61183f86836117fa565b95508019841693508086168417925050509392505050565b5f61187161186c611867846112f6565b6116f2565b6112f6565b9050919050565b5f819050919050565b61188a83611857565b61189e61189682611878565b848454611806565b825550505050565b5f5f905090565b6118b56118a6565b6118c0818484611881565b505050565b5b818110156118e3576118d85f826118ad565b6001810190506118c6565b5050565b601f821115611928576118f9816117d9565b611902846117eb565b81016020851015611911578190505b61192561191d856117eb565b8301826118c5565b50505b505050565b5f82821c905092915050565b5f6119485f198460080261192d565b1980831691505092915050565b5f6119608383611939565b9150826002028217905092915050565b611979826111fb565b67ffffffffffffffff8111156119925761199161144e565b5b61199c82546116a6565b6119a78282856118e7565b5f60209050601f8311600181146119d8575f84156119c6578287015190505b6119d08582611955565b865550611a37565b601f1984166119e6866117d9565b5f5b82811015611a0d578489015182556001820191506020850194506020810190506119e8565b86831015611a2a5784890151611a26601f891682611939565b8355505b6001600288020188555050505b50505050505056fea264697066735822122056c3ac632fc98887d4535227f9b7350bdd05c02ef5c5c17eda369365fc808a5064736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1A75 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF3 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0x9DC29FAC GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x27B JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2DB JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x223 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x241 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x4CD88B76 EQ PUSH2 0x1CD JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x145 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xFF PUSH2 0x2F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10C SWAP2 SWAP1 PUSH2 0x126B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12A SWAP2 SWAP1 PUSH2 0x1329 JUMP JUMPDEST PUSH2 0x395 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x1381 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14D PUSH2 0x3B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x13A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x178 SWAP2 SWAP1 PUSH2 0x13C2 JUMP JUMPDEST PUSH2 0x3CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x1381 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19B PUSH2 0x3FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x142D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x1329 JUMP JUMPDEST PUSH2 0x404 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0x1572 JUMP JUMPDEST PUSH2 0x41A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x203 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FE SWAP2 SWAP1 PUSH2 0x15E8 JUMP JUMPDEST PUSH2 0x5A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x210 SWAP2 SWAP1 PUSH2 0x13A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x221 PUSH2 0x5F9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22B PUSH2 0x60C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x238 SWAP2 SWAP1 PUSH2 0x1622 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x249 PUSH2 0x641 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x256 SWAP2 SWAP1 PUSH2 0x126B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x279 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x274 SWAP2 SWAP1 PUSH2 0x1329 JUMP JUMPDEST PUSH2 0x6DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x295 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x290 SWAP2 SWAP1 PUSH2 0x1329 JUMP JUMPDEST PUSH2 0x6F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A2 SWAP2 SWAP1 PUSH2 0x1381 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C0 SWAP2 SWAP1 PUSH2 0x163B JUMP JUMPDEST PUSH2 0x717 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D2 SWAP2 SWAP1 PUSH2 0x13A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x15E8 JUMP JUMPDEST PUSH2 0x7A7 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x302 PUSH2 0x82B JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x313 SWAP1 PUSH2 0x16A6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x33F SWAP1 PUSH2 0x16A6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x38A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x361 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x38A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x36D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x39F PUSH2 0x852 JUMP JUMPDEST SWAP1 POP PUSH2 0x3AC DUP2 DUP6 DUP6 PUSH2 0x859 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x3C1 PUSH2 0x82B JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x3D8 PUSH2 0x852 JUMP JUMPDEST SWAP1 POP PUSH2 0x3E5 DUP6 DUP3 DUP6 PUSH2 0x86B JUMP JUMPDEST PUSH2 0x3F0 DUP6 DUP6 DUP6 PUSH2 0x8FE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x40C PUSH2 0x9EE JUMP JUMPDEST PUSH2 0x416 DUP3 DUP3 PUSH2 0xA75 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x423 PUSH2 0xAF4 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x46B JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x49E JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x4AC JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x4E3 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x530 JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x53A DUP8 DUP8 PUSH2 0xB07 JUMP JUMPDEST PUSH2 0x543 CALLER PUSH2 0xB1D JUMP JUMPDEST DUP4 ISZERO PUSH2 0x59D JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x594 SWAP2 SWAP1 PUSH2 0x172B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x5B0 PUSH2 0x82B JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x601 PUSH2 0x9EE JUMP JUMPDEST PUSH2 0x60A PUSH0 PUSH2 0xB31 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x616 PUSH2 0xC02 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x64C PUSH2 0x82B JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 ADD DUP1 SLOAD PUSH2 0x65D SWAP1 PUSH2 0x16A6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x689 SWAP1 PUSH2 0x16A6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6D4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6AB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6D4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6B7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x6E7 PUSH2 0x9EE JUMP JUMPDEST PUSH2 0x6F1 DUP3 DUP3 PUSH2 0xC29 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x6FF PUSH2 0x852 JUMP JUMPDEST SWAP1 POP PUSH2 0x70C DUP2 DUP6 DUP6 PUSH2 0x8FE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x721 PUSH2 0x82B JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7AF PUSH2 0x9EE JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x81F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x816 SWAP2 SWAP1 PUSH2 0x1622 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x828 DUP2 PUSH2 0xB31 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x866 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xCA8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x876 DUP5 DUP5 PUSH2 0x717 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x8F8 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x8E9 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8E0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1744 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8F7 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xCA8 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x96E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x965 SWAP2 SWAP1 PUSH2 0x1622 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9DE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9D5 SWAP2 SWAP1 PUSH2 0x1622 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9E9 DUP4 DUP4 DUP4 PUSH2 0xE85 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x9F6 PUSH2 0x852 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA14 PUSH2 0x60C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA73 JUMPI PUSH2 0xA37 PUSH2 0x852 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA6A SWAP2 SWAP1 PUSH2 0x1622 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAE5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xADC SWAP2 SWAP1 PUSH2 0x1622 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAF0 PUSH0 DUP4 DUP4 PUSH2 0xE85 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xAFE PUSH2 0x10B4 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0xB0F PUSH2 0x10DD JUMP JUMPDEST PUSH2 0xB19 DUP3 DUP3 PUSH2 0x111D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xB25 PUSH2 0x10DD JUMP JUMPDEST PUSH2 0xB2E DUP2 PUSH2 0x1159 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0xB3A PUSH2 0xC02 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC99 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC90 SWAP2 SWAP1 PUSH2 0x1622 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCA4 DUP3 PUSH0 DUP4 PUSH2 0xE85 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0xCB1 PUSH2 0x82B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD23 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD1A SWAP2 SWAP1 PUSH2 0x1622 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD93 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD8A SWAP2 SWAP1 PUSH2 0x1622 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 PUSH1 0x1 ADD PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 ISZERO PUSH2 0xE7E JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP6 PUSH1 0x40 MLOAD PUSH2 0xE75 SWAP2 SWAP1 PUSH2 0x13A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xE8E PUSH2 0x82B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEE2 JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xED6 SWAP2 SWAP1 PUSH2 0x17A6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xFB4 JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0xF6D JUMPI DUP5 DUP2 DUP5 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF64 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1744 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 SUB DUP3 PUSH0 ADD PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFFD JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1049 JUMP JUMPDEST DUP2 DUP2 PUSH0 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x10A6 SWAP2 SWAP1 PUSH2 0x13A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 PUSH0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x10E5 PUSH2 0x11DD JUMP JUMPDEST PUSH2 0x111B JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1125 PUSH2 0x10DD JUMP JUMPDEST PUSH0 PUSH2 0x112E PUSH2 0x82B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x1141 SWAP2 SWAP1 PUSH2 0x1970 JUMP JUMPDEST POP DUP2 DUP2 PUSH1 0x4 ADD SWAP1 DUP2 PUSH2 0x1153 SWAP2 SWAP1 PUSH2 0x1970 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1161 PUSH2 0x10DD JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11D1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11C8 SWAP2 SWAP1 PUSH2 0x1622 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11DA DUP2 PUSH2 0xB31 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x11E6 PUSH2 0xAF4 JUMP JUMPDEST PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x123D DUP3 PUSH2 0x11FB JUMP JUMPDEST PUSH2 0x1247 DUP2 DUP6 PUSH2 0x1205 JUMP JUMPDEST SWAP4 POP PUSH2 0x1257 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1215 JUMP JUMPDEST PUSH2 0x1260 DUP2 PUSH2 0x1223 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1283 DUP2 DUP5 PUSH2 0x1233 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x12C5 DUP3 PUSH2 0x129C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12D5 DUP2 PUSH2 0x12BB JUMP JUMPDEST DUP2 EQ PUSH2 0x12DF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12F0 DUP2 PUSH2 0x12CC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1308 DUP2 PUSH2 0x12F6 JUMP JUMPDEST DUP2 EQ PUSH2 0x1312 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1323 DUP2 PUSH2 0x12FF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x133F JUMPI PUSH2 0x133E PUSH2 0x1294 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x134C DUP6 DUP3 DUP7 ADD PUSH2 0x12E2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x135D DUP6 DUP3 DUP7 ADD PUSH2 0x1315 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x137B DUP2 PUSH2 0x1367 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1394 PUSH0 DUP4 ADD DUP5 PUSH2 0x1372 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13A3 DUP2 PUSH2 0x12F6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13BC PUSH0 DUP4 ADD DUP5 PUSH2 0x139A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x13D9 JUMPI PUSH2 0x13D8 PUSH2 0x1294 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13E6 DUP7 DUP3 DUP8 ADD PUSH2 0x12E2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x13F7 DUP7 DUP3 DUP8 ADD PUSH2 0x12E2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1408 DUP7 DUP3 DUP8 ADD PUSH2 0x1315 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1427 DUP2 PUSH2 0x1412 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1440 PUSH0 DUP4 ADD DUP5 PUSH2 0x141E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1484 DUP3 PUSH2 0x1223 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x14A3 JUMPI PUSH2 0x14A2 PUSH2 0x144E JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x14B5 PUSH2 0x128B JUMP JUMPDEST SWAP1 POP PUSH2 0x14C1 DUP3 DUP3 PUSH2 0x147B JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x14E0 JUMPI PUSH2 0x14DF PUSH2 0x144E JUMP JUMPDEST JUMPDEST PUSH2 0x14E9 DUP3 PUSH2 0x1223 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1516 PUSH2 0x1511 DUP5 PUSH2 0x14C6 JUMP JUMPDEST PUSH2 0x14AC JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1532 JUMPI PUSH2 0x1531 PUSH2 0x144A JUMP JUMPDEST JUMPDEST PUSH2 0x153D DUP5 DUP3 DUP6 PUSH2 0x14F6 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1559 JUMPI PUSH2 0x1558 PUSH2 0x1446 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1569 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1504 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1588 JUMPI PUSH2 0x1587 PUSH2 0x1294 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15A5 JUMPI PUSH2 0x15A4 PUSH2 0x1298 JUMP JUMPDEST JUMPDEST PUSH2 0x15B1 DUP6 DUP3 DUP7 ADD PUSH2 0x1545 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15D2 JUMPI PUSH2 0x15D1 PUSH2 0x1298 JUMP JUMPDEST JUMPDEST PUSH2 0x15DE DUP6 DUP3 DUP7 ADD PUSH2 0x1545 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15FD JUMPI PUSH2 0x15FC PUSH2 0x1294 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x160A DUP5 DUP3 DUP6 ADD PUSH2 0x12E2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x161C DUP2 PUSH2 0x12BB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1635 PUSH0 DUP4 ADD DUP5 PUSH2 0x1613 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1651 JUMPI PUSH2 0x1650 PUSH2 0x1294 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x165E DUP6 DUP3 DUP7 ADD PUSH2 0x12E2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x166F DUP6 DUP3 DUP7 ADD PUSH2 0x12E2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x16BD JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x16D0 JUMPI PUSH2 0x16CF PUSH2 0x1679 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1715 PUSH2 0x1710 PUSH2 0x170B DUP5 PUSH2 0x16D6 JUMP JUMPDEST PUSH2 0x16F2 JUMP JUMPDEST PUSH2 0x16DF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1725 DUP2 PUSH2 0x16FB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x173E PUSH0 DUP4 ADD DUP5 PUSH2 0x171C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1757 PUSH0 DUP4 ADD DUP7 PUSH2 0x1613 JUMP JUMPDEST PUSH2 0x1764 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x139A JUMP JUMPDEST PUSH2 0x1771 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x139A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x17B0 DUP3 PUSH2 0x12F6 JUMP JUMPDEST SWAP2 POP PUSH2 0x17BB DUP4 PUSH2 0x12F6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x17D3 JUMPI PUSH2 0x17D2 PUSH2 0x1779 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x1835 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x17FA JUMP JUMPDEST PUSH2 0x183F DUP7 DUP4 PUSH2 0x17FA JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1871 PUSH2 0x186C PUSH2 0x1867 DUP5 PUSH2 0x12F6 JUMP JUMPDEST PUSH2 0x16F2 JUMP JUMPDEST PUSH2 0x12F6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x188A DUP4 PUSH2 0x1857 JUMP JUMPDEST PUSH2 0x189E PUSH2 0x1896 DUP3 PUSH2 0x1878 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x1806 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x18B5 PUSH2 0x18A6 JUMP JUMPDEST PUSH2 0x18C0 DUP2 DUP5 DUP5 PUSH2 0x1881 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x18E3 JUMPI PUSH2 0x18D8 PUSH0 DUP3 PUSH2 0x18AD JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x18C6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1928 JUMPI PUSH2 0x18F9 DUP2 PUSH2 0x17D9 JUMP JUMPDEST PUSH2 0x1902 DUP5 PUSH2 0x17EB JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1911 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x1925 PUSH2 0x191D DUP6 PUSH2 0x17EB JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x18C5 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1948 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x192D JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1960 DUP4 DUP4 PUSH2 0x1939 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1979 DUP3 PUSH2 0x11FB JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1992 JUMPI PUSH2 0x1991 PUSH2 0x144E JUMP JUMPDEST JUMPDEST PUSH2 0x199C DUP3 SLOAD PUSH2 0x16A6 JUMP JUMPDEST PUSH2 0x19A7 DUP3 DUP3 DUP6 PUSH2 0x18E7 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x19D8 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x19C6 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x19D0 DUP6 DUP3 PUSH2 0x1955 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x1A37 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x19E6 DUP7 PUSH2 0x17D9 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1A0D JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x19E8 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x1A2A JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x1A26 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x1939 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMP 0xC3 0xAC PUSH4 0x2FC98887 0xD4 MSTORE8 MSTORE 0x27 EXTDELEGATECALL 0xB7 CALLDATALOAD SIGNEXTEND 0xDD SDIV 0xC0 0x2E CREATE2 0xC5 0xC1 PUSH31 0xDA369365FC808A5064736F6C634300081E0033000000000000000000000000 ",
							"sourceMap": "573:1812:7:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@__ERC20_init_530": {
									"entryPoint": 2823,
									"id": 530,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@__ERC20_init_unchained_558": {
									"entryPoint": 4381,
									"id": 558,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@__Ownable_init_54": {
									"entryPoint": 2845,
									"id": 54,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@__Ownable_init_unchained_81": {
									"entryPoint": 4441,
									"id": 81,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_approve_1030": {
									"entryPoint": 3240,
									"id": 1030,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_approve_962": {
									"entryPoint": 2137,
									"id": 962,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_burn_944": {
									"entryPoint": 3113,
									"id": 944,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkInitializing_370": {
									"entryPoint": 4317,
									"id": 370,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_122": {
									"entryPoint": 2542,
									"id": 122,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getERC20Storage_514": {
									"entryPoint": 2091,
									"id": 514,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getInitializableStorage_461": {
									"entryPoint": 2804,
									"id": 461,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getOwnableStorage_25": {
									"entryPoint": 3074,
									"id": 25,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_initializableStorageSlot_447": {
									"entryPoint": 4276,
									"id": 447,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_isInitializing_438": {
									"entryPoint": 4573,
									"id": 438,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_mint_911": {
									"entryPoint": 2677,
									"id": 911,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1107": {
									"entryPoint": 2130,
									"id": 1107,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_1078": {
									"entryPoint": 2155,
									"id": 1078,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_193": {
									"entryPoint": 2865,
									"id": 193,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_786": {
									"entryPoint": 2302,
									"id": 786,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_878": {
									"entryPoint": 3717,
									"id": 878,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_683": {
									"entryPoint": 1815,
									"id": 683,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_707": {
									"entryPoint": 917,
									"id": 707,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_635": {
									"entryPoint": 1446,
									"id": 635,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burn_1430": {
									"entryPoint": 1759,
									"id": 1430,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@decimals_599": {
									"entryPoint": 1020,
									"id": 599,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@initialize_1398": {
									"entryPoint": 1050,
									"id": 1398,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@mint_1414": {
									"entryPoint": 1028,
									"id": 1414,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_574": {
									"entryPoint": 759,
									"id": 574,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_105": {
									"entryPoint": 1548,
									"id": 105,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_136": {
									"entryPoint": 1529,
									"id": 136,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_590": {
									"entryPoint": 1601,
									"id": 590,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_615": {
									"entryPoint": 951,
									"id": 615,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_739": {
									"entryPoint": 974,
									"id": 739,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_164": {
									"entryPoint": 1959,
									"id": 164,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_659": {
									"entryPoint": 1781,
									"id": 659,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr": {
									"entryPoint": 5380,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 4834,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr": {
									"entryPoint": 5445,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4885,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5608,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5691,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 5058,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4905,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr": {
									"entryPoint": 5490,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5651,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4978,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_1_by_1_to_t_uint64_fromStack": {
									"entryPoint": 5916,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4659,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5018,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 5150,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5666,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5956,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4993,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed": {
									"entryPoint": 5931,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4715,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5033,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 5165,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 5292,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 4747,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 5318,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 6105,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 4603,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4613,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6054,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 6375,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 4795,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4967,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_1_by_1": {
									"entryPoint": 5846,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4764,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4854,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint64": {
									"entryPoint": 5855,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 5138,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 6341,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_rational_1_by_1_to_t_uint64": {
									"entryPoint": 5883,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 6231,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 6512,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 5366,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4629,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 6123,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 5798,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 6485,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 5243,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 5874,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 6457,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6009,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 5753,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5198,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 6264,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 5190,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 5194,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 4760,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4756,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4643,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 6138,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 6445,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 6317,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 6150,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 6273,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4812,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4863,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 6310,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:15300:8",
										"nodeType": "YulBlock",
										"src": "0:15300:8",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:8",
													"nodeType": "YulBlock",
													"src": "66:40:8",
													"statements": [
														{
															"nativeSrc": "77:22:8",
															"nodeType": "YulAssignment",
															"src": "77:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:8"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:8"
																},
																"nativeSrc": "87:12:8",
																"nodeType": "YulFunctionCall",
																"src": "87:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:8"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:8",
														"nodeType": "YulTypedName",
														"src": "49:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:8",
														"nodeType": "YulTypedName",
														"src": "59:6:8",
														"type": ""
													}
												],
												"src": "7:99:8"
											},
											{
												"body": {
													"nativeSrc": "208:73:8",
													"nodeType": "YulBlock",
													"src": "208:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:8"
																},
																"nativeSrc": "218:19:8",
																"nodeType": "YulFunctionCall",
																"src": "218:19:8"
															},
															"nativeSrc": "218:19:8",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:8"
														},
														{
															"nativeSrc": "246:29:8",
															"nodeType": "YulAssignment",
															"src": "246:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:8",
																		"nodeType": "YulLiteral",
																		"src": "270:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:8"
																},
																"nativeSrc": "261:14:8",
																"nodeType": "YulFunctionCall",
																"src": "261:14:8"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:8"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:8",
														"nodeType": "YulTypedName",
														"src": "180:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:8",
														"nodeType": "YulTypedName",
														"src": "185:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:8",
														"nodeType": "YulTypedName",
														"src": "196:11:8",
														"type": ""
													}
												],
												"src": "112:169:8"
											},
											{
												"body": {
													"nativeSrc": "349:77:8",
													"nodeType": "YulBlock",
													"src": "349:77:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:8"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:8"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:8"
																},
																"nativeSrc": "360:23:8",
																"nodeType": "YulFunctionCall",
																"src": "360:23:8"
															},
															"nativeSrc": "360:23:8",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:8"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:8"
																		},
																		"nativeSrc": "399:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:8",
																		"nodeType": "YulLiteral",
																		"src": "417:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:8"
																},
																"nativeSrc": "392:27:8",
																"nodeType": "YulFunctionCall",
																"src": "392:27:8"
															},
															"nativeSrc": "392:27:8",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:8"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:8",
														"nodeType": "YulTypedName",
														"src": "331:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:8",
														"nodeType": "YulTypedName",
														"src": "336:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:8",
														"nodeType": "YulTypedName",
														"src": "341:6:8",
														"type": ""
													}
												],
												"src": "287:139:8"
											},
											{
												"body": {
													"nativeSrc": "480:54:8",
													"nodeType": "YulBlock",
													"src": "480:54:8",
													"statements": [
														{
															"nativeSrc": "490:38:8",
															"nodeType": "YulAssignment",
															"src": "490:38:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:8",
																				"nodeType": "YulLiteral",
																				"src": "515:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:8"
																		},
																		"nativeSrc": "504:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:8",
																				"nodeType": "YulLiteral",
																				"src": "524:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:8"
																		},
																		"nativeSrc": "520:7:8",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:8"
																},
																"nativeSrc": "500:28:8",
																"nodeType": "YulFunctionCall",
																"src": "500:28:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:8"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:8",
														"nodeType": "YulTypedName",
														"src": "463:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:8",
														"nodeType": "YulTypedName",
														"src": "473:6:8",
														"type": ""
													}
												],
												"src": "432:102:8"
											},
											{
												"body": {
													"nativeSrc": "632:285:8",
													"nodeType": "YulBlock",
													"src": "632:285:8",
													"statements": [
														{
															"nativeSrc": "642:53:8",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:8",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:8"
																},
																"nativeSrc": "656:39:8",
																"nodeType": "YulFunctionCall",
																"src": "656:39:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:8",
																	"nodeType": "YulTypedName",
																	"src": "646:6:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:8",
															"nodeType": "YulAssignment",
															"src": "704:78:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:8"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:8",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:8"
																},
																"nativeSrc": "711:71:8",
																"nodeType": "YulFunctionCall",
																"src": "711:71:8"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:8",
																				"nodeType": "YulLiteral",
																				"src": "837:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:8"
																		},
																		"nativeSrc": "826:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:8"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:8",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:8"
																},
																"nativeSrc": "791:65:8",
																"nodeType": "YulFunctionCall",
																"src": "791:65:8"
															},
															"nativeSrc": "791:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:8"
														},
														{
															"nativeSrc": "865:46:8",
															"nodeType": "YulAssignment",
															"src": "865:46:8",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:8",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:8"
																		},
																		"nativeSrc": "881:29:8",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:8"
																},
																"nativeSrc": "872:39:8",
																"nodeType": "YulFunctionCall",
																"src": "872:39:8"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:8",
														"nodeType": "YulTypedName",
														"src": "613:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:8",
														"nodeType": "YulTypedName",
														"src": "620:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:8",
														"nodeType": "YulTypedName",
														"src": "628:3:8",
														"type": ""
													}
												],
												"src": "540:377:8"
											},
											{
												"body": {
													"nativeSrc": "1041:195:8",
													"nodeType": "YulBlock",
													"src": "1041:195:8",
													"statements": [
														{
															"nativeSrc": "1051:26:8",
															"nodeType": "YulAssignment",
															"src": "1051:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:8"
																},
																"nativeSrc": "1059:18:8",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:8",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:8"
																		},
																		"nativeSrc": "1094:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:8"
																		},
																		"nativeSrc": "1113:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:8"
																},
																"nativeSrc": "1087:47:8",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:8"
															},
															"nativeSrc": "1087:47:8",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:8"
														},
														{
															"nativeSrc": "1143:86:8",
															"nodeType": "YulAssignment",
															"src": "1143:86:8",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:8"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:8",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:8"
																},
																"nativeSrc": "1151:78:8",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:8"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:8",
														"nodeType": "YulTypedName",
														"src": "1013:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:8",
														"nodeType": "YulTypedName",
														"src": "1025:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:8",
														"nodeType": "YulTypedName",
														"src": "1036:4:8",
														"type": ""
													}
												],
												"src": "923:313:8"
											},
											{
												"body": {
													"nativeSrc": "1282:35:8",
													"nodeType": "YulBlock",
													"src": "1282:35:8",
													"statements": [
														{
															"nativeSrc": "1292:19:8",
															"nodeType": "YulAssignment",
															"src": "1292:19:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:8",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:8"
																},
																"nativeSrc": "1302:9:8",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:8"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:8",
														"nodeType": "YulTypedName",
														"src": "1275:6:8",
														"type": ""
													}
												],
												"src": "1242:75:8"
											},
											{
												"body": {
													"nativeSrc": "1412:28:8",
													"nodeType": "YulBlock",
													"src": "1412:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:8"
																},
																"nativeSrc": "1422:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:8"
															},
															"nativeSrc": "1422:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:8"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:8"
											},
											{
												"body": {
													"nativeSrc": "1535:28:8",
													"nodeType": "YulBlock",
													"src": "1535:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:8",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:8"
																},
																"nativeSrc": "1545:12:8",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:8"
															},
															"nativeSrc": "1545:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:8"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:8"
											},
											{
												"body": {
													"nativeSrc": "1614:81:8",
													"nodeType": "YulBlock",
													"src": "1614:81:8",
													"statements": [
														{
															"nativeSrc": "1624:65:8",
															"nodeType": "YulAssignment",
															"src": "1624:65:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:8",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:8"
																},
																"nativeSrc": "1635:54:8",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:8",
														"nodeType": "YulTypedName",
														"src": "1596:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:8",
														"nodeType": "YulTypedName",
														"src": "1606:7:8",
														"type": ""
													}
												],
												"src": "1569:126:8"
											},
											{
												"body": {
													"nativeSrc": "1746:51:8",
													"nodeType": "YulBlock",
													"src": "1746:51:8",
													"statements": [
														{
															"nativeSrc": "1756:35:8",
															"nodeType": "YulAssignment",
															"src": "1756:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:8"
																},
																"nativeSrc": "1767:24:8",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:8",
														"nodeType": "YulTypedName",
														"src": "1728:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:8",
														"nodeType": "YulTypedName",
														"src": "1738:7:8",
														"type": ""
													}
												],
												"src": "1701:96:8"
											},
											{
												"body": {
													"nativeSrc": "1846:79:8",
													"nodeType": "YulBlock",
													"src": "1846:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:8",
																"nodeType": "YulBlock",
																"src": "1903:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:8",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:8"
																			},
																			"nativeSrc": "1905:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:8"
																		},
																		"nativeSrc": "1905:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:8"
																				},
																				"nativeSrc": "1876:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:8"
																		},
																		"nativeSrc": "1866:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:8"
																},
																"nativeSrc": "1859:43:8",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:8"
															},
															"nativeSrc": "1856:63:8",
															"nodeType": "YulIf",
															"src": "1856:63:8"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:8",
														"nodeType": "YulTypedName",
														"src": "1839:5:8",
														"type": ""
													}
												],
												"src": "1803:122:8"
											},
											{
												"body": {
													"nativeSrc": "1983:87:8",
													"nodeType": "YulBlock",
													"src": "1983:87:8",
													"statements": [
														{
															"nativeSrc": "1993:29:8",
															"nodeType": "YulAssignment",
															"src": "1993:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:8"
																},
																"nativeSrc": "2002:20:8",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:8"
																},
																"nativeSrc": "2031:33:8",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:8"
															},
															"nativeSrc": "2031:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:8"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:8",
														"nodeType": "YulTypedName",
														"src": "1961:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:8",
														"nodeType": "YulTypedName",
														"src": "1969:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:8",
														"nodeType": "YulTypedName",
														"src": "1977:5:8",
														"type": ""
													}
												],
												"src": "1931:139:8"
											},
											{
												"body": {
													"nativeSrc": "2121:32:8",
													"nodeType": "YulBlock",
													"src": "2121:32:8",
													"statements": [
														{
															"nativeSrc": "2131:16:8",
															"nodeType": "YulAssignment",
															"src": "2131:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:8",
																"nodeType": "YulIdentifier",
																"src": "2142:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:8",
														"nodeType": "YulTypedName",
														"src": "2103:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:8",
														"nodeType": "YulTypedName",
														"src": "2113:7:8",
														"type": ""
													}
												],
												"src": "2076:77:8"
											},
											{
												"body": {
													"nativeSrc": "2202:79:8",
													"nodeType": "YulBlock",
													"src": "2202:79:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:8",
																"nodeType": "YulBlock",
																"src": "2259:16:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:8",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:8"
																			},
																			"nativeSrc": "2261:12:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:8"
																		},
																		"nativeSrc": "2261:12:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:8"
																				},
																				"nativeSrc": "2232:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:8"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:8"
																		},
																		"nativeSrc": "2222:35:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:8"
																},
																"nativeSrc": "2215:43:8",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:8"
															},
															"nativeSrc": "2212:63:8",
															"nodeType": "YulIf",
															"src": "2212:63:8"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:8",
														"nodeType": "YulTypedName",
														"src": "2195:5:8",
														"type": ""
													}
												],
												"src": "2159:122:8"
											},
											{
												"body": {
													"nativeSrc": "2339:87:8",
													"nodeType": "YulBlock",
													"src": "2339:87:8",
													"statements": [
														{
															"nativeSrc": "2349:29:8",
															"nodeType": "YulAssignment",
															"src": "2349:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:8"
																},
																"nativeSrc": "2358:20:8",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:8"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:8",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:8"
																},
																"nativeSrc": "2387:33:8",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:8"
															},
															"nativeSrc": "2387:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:8"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:8",
														"nodeType": "YulTypedName",
														"src": "2317:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:8",
														"nodeType": "YulTypedName",
														"src": "2325:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:8",
														"nodeType": "YulTypedName",
														"src": "2333:5:8",
														"type": ""
													}
												],
												"src": "2287:139:8"
											},
											{
												"body": {
													"nativeSrc": "2515:391:8",
													"nodeType": "YulBlock",
													"src": "2515:391:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:8",
																"nodeType": "YulBlock",
																"src": "2561:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:8"
																			},
																			"nativeSrc": "2563:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:8"
																		},
																		"nativeSrc": "2563:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:8"
																		},
																		"nativeSrc": "2532:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:8"
																},
																"nativeSrc": "2528:32:8",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:8"
															},
															"nativeSrc": "2525:119:8",
															"nodeType": "YulIf",
															"src": "2525:119:8"
														},
														{
															"nativeSrc": "2654:117:8",
															"nodeType": "YulBlock",
															"src": "2654:117:8",
															"statements": [
																{
																	"nativeSrc": "2669:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:8",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:8",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:8",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:8"
																				},
																				"nativeSrc": "2729:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:8"
																		},
																		"nativeSrc": "2708:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:8",
															"nodeType": "YulBlock",
															"src": "2781:118:8",
															"statements": [
																{
																	"nativeSrc": "2796:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:8",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:8",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:8",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:8"
																				},
																				"nativeSrc": "2857:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:8"
																		},
																		"nativeSrc": "2836:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:8",
														"nodeType": "YulTypedName",
														"src": "2477:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:8",
														"nodeType": "YulTypedName",
														"src": "2488:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:8",
														"nodeType": "YulTypedName",
														"src": "2500:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:8",
														"nodeType": "YulTypedName",
														"src": "2508:6:8",
														"type": ""
													}
												],
												"src": "2432:474:8"
											},
											{
												"body": {
													"nativeSrc": "2954:48:8",
													"nodeType": "YulBlock",
													"src": "2954:48:8",
													"statements": [
														{
															"nativeSrc": "2964:32:8",
															"nodeType": "YulAssignment",
															"src": "2964:32:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:8"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:8"
																		},
																		"nativeSrc": "2982:13:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:8"
																},
																"nativeSrc": "2975:21:8",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:8",
														"nodeType": "YulTypedName",
														"src": "2936:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:8",
														"nodeType": "YulTypedName",
														"src": "2946:7:8",
														"type": ""
													}
												],
												"src": "2912:90:8"
											},
											{
												"body": {
													"nativeSrc": "3067:50:8",
													"nodeType": "YulBlock",
													"src": "3067:50:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:8",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:8"
																		},
																		"nativeSrc": "3089:21:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:8"
																},
																"nativeSrc": "3077:34:8",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:8"
															},
															"nativeSrc": "3077:34:8",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:8"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:8",
														"nodeType": "YulTypedName",
														"src": "3055:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:8",
														"nodeType": "YulTypedName",
														"src": "3062:3:8",
														"type": ""
													}
												],
												"src": "3008:109:8"
											},
											{
												"body": {
													"nativeSrc": "3215:118:8",
													"nodeType": "YulBlock",
													"src": "3215:118:8",
													"statements": [
														{
															"nativeSrc": "3225:26:8",
															"nodeType": "YulAssignment",
															"src": "3225:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:8"
																},
																"nativeSrc": "3233:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:8",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:8"
																		},
																		"nativeSrc": "3308:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:8",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:8"
																},
																"nativeSrc": "3261:65:8",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:8"
															},
															"nativeSrc": "3261:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:8",
														"nodeType": "YulTypedName",
														"src": "3187:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:8",
														"nodeType": "YulTypedName",
														"src": "3199:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:8",
														"nodeType": "YulTypedName",
														"src": "3210:4:8",
														"type": ""
													}
												],
												"src": "3123:210:8"
											},
											{
												"body": {
													"nativeSrc": "3404:53:8",
													"nodeType": "YulBlock",
													"src": "3404:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:8"
																		},
																		"nativeSrc": "3426:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:8"
																},
																"nativeSrc": "3414:37:8",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:8"
															},
															"nativeSrc": "3414:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:8"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:8",
														"nodeType": "YulTypedName",
														"src": "3392:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:8",
														"nodeType": "YulTypedName",
														"src": "3399:3:8",
														"type": ""
													}
												],
												"src": "3339:118:8"
											},
											{
												"body": {
													"nativeSrc": "3561:124:8",
													"nodeType": "YulBlock",
													"src": "3561:124:8",
													"statements": [
														{
															"nativeSrc": "3571:26:8",
															"nodeType": "YulAssignment",
															"src": "3571:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:8"
																},
																"nativeSrc": "3579:18:8",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:8",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:8"
																		},
																		"nativeSrc": "3660:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:8"
																},
																"nativeSrc": "3607:71:8",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:8"
															},
															"nativeSrc": "3607:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:8",
														"nodeType": "YulTypedName",
														"src": "3533:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:8",
														"nodeType": "YulTypedName",
														"src": "3545:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:8",
														"nodeType": "YulTypedName",
														"src": "3556:4:8",
														"type": ""
													}
												],
												"src": "3463:222:8"
											},
											{
												"body": {
													"nativeSrc": "3791:519:8",
													"nodeType": "YulBlock",
													"src": "3791:519:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "3837:83:8",
																"nodeType": "YulBlock",
																"src": "3837:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3839:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "3839:77:8"
																			},
																			"nativeSrc": "3839:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "3839:79:8"
																		},
																		"nativeSrc": "3839:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "3839:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3812:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "3812:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3821:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3821:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3808:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3808:3:8"
																		},
																		"nativeSrc": "3808:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3808:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3833:2:8",
																		"nodeType": "YulLiteral",
																		"src": "3833:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3804:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "3804:3:8"
																},
																"nativeSrc": "3804:32:8",
																"nodeType": "YulFunctionCall",
																"src": "3804:32:8"
															},
															"nativeSrc": "3801:119:8",
															"nodeType": "YulIf",
															"src": "3801:119:8"
														},
														{
															"nativeSrc": "3930:117:8",
															"nodeType": "YulBlock",
															"src": "3930:117:8",
															"statements": [
																{
																	"nativeSrc": "3945:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3945:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3959:1:8",
																		"nodeType": "YulLiteral",
																		"src": "3959:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3949:6:8",
																			"nodeType": "YulTypedName",
																			"src": "3949:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3974:63:8",
																	"nodeType": "YulAssignment",
																	"src": "3974:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4009:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4009:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4020:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4020:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4005:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4005:3:8"
																				},
																				"nativeSrc": "4005:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4005:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4029:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4029:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3984:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "3984:20:8"
																		},
																		"nativeSrc": "3984:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3984:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3974:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "3974:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4057:118:8",
															"nodeType": "YulBlock",
															"src": "4057:118:8",
															"statements": [
																{
																	"nativeSrc": "4072:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4072:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4086:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4086:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4076:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4076:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4102:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4102:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4137:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4137:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4148:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4148:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4133:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:8"
																				},
																				"nativeSrc": "4133:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4133:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4157:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4157:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4112:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4112:20:8"
																		},
																		"nativeSrc": "4112:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4102:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4102:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4185:118:8",
															"nodeType": "YulBlock",
															"src": "4185:118:8",
															"statements": [
																{
																	"nativeSrc": "4200:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4200:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4214:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:8",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4204:6:8",
																			"nodeType": "YulTypedName",
																			"src": "4204:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4230:63:8",
																	"nodeType": "YulAssignment",
																	"src": "4230:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4265:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "4265:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4276:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "4276:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4261:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4261:3:8"
																				},
																				"nativeSrc": "4261:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4261:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4285:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "4285:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4240:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "4240:20:8"
																		},
																		"nativeSrc": "4240:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4240:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4230:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "4230:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3691:619:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3745:9:8",
														"nodeType": "YulTypedName",
														"src": "3745:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3756:7:8",
														"nodeType": "YulTypedName",
														"src": "3756:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3768:6:8",
														"nodeType": "YulTypedName",
														"src": "3768:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3776:6:8",
														"nodeType": "YulTypedName",
														"src": "3776:6:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3784:6:8",
														"nodeType": "YulTypedName",
														"src": "3784:6:8",
														"type": ""
													}
												],
												"src": "3691:619:8"
											},
											{
												"body": {
													"nativeSrc": "4359:43:8",
													"nodeType": "YulBlock",
													"src": "4359:43:8",
													"statements": [
														{
															"nativeSrc": "4369:27:8",
															"nodeType": "YulAssignment",
															"src": "4369:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4384:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "4384:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4391:4:8",
																		"nodeType": "YulLiteral",
																		"src": "4391:4:8",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4380:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4380:3:8"
																},
																"nativeSrc": "4380:16:8",
																"nodeType": "YulFunctionCall",
																"src": "4380:16:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4369:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "4369:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4316:86:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4341:5:8",
														"nodeType": "YulTypedName",
														"src": "4341:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4351:7:8",
														"nodeType": "YulTypedName",
														"src": "4351:7:8",
														"type": ""
													}
												],
												"src": "4316:86:8"
											},
											{
												"body": {
													"nativeSrc": "4469:51:8",
													"nodeType": "YulBlock",
													"src": "4469:51:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4486:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "4486:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4507:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "4507:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4491:15:8",
																			"nodeType": "YulIdentifier",
																			"src": "4491:15:8"
																		},
																		"nativeSrc": "4491:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4491:22:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4479:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4479:6:8"
																},
																"nativeSrc": "4479:35:8",
																"nodeType": "YulFunctionCall",
																"src": "4479:35:8"
															},
															"nativeSrc": "4479:35:8",
															"nodeType": "YulExpressionStatement",
															"src": "4479:35:8"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4408:112:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4457:5:8",
														"nodeType": "YulTypedName",
														"src": "4457:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4464:3:8",
														"nodeType": "YulTypedName",
														"src": "4464:3:8",
														"type": ""
													}
												],
												"src": "4408:112:8"
											},
											{
												"body": {
													"nativeSrc": "4620:120:8",
													"nodeType": "YulBlock",
													"src": "4620:120:8",
													"statements": [
														{
															"nativeSrc": "4630:26:8",
															"nodeType": "YulAssignment",
															"src": "4630:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4642:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "4642:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4653:2:8",
																		"nodeType": "YulLiteral",
																		"src": "4653:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4638:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "4638:3:8"
																},
																"nativeSrc": "4638:18:8",
																"nodeType": "YulFunctionCall",
																"src": "4638:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4630:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "4630:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4706:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "4706:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4719:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "4719:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4730:1:8",
																				"nodeType": "YulLiteral",
																				"src": "4730:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4715:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4715:3:8"
																		},
																		"nativeSrc": "4715:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4715:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4666:39:8",
																	"nodeType": "YulIdentifier",
																	"src": "4666:39:8"
																},
																"nativeSrc": "4666:67:8",
																"nodeType": "YulFunctionCall",
																"src": "4666:67:8"
															},
															"nativeSrc": "4666:67:8",
															"nodeType": "YulExpressionStatement",
															"src": "4666:67:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4526:214:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4592:9:8",
														"nodeType": "YulTypedName",
														"src": "4592:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4604:6:8",
														"nodeType": "YulTypedName",
														"src": "4604:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4615:4:8",
														"nodeType": "YulTypedName",
														"src": "4615:4:8",
														"type": ""
													}
												],
												"src": "4526:214:8"
											},
											{
												"body": {
													"nativeSrc": "4835:28:8",
													"nodeType": "YulBlock",
													"src": "4835:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4852:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4852:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4855:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4855:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4845:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4845:6:8"
																},
																"nativeSrc": "4845:12:8",
																"nodeType": "YulFunctionCall",
																"src": "4845:12:8"
															},
															"nativeSrc": "4845:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "4845:12:8"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "4746:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "4746:117:8"
											},
											{
												"body": {
													"nativeSrc": "4958:28:8",
													"nodeType": "YulBlock",
													"src": "4958:28:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4975:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4975:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4978:1:8",
																		"nodeType": "YulLiteral",
																		"src": "4978:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4968:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "4968:6:8"
																},
																"nativeSrc": "4968:12:8",
																"nodeType": "YulFunctionCall",
																"src": "4968:12:8"
															},
															"nativeSrc": "4968:12:8",
															"nodeType": "YulExpressionStatement",
															"src": "4968:12:8"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "4869:117:8",
												"nodeType": "YulFunctionDefinition",
												"src": "4869:117:8"
											},
											{
												"body": {
													"nativeSrc": "5020:152:8",
													"nodeType": "YulBlock",
													"src": "5020:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5037:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5037:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5040:77:8",
																		"nodeType": "YulLiteral",
																		"src": "5040:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5030:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5030:6:8"
																},
																"nativeSrc": "5030:88:8",
																"nodeType": "YulFunctionCall",
																"src": "5030:88:8"
															},
															"nativeSrc": "5030:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "5030:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5134:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5134:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5137:4:8",
																		"nodeType": "YulLiteral",
																		"src": "5137:4:8",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5127:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5127:6:8"
																},
																"nativeSrc": "5127:15:8",
																"nodeType": "YulFunctionCall",
																"src": "5127:15:8"
															},
															"nativeSrc": "5127:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "5127:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5158:1:8",
																		"nodeType": "YulLiteral",
																		"src": "5158:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5161:4:8",
																		"nodeType": "YulLiteral",
																		"src": "5161:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5151:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5151:6:8"
																},
																"nativeSrc": "5151:15:8",
																"nodeType": "YulFunctionCall",
																"src": "5151:15:8"
															},
															"nativeSrc": "5151:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "5151:15:8"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "4992:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "4992:180:8"
											},
											{
												"body": {
													"nativeSrc": "5221:238:8",
													"nodeType": "YulBlock",
													"src": "5221:238:8",
													"statements": [
														{
															"nativeSrc": "5231:58:8",
															"nodeType": "YulVariableDeclaration",
															"src": "5231:58:8",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "5253:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5253:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "5283:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "5283:4:8"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "5261:21:8",
																			"nodeType": "YulIdentifier",
																			"src": "5261:21:8"
																		},
																		"nativeSrc": "5261:27:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5261:27:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5249:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5249:3:8"
																},
																"nativeSrc": "5249:40:8",
																"nodeType": "YulFunctionCall",
																"src": "5249:40:8"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "5235:10:8",
																	"nodeType": "YulTypedName",
																	"src": "5235:10:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5400:22:8",
																"nodeType": "YulBlock",
																"src": "5400:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5402:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "5402:16:8"
																			},
																			"nativeSrc": "5402:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5402:18:8"
																		},
																		"nativeSrc": "5402:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5402:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "5343:10:8",
																				"nodeType": "YulIdentifier",
																				"src": "5343:10:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5355:18:8",
																				"nodeType": "YulLiteral",
																				"src": "5355:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "5340:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "5340:2:8"
																		},
																		"nativeSrc": "5340:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5340:34:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "5379:10:8",
																				"nodeType": "YulIdentifier",
																				"src": "5379:10:8"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "5391:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "5391:6:8"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "5376:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "5376:2:8"
																		},
																		"nativeSrc": "5376:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "5376:22:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5337:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "5337:2:8"
																},
																"nativeSrc": "5337:62:8",
																"nodeType": "YulFunctionCall",
																"src": "5337:62:8"
															},
															"nativeSrc": "5334:88:8",
															"nodeType": "YulIf",
															"src": "5334:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5438:2:8",
																		"nodeType": "YulLiteral",
																		"src": "5438:2:8",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "5442:10:8",
																		"nodeType": "YulIdentifier",
																		"src": "5442:10:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5431:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5431:6:8"
																},
																"nativeSrc": "5431:22:8",
																"nodeType": "YulFunctionCall",
																"src": "5431:22:8"
															},
															"nativeSrc": "5431:22:8",
															"nodeType": "YulExpressionStatement",
															"src": "5431:22:8"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "5178:281:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5207:6:8",
														"nodeType": "YulTypedName",
														"src": "5207:6:8",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "5215:4:8",
														"nodeType": "YulTypedName",
														"src": "5215:4:8",
														"type": ""
													}
												],
												"src": "5178:281:8"
											},
											{
												"body": {
													"nativeSrc": "5506:88:8",
													"nodeType": "YulBlock",
													"src": "5506:88:8",
													"statements": [
														{
															"nativeSrc": "5516:30:8",
															"nodeType": "YulAssignment",
															"src": "5516:30:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "5526:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "5526:18:8"
																},
																"nativeSrc": "5526:20:8",
																"nodeType": "YulFunctionCall",
																"src": "5526:20:8"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "5516:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "5516:6:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "5575:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5575:6:8"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "5583:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5583:4:8"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "5555:19:8",
																	"nodeType": "YulIdentifier",
																	"src": "5555:19:8"
																},
																"nativeSrc": "5555:33:8",
																"nodeType": "YulFunctionCall",
																"src": "5555:33:8"
															},
															"nativeSrc": "5555:33:8",
															"nodeType": "YulExpressionStatement",
															"src": "5555:33:8"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "5465:129:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "5490:4:8",
														"nodeType": "YulTypedName",
														"src": "5490:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "5499:6:8",
														"nodeType": "YulTypedName",
														"src": "5499:6:8",
														"type": ""
													}
												],
												"src": "5465:129:8"
											},
											{
												"body": {
													"nativeSrc": "5667:241:8",
													"nodeType": "YulBlock",
													"src": "5667:241:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "5772:22:8",
																"nodeType": "YulBlock",
																"src": "5772:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5774:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "5774:16:8"
																			},
																			"nativeSrc": "5774:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "5774:18:8"
																		},
																		"nativeSrc": "5774:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "5774:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "5744:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5744:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5752:18:8",
																		"nodeType": "YulLiteral",
																		"src": "5752:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5741:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "5741:2:8"
																},
																"nativeSrc": "5741:30:8",
																"nodeType": "YulFunctionCall",
																"src": "5741:30:8"
															},
															"nativeSrc": "5738:56:8",
															"nodeType": "YulIf",
															"src": "5738:56:8"
														},
														{
															"nativeSrc": "5804:37:8",
															"nodeType": "YulAssignment",
															"src": "5804:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "5834:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "5834:6:8"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "5812:21:8",
																	"nodeType": "YulIdentifier",
																	"src": "5812:21:8"
																},
																"nativeSrc": "5812:29:8",
																"nodeType": "YulFunctionCall",
																"src": "5812:29:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "5804:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5804:4:8"
																}
															]
														},
														{
															"nativeSrc": "5878:23:8",
															"nodeType": "YulAssignment",
															"src": "5878:23:8",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "5890:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "5890:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5896:4:8",
																		"nodeType": "YulLiteral",
																		"src": "5896:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5886:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "5886:3:8"
																},
																"nativeSrc": "5886:15:8",
																"nodeType": "YulFunctionCall",
																"src": "5886:15:8"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "5878:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "5878:4:8"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "5600:308:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "5651:6:8",
														"nodeType": "YulTypedName",
														"src": "5651:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "5662:4:8",
														"nodeType": "YulTypedName",
														"src": "5662:4:8",
														"type": ""
													}
												],
												"src": "5600:308:8"
											},
											{
												"body": {
													"nativeSrc": "5978:84:8",
													"nodeType": "YulBlock",
													"src": "5978:84:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "6002:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6002:3:8"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "6007:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6007:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6012:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6012:6:8"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "5989:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "5989:12:8"
																},
																"nativeSrc": "5989:30:8",
																"nodeType": "YulFunctionCall",
																"src": "5989:30:8"
															},
															"nativeSrc": "5989:30:8",
															"nodeType": "YulExpressionStatement",
															"src": "5989:30:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "6039:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "6039:3:8"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "6044:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6044:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6035:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6035:3:8"
																		},
																		"nativeSrc": "6035:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6035:16:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6053:1:8",
																		"nodeType": "YulLiteral",
																		"src": "6053:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6028:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6028:6:8"
																},
																"nativeSrc": "6028:27:8",
																"nodeType": "YulFunctionCall",
																"src": "6028:27:8"
															},
															"nativeSrc": "6028:27:8",
															"nodeType": "YulExpressionStatement",
															"src": "6028:27:8"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "5914:148:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "5960:3:8",
														"nodeType": "YulTypedName",
														"src": "5960:3:8",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "5965:3:8",
														"nodeType": "YulTypedName",
														"src": "5965:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5970:6:8",
														"nodeType": "YulTypedName",
														"src": "5970:6:8",
														"type": ""
													}
												],
												"src": "5914:148:8"
											},
											{
												"body": {
													"nativeSrc": "6152:341:8",
													"nodeType": "YulBlock",
													"src": "6152:341:8",
													"statements": [
														{
															"nativeSrc": "6162:75:8",
															"nodeType": "YulAssignment",
															"src": "6162:75:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6229:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6229:6:8"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "6187:41:8",
																			"nodeType": "YulIdentifier",
																			"src": "6187:41:8"
																		},
																		"nativeSrc": "6187:49:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6187:49:8"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "6171:15:8",
																	"nodeType": "YulIdentifier",
																	"src": "6171:15:8"
																},
																"nativeSrc": "6171:66:8",
																"nodeType": "YulFunctionCall",
																"src": "6171:66:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "6162:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "6162:5:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "6253:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "6253:5:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6260:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6260:6:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6246:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6246:6:8"
																},
																"nativeSrc": "6246:21:8",
																"nodeType": "YulFunctionCall",
																"src": "6246:21:8"
															},
															"nativeSrc": "6246:21:8",
															"nodeType": "YulExpressionStatement",
															"src": "6246:21:8"
														},
														{
															"nativeSrc": "6276:27:8",
															"nodeType": "YulVariableDeclaration",
															"src": "6276:27:8",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "6291:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "6291:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6298:4:8",
																		"nodeType": "YulLiteral",
																		"src": "6298:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6287:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6287:3:8"
																},
																"nativeSrc": "6287:16:8",
																"nodeType": "YulFunctionCall",
																"src": "6287:16:8"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "6280:3:8",
																	"nodeType": "YulTypedName",
																	"src": "6280:3:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6341:83:8",
																"nodeType": "YulBlock",
																"src": "6341:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "6343:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "6343:77:8"
																			},
																			"nativeSrc": "6343:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6343:79:8"
																		},
																		"nativeSrc": "6343:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6343:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "6322:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "6322:3:8"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "6327:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6327:6:8"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6318:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6318:3:8"
																		},
																		"nativeSrc": "6318:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6318:16:8"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6336:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6336:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6315:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "6315:2:8"
																},
																"nativeSrc": "6315:25:8",
																"nodeType": "YulFunctionCall",
																"src": "6315:25:8"
															},
															"nativeSrc": "6312:112:8",
															"nodeType": "YulIf",
															"src": "6312:112:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "6470:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6470:3:8"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "6475:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6475:3:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6480:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6480:6:8"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "6433:36:8",
																	"nodeType": "YulIdentifier",
																	"src": "6433:36:8"
																},
																"nativeSrc": "6433:54:8",
																"nodeType": "YulFunctionCall",
																"src": "6433:54:8"
															},
															"nativeSrc": "6433:54:8",
															"nodeType": "YulExpressionStatement",
															"src": "6433:54:8"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr",
												"nativeSrc": "6068:425:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "6125:3:8",
														"nodeType": "YulTypedName",
														"src": "6125:3:8",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "6130:6:8",
														"nodeType": "YulTypedName",
														"src": "6130:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6138:3:8",
														"nodeType": "YulTypedName",
														"src": "6138:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "6146:5:8",
														"nodeType": "YulTypedName",
														"src": "6146:5:8",
														"type": ""
													}
												],
												"src": "6068:425:8"
											},
											{
												"body": {
													"nativeSrc": "6575:278:8",
													"nodeType": "YulBlock",
													"src": "6575:278:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "6624:83:8",
																"nodeType": "YulBlock",
																"src": "6624:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "6626:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "6626:77:8"
																			},
																			"nativeSrc": "6626:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "6626:79:8"
																		},
																		"nativeSrc": "6626:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "6626:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "6603:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "6603:6:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6611:4:8",
																						"nodeType": "YulLiteral",
																						"src": "6611:4:8",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6599:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "6599:3:8"
																				},
																				"nativeSrc": "6599:17:8",
																				"nodeType": "YulFunctionCall",
																				"src": "6599:17:8"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "6618:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "6618:3:8"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "6595:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6595:3:8"
																		},
																		"nativeSrc": "6595:27:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6595:27:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6588:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "6588:6:8"
																},
																"nativeSrc": "6588:35:8",
																"nodeType": "YulFunctionCall",
																"src": "6588:35:8"
															},
															"nativeSrc": "6585:122:8",
															"nodeType": "YulIf",
															"src": "6585:122:8"
														},
														{
															"nativeSrc": "6716:34:8",
															"nodeType": "YulVariableDeclaration",
															"src": "6716:34:8",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6743:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6743:6:8"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6730:12:8",
																	"nodeType": "YulIdentifier",
																	"src": "6730:12:8"
																},
																"nativeSrc": "6730:20:8",
																"nodeType": "YulFunctionCall",
																"src": "6730:20:8"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "6720:6:8",
																	"nodeType": "YulTypedName",
																	"src": "6720:6:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6759:88:8",
															"nodeType": "YulAssignment",
															"src": "6759:88:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "6820:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "6820:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6828:4:8",
																				"nodeType": "YulLiteral",
																				"src": "6828:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6816:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6816:3:8"
																		},
																		"nativeSrc": "6816:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6816:17:8"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6835:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "6835:6:8"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "6843:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "6843:3:8"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr",
																	"nativeSrc": "6768:47:8",
																	"nodeType": "YulIdentifier",
																	"src": "6768:47:8"
																},
																"nativeSrc": "6768:79:8",
																"nodeType": "YulFunctionCall",
																"src": "6768:79:8"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "6759:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "6759:5:8"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr",
												"nativeSrc": "6513:340:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6553:6:8",
														"nodeType": "YulTypedName",
														"src": "6553:6:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6561:3:8",
														"nodeType": "YulTypedName",
														"src": "6561:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "6569:5:8",
														"nodeType": "YulTypedName",
														"src": "6569:5:8",
														"type": ""
													}
												],
												"src": "6513:340:8"
											},
											{
												"body": {
													"nativeSrc": "6962:731:8",
													"nodeType": "YulBlock",
													"src": "6962:731:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "7008:83:8",
																"nodeType": "YulBlock",
																"src": "7008:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7010:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "7010:77:8"
																			},
																			"nativeSrc": "7010:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7010:79:8"
																		},
																		"nativeSrc": "7010:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "7010:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6983:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "6983:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6992:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "6992:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6979:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "6979:3:8"
																		},
																		"nativeSrc": "6979:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "6979:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7004:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7004:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6975:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "6975:3:8"
																},
																"nativeSrc": "6975:32:8",
																"nodeType": "YulFunctionCall",
																"src": "6975:32:8"
															},
															"nativeSrc": "6972:119:8",
															"nodeType": "YulIf",
															"src": "6972:119:8"
														},
														{
															"nativeSrc": "7101:287:8",
															"nodeType": "YulBlock",
															"src": "7101:287:8",
															"statements": [
																{
																	"nativeSrc": "7116:45:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7116:45:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7147:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "7147:9:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7158:1:8",
																						"nodeType": "YulLiteral",
																						"src": "7158:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7143:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "7143:3:8"
																				},
																				"nativeSrc": "7143:17:8",
																				"nodeType": "YulFunctionCall",
																				"src": "7143:17:8"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "7130:12:8",
																			"nodeType": "YulIdentifier",
																			"src": "7130:12:8"
																		},
																		"nativeSrc": "7130:31:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7130:31:8"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7120:6:8",
																			"nodeType": "YulTypedName",
																			"src": "7120:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "7208:83:8",
																		"nodeType": "YulBlock",
																		"src": "7208:83:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "7210:77:8",
																						"nodeType": "YulIdentifier",
																						"src": "7210:77:8"
																					},
																					"nativeSrc": "7210:79:8",
																					"nodeType": "YulFunctionCall",
																					"src": "7210:79:8"
																				},
																				"nativeSrc": "7210:79:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "7210:79:8"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7180:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "7180:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7188:18:8",
																				"nodeType": "YulLiteral",
																				"src": "7188:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7177:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "7177:2:8"
																		},
																		"nativeSrc": "7177:30:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7177:30:8"
																	},
																	"nativeSrc": "7174:117:8",
																	"nodeType": "YulIf",
																	"src": "7174:117:8"
																},
																{
																	"nativeSrc": "7305:73:8",
																	"nodeType": "YulAssignment",
																	"src": "7305:73:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7350:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "7350:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7361:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "7361:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7346:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "7346:3:8"
																				},
																				"nativeSrc": "7346:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "7346:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7370:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "7370:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "7315:30:8",
																			"nodeType": "YulIdentifier",
																			"src": "7315:30:8"
																		},
																		"nativeSrc": "7315:63:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7315:63:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7305:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "7305:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7398:288:8",
															"nodeType": "YulBlock",
															"src": "7398:288:8",
															"statements": [
																{
																	"nativeSrc": "7413:46:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7413:46:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7444:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "7444:9:8"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7455:2:8",
																						"nodeType": "YulLiteral",
																						"src": "7455:2:8",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7440:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "7440:3:8"
																				},
																				"nativeSrc": "7440:18:8",
																				"nodeType": "YulFunctionCall",
																				"src": "7440:18:8"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "7427:12:8",
																			"nodeType": "YulIdentifier",
																			"src": "7427:12:8"
																		},
																		"nativeSrc": "7427:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7427:32:8"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7417:6:8",
																			"nodeType": "YulTypedName",
																			"src": "7417:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "7506:83:8",
																		"nodeType": "YulBlock",
																		"src": "7506:83:8",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "7508:77:8",
																						"nodeType": "YulIdentifier",
																						"src": "7508:77:8"
																					},
																					"nativeSrc": "7508:79:8",
																					"nodeType": "YulFunctionCall",
																					"src": "7508:79:8"
																				},
																				"nativeSrc": "7508:79:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "7508:79:8"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "7478:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "7478:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7486:18:8",
																				"nodeType": "YulLiteral",
																				"src": "7486:18:8",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7475:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "7475:2:8"
																		},
																		"nativeSrc": "7475:30:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7475:30:8"
																	},
																	"nativeSrc": "7472:117:8",
																	"nodeType": "YulIf",
																	"src": "7472:117:8"
																},
																{
																	"nativeSrc": "7603:73:8",
																	"nodeType": "YulAssignment",
																	"src": "7603:73:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7648:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "7648:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7659:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "7659:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7644:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "7644:3:8"
																				},
																				"nativeSrc": "7644:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "7644:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7668:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "7668:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr",
																			"nativeSrc": "7613:30:8",
																			"nodeType": "YulIdentifier",
																			"src": "7613:30:8"
																		},
																		"nativeSrc": "7613:63:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7613:63:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7603:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "7603:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr",
												"nativeSrc": "6859:834:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6924:9:8",
														"nodeType": "YulTypedName",
														"src": "6924:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6935:7:8",
														"nodeType": "YulTypedName",
														"src": "6935:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6947:6:8",
														"nodeType": "YulTypedName",
														"src": "6947:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6955:6:8",
														"nodeType": "YulTypedName",
														"src": "6955:6:8",
														"type": ""
													}
												],
												"src": "6859:834:8"
											},
											{
												"body": {
													"nativeSrc": "7765:263:8",
													"nodeType": "YulBlock",
													"src": "7765:263:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "7811:83:8",
																"nodeType": "YulBlock",
																"src": "7811:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7813:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "7813:77:8"
																			},
																			"nativeSrc": "7813:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "7813:79:8"
																		},
																		"nativeSrc": "7813:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "7813:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7786:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "7786:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7795:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "7795:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7782:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "7782:3:8"
																		},
																		"nativeSrc": "7782:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7782:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7807:2:8",
																		"nodeType": "YulLiteral",
																		"src": "7807:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7778:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "7778:3:8"
																},
																"nativeSrc": "7778:32:8",
																"nodeType": "YulFunctionCall",
																"src": "7778:32:8"
															},
															"nativeSrc": "7775:119:8",
															"nodeType": "YulIf",
															"src": "7775:119:8"
														},
														{
															"nativeSrc": "7904:117:8",
															"nodeType": "YulBlock",
															"src": "7904:117:8",
															"statements": [
																{
																	"nativeSrc": "7919:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7919:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7933:1:8",
																		"nodeType": "YulLiteral",
																		"src": "7933:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7923:6:8",
																			"nodeType": "YulTypedName",
																			"src": "7923:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7948:63:8",
																	"nodeType": "YulAssignment",
																	"src": "7948:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7983:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "7983:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7994:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "7994:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7979:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "7979:3:8"
																				},
																				"nativeSrc": "7979:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "7979:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8003:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "8003:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7958:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "7958:20:8"
																		},
																		"nativeSrc": "7958:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "7958:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7948:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "7948:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "7699:329:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7735:9:8",
														"nodeType": "YulTypedName",
														"src": "7735:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7746:7:8",
														"nodeType": "YulTypedName",
														"src": "7746:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7758:6:8",
														"nodeType": "YulTypedName",
														"src": "7758:6:8",
														"type": ""
													}
												],
												"src": "7699:329:8"
											},
											{
												"body": {
													"nativeSrc": "8099:53:8",
													"nodeType": "YulBlock",
													"src": "8099:53:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8116:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "8116:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8139:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "8139:5:8"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "8121:17:8",
																			"nodeType": "YulIdentifier",
																			"src": "8121:17:8"
																		},
																		"nativeSrc": "8121:24:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8121:24:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8109:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8109:6:8"
																},
																"nativeSrc": "8109:37:8",
																"nodeType": "YulFunctionCall",
																"src": "8109:37:8"
															},
															"nativeSrc": "8109:37:8",
															"nodeType": "YulExpressionStatement",
															"src": "8109:37:8"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "8034:118:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8087:5:8",
														"nodeType": "YulTypedName",
														"src": "8087:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8094:3:8",
														"nodeType": "YulTypedName",
														"src": "8094:3:8",
														"type": ""
													}
												],
												"src": "8034:118:8"
											},
											{
												"body": {
													"nativeSrc": "8256:124:8",
													"nodeType": "YulBlock",
													"src": "8256:124:8",
													"statements": [
														{
															"nativeSrc": "8266:26:8",
															"nodeType": "YulAssignment",
															"src": "8266:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8278:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "8278:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8289:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8289:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8274:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8274:3:8"
																},
																"nativeSrc": "8274:18:8",
																"nodeType": "YulFunctionCall",
																"src": "8274:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8266:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8266:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8346:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "8346:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8359:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8359:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8370:1:8",
																				"nodeType": "YulLiteral",
																				"src": "8370:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8355:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8355:3:8"
																		},
																		"nativeSrc": "8355:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8355:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "8302:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "8302:43:8"
																},
																"nativeSrc": "8302:71:8",
																"nodeType": "YulFunctionCall",
																"src": "8302:71:8"
															},
															"nativeSrc": "8302:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "8302:71:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "8158:222:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8228:9:8",
														"nodeType": "YulTypedName",
														"src": "8228:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8240:6:8",
														"nodeType": "YulTypedName",
														"src": "8240:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8251:4:8",
														"nodeType": "YulTypedName",
														"src": "8251:4:8",
														"type": ""
													}
												],
												"src": "8158:222:8"
											},
											{
												"body": {
													"nativeSrc": "8469:391:8",
													"nodeType": "YulBlock",
													"src": "8469:391:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "8515:83:8",
																"nodeType": "YulBlock",
																"src": "8515:83:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8517:77:8",
																				"nodeType": "YulIdentifier",
																				"src": "8517:77:8"
																			},
																			"nativeSrc": "8517:79:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8517:79:8"
																		},
																		"nativeSrc": "8517:79:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "8517:79:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8490:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "8490:7:8"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8499:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "8499:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8486:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8486:3:8"
																		},
																		"nativeSrc": "8486:23:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8486:23:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8511:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8511:2:8",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8482:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "8482:3:8"
																},
																"nativeSrc": "8482:32:8",
																"nodeType": "YulFunctionCall",
																"src": "8482:32:8"
															},
															"nativeSrc": "8479:119:8",
															"nodeType": "YulIf",
															"src": "8479:119:8"
														},
														{
															"nativeSrc": "8608:117:8",
															"nodeType": "YulBlock",
															"src": "8608:117:8",
															"statements": [
																{
																	"nativeSrc": "8623:15:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8623:15:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8637:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8637:1:8",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8627:6:8",
																			"nodeType": "YulTypedName",
																			"src": "8627:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8652:63:8",
																	"nodeType": "YulAssignment",
																	"src": "8652:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8687:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "8687:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8698:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "8698:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8683:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "8683:3:8"
																				},
																				"nativeSrc": "8683:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "8683:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8707:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "8707:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8662:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "8662:20:8"
																		},
																		"nativeSrc": "8662:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8662:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8652:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "8652:6:8"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8735:118:8",
															"nodeType": "YulBlock",
															"src": "8735:118:8",
															"statements": [
																{
																	"nativeSrc": "8750:16:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8750:16:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8764:2:8",
																		"nodeType": "YulLiteral",
																		"src": "8764:2:8",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8754:6:8",
																			"nodeType": "YulTypedName",
																			"src": "8754:6:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8780:63:8",
																	"nodeType": "YulAssignment",
																	"src": "8780:63:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8815:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "8815:9:8"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8826:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "8826:6:8"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8811:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "8811:3:8"
																				},
																				"nativeSrc": "8811:22:8",
																				"nodeType": "YulFunctionCall",
																				"src": "8811:22:8"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8835:7:8",
																				"nodeType": "YulIdentifier",
																				"src": "8835:7:8"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8790:20:8",
																			"nodeType": "YulIdentifier",
																			"src": "8790:20:8"
																		},
																		"nativeSrc": "8790:53:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8790:53:8"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8780:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "8780:6:8"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "8386:474:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8431:9:8",
														"nodeType": "YulTypedName",
														"src": "8431:9:8",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8442:7:8",
														"nodeType": "YulTypedName",
														"src": "8442:7:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8454:6:8",
														"nodeType": "YulTypedName",
														"src": "8454:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8462:6:8",
														"nodeType": "YulTypedName",
														"src": "8462:6:8",
														"type": ""
													}
												],
												"src": "8386:474:8"
											},
											{
												"body": {
													"nativeSrc": "8894:152:8",
													"nodeType": "YulBlock",
													"src": "8894:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8911:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8911:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8914:77:8",
																		"nodeType": "YulLiteral",
																		"src": "8914:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8904:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8904:6:8"
																},
																"nativeSrc": "8904:88:8",
																"nodeType": "YulFunctionCall",
																"src": "8904:88:8"
															},
															"nativeSrc": "8904:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "8904:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9008:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9008:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9011:4:8",
																		"nodeType": "YulLiteral",
																		"src": "9011:4:8",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9001:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9001:6:8"
																},
																"nativeSrc": "9001:15:8",
																"nodeType": "YulFunctionCall",
																"src": "9001:15:8"
															},
															"nativeSrc": "9001:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "9001:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9032:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9032:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9035:4:8",
																		"nodeType": "YulLiteral",
																		"src": "9035:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9025:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9025:6:8"
																},
																"nativeSrc": "9025:15:8",
																"nodeType": "YulFunctionCall",
																"src": "9025:15:8"
															},
															"nativeSrc": "9025:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "9025:15:8"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "8866:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "8866:180:8"
											},
											{
												"body": {
													"nativeSrc": "9103:269:8",
													"nodeType": "YulBlock",
													"src": "9103:269:8",
													"statements": [
														{
															"nativeSrc": "9113:22:8",
															"nodeType": "YulAssignment",
															"src": "9113:22:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "9127:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "9127:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9133:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9133:1:8",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "9123:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9123:3:8"
																},
																"nativeSrc": "9123:12:8",
																"nodeType": "YulFunctionCall",
																"src": "9123:12:8"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "9113:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9113:6:8"
																}
															]
														},
														{
															"nativeSrc": "9144:38:8",
															"nodeType": "YulVariableDeclaration",
															"src": "9144:38:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "9174:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "9174:4:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9180:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9180:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "9170:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9170:3:8"
																},
																"nativeSrc": "9170:12:8",
																"nodeType": "YulFunctionCall",
																"src": "9170:12:8"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "9148:18:8",
																	"nodeType": "YulTypedName",
																	"src": "9148:18:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9221:51:8",
																"nodeType": "YulBlock",
																"src": "9221:51:8",
																"statements": [
																	{
																		"nativeSrc": "9235:27:8",
																		"nodeType": "YulAssignment",
																		"src": "9235:27:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "9249:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "9249:6:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9257:4:8",
																					"nodeType": "YulLiteral",
																					"src": "9257:4:8",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "9245:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "9245:3:8"
																			},
																			"nativeSrc": "9245:17:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9245:17:8"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "9235:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "9235:6:8"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "9201:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "9201:18:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9194:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9194:6:8"
																},
																"nativeSrc": "9194:26:8",
																"nodeType": "YulFunctionCall",
																"src": "9194:26:8"
															},
															"nativeSrc": "9191:81:8",
															"nodeType": "YulIf",
															"src": "9191:81:8"
														},
														{
															"body": {
																"nativeSrc": "9324:42:8",
																"nodeType": "YulBlock",
																"src": "9324:42:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "9338:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "9338:16:8"
																			},
																			"nativeSrc": "9338:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "9338:18:8"
																		},
																		"nativeSrc": "9338:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "9338:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "9288:18:8",
																		"nodeType": "YulIdentifier",
																		"src": "9288:18:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "9311:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "9311:6:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9319:2:8",
																				"nodeType": "YulLiteral",
																				"src": "9319:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "9308:2:8",
																			"nodeType": "YulIdentifier",
																			"src": "9308:2:8"
																		},
																		"nativeSrc": "9308:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9308:14:8"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "9285:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "9285:2:8"
																},
																"nativeSrc": "9285:38:8",
																"nodeType": "YulFunctionCall",
																"src": "9285:38:8"
															},
															"nativeSrc": "9282:84:8",
															"nodeType": "YulIf",
															"src": "9282:84:8"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "9052:320:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "9087:4:8",
														"nodeType": "YulTypedName",
														"src": "9087:4:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "9096:6:8",
														"nodeType": "YulTypedName",
														"src": "9096:6:8",
														"type": ""
													}
												],
												"src": "9052:320:8"
											},
											{
												"body": {
													"nativeSrc": "9431:32:8",
													"nodeType": "YulBlock",
													"src": "9431:32:8",
													"statements": [
														{
															"nativeSrc": "9441:16:8",
															"nodeType": "YulAssignment",
															"src": "9441:16:8",
															"value": {
																"name": "value",
																"nativeSrc": "9452:5:8",
																"nodeType": "YulIdentifier",
																"src": "9452:5:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "9441:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "9441:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_1_by_1",
												"nativeSrc": "9378:85:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9413:5:8",
														"nodeType": "YulTypedName",
														"src": "9413:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "9423:7:8",
														"nodeType": "YulTypedName",
														"src": "9423:7:8",
														"type": ""
													}
												],
												"src": "9378:85:8"
											},
											{
												"body": {
													"nativeSrc": "9513:57:8",
													"nodeType": "YulBlock",
													"src": "9513:57:8",
													"statements": [
														{
															"nativeSrc": "9523:41:8",
															"nodeType": "YulAssignment",
															"src": "9523:41:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9538:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "9538:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9545:18:8",
																		"nodeType": "YulLiteral",
																		"src": "9545:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "9534:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9534:3:8"
																},
																"nativeSrc": "9534:30:8",
																"nodeType": "YulFunctionCall",
																"src": "9534:30:8"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "9523:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "9523:7:8"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint64",
												"nativeSrc": "9469:101:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9495:5:8",
														"nodeType": "YulTypedName",
														"src": "9495:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "9505:7:8",
														"nodeType": "YulTypedName",
														"src": "9505:7:8",
														"type": ""
													}
												],
												"src": "9469:101:8"
											},
											{
												"body": {
													"nativeSrc": "9608:28:8",
													"nodeType": "YulBlock",
													"src": "9608:28:8",
													"statements": [
														{
															"nativeSrc": "9618:12:8",
															"nodeType": "YulAssignment",
															"src": "9618:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "9625:5:8",
																"nodeType": "YulIdentifier",
																"src": "9625:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "9618:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "9618:3:8"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "9576:60:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9594:5:8",
														"nodeType": "YulTypedName",
														"src": "9594:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "9604:3:8",
														"nodeType": "YulTypedName",
														"src": "9604:3:8",
														"type": ""
													}
												],
												"src": "9576:60:8"
											},
											{
												"body": {
													"nativeSrc": "9709:89:8",
													"nodeType": "YulBlock",
													"src": "9709:89:8",
													"statements": [
														{
															"nativeSrc": "9719:73:8",
															"nodeType": "YulAssignment",
															"src": "9719:73:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9784:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "9784:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_1_by_1",
																					"nativeSrc": "9758:25:8",
																					"nodeType": "YulIdentifier",
																					"src": "9758:25:8"
																				},
																				"nativeSrc": "9758:32:8",
																				"nodeType": "YulFunctionCall",
																				"src": "9758:32:8"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "9749:8:8",
																			"nodeType": "YulIdentifier",
																			"src": "9749:8:8"
																		},
																		"nativeSrc": "9749:42:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9749:42:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint64",
																	"nativeSrc": "9732:16:8",
																	"nodeType": "YulIdentifier",
																	"src": "9732:16:8"
																},
																"nativeSrc": "9732:60:8",
																"nodeType": "YulFunctionCall",
																"src": "9732:60:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "9719:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "9719:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_1_by_1_to_t_uint64",
												"nativeSrc": "9642:156:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9689:5:8",
														"nodeType": "YulTypedName",
														"src": "9689:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "9699:9:8",
														"nodeType": "YulTypedName",
														"src": "9699:9:8",
														"type": ""
													}
												],
												"src": "9642:156:8"
											},
											{
												"body": {
													"nativeSrc": "9876:73:8",
													"nodeType": "YulBlock",
													"src": "9876:73:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9893:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "9893:3:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9936:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "9936:5:8"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_1_by_1_to_t_uint64",
																			"nativeSrc": "9898:37:8",
																			"nodeType": "YulIdentifier",
																			"src": "9898:37:8"
																		},
																		"nativeSrc": "9898:44:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9898:44:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9886:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "9886:6:8"
																},
																"nativeSrc": "9886:57:8",
																"nodeType": "YulFunctionCall",
																"src": "9886:57:8"
															},
															"nativeSrc": "9886:57:8",
															"nodeType": "YulExpressionStatement",
															"src": "9886:57:8"
														}
													]
												},
												"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
												"nativeSrc": "9804:145:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9864:5:8",
														"nodeType": "YulTypedName",
														"src": "9864:5:8",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9871:3:8",
														"nodeType": "YulTypedName",
														"src": "9871:3:8",
														"type": ""
													}
												],
												"src": "9804:145:8"
											},
											{
												"body": {
													"nativeSrc": "10060:131:8",
													"nodeType": "YulBlock",
													"src": "10060:131:8",
													"statements": [
														{
															"nativeSrc": "10070:26:8",
															"nodeType": "YulAssignment",
															"src": "10070:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10082:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "10082:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10093:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10093:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10078:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10078:3:8"
																},
																"nativeSrc": "10078:18:8",
																"nodeType": "YulFunctionCall",
																"src": "10078:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10070:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "10070:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10157:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "10157:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10170:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10170:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10181:1:8",
																				"nodeType": "YulLiteral",
																				"src": "10181:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10166:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10166:3:8"
																		},
																		"nativeSrc": "10166:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10166:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_1_by_1_to_t_uint64_fromStack",
																	"nativeSrc": "10106:50:8",
																	"nodeType": "YulIdentifier",
																	"src": "10106:50:8"
																},
																"nativeSrc": "10106:78:8",
																"nodeType": "YulFunctionCall",
																"src": "10106:78:8"
															},
															"nativeSrc": "10106:78:8",
															"nodeType": "YulExpressionStatement",
															"src": "10106:78:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
												"nativeSrc": "9955:236:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10032:9:8",
														"nodeType": "YulTypedName",
														"src": "10032:9:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10044:6:8",
														"nodeType": "YulTypedName",
														"src": "10044:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10055:4:8",
														"nodeType": "YulTypedName",
														"src": "10055:4:8",
														"type": ""
													}
												],
												"src": "9955:236:8"
											},
											{
												"body": {
													"nativeSrc": "10351:288:8",
													"nodeType": "YulBlock",
													"src": "10351:288:8",
													"statements": [
														{
															"nativeSrc": "10361:26:8",
															"nodeType": "YulAssignment",
															"src": "10361:26:8",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10373:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "10373:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10384:2:8",
																		"nodeType": "YulLiteral",
																		"src": "10384:2:8",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10369:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10369:3:8"
																},
																"nativeSrc": "10369:18:8",
																"nodeType": "YulFunctionCall",
																"src": "10369:18:8"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10361:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "10361:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10441:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "10441:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10454:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10454:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10465:1:8",
																				"nodeType": "YulLiteral",
																				"src": "10465:1:8",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10450:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10450:3:8"
																		},
																		"nativeSrc": "10450:17:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10450:17:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10397:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "10397:43:8"
																},
																"nativeSrc": "10397:71:8",
																"nodeType": "YulFunctionCall",
																"src": "10397:71:8"
															},
															"nativeSrc": "10397:71:8",
															"nodeType": "YulExpressionStatement",
															"src": "10397:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10522:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "10522:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10535:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10535:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10546:2:8",
																				"nodeType": "YulLiteral",
																				"src": "10546:2:8",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10531:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10531:3:8"
																		},
																		"nativeSrc": "10531:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10531:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10478:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "10478:43:8"
																},
																"nativeSrc": "10478:72:8",
																"nodeType": "YulFunctionCall",
																"src": "10478:72:8"
															},
															"nativeSrc": "10478:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "10478:72:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "10604:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "10604:6:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10617:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "10617:9:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10628:2:8",
																				"nodeType": "YulLiteral",
																				"src": "10628:2:8",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10613:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "10613:3:8"
																		},
																		"nativeSrc": "10613:18:8",
																		"nodeType": "YulFunctionCall",
																		"src": "10613:18:8"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10560:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "10560:43:8"
																},
																"nativeSrc": "10560:72:8",
																"nodeType": "YulFunctionCall",
																"src": "10560:72:8"
															},
															"nativeSrc": "10560:72:8",
															"nodeType": "YulExpressionStatement",
															"src": "10560:72:8"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "10197:442:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10307:9:8",
														"nodeType": "YulTypedName",
														"src": "10307:9:8",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10319:6:8",
														"nodeType": "YulTypedName",
														"src": "10319:6:8",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10327:6:8",
														"nodeType": "YulTypedName",
														"src": "10327:6:8",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10335:6:8",
														"nodeType": "YulTypedName",
														"src": "10335:6:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10346:4:8",
														"nodeType": "YulTypedName",
														"src": "10346:4:8",
														"type": ""
													}
												],
												"src": "10197:442:8"
											},
											{
												"body": {
													"nativeSrc": "10673:152:8",
													"nodeType": "YulBlock",
													"src": "10673:152:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10690:1:8",
																		"nodeType": "YulLiteral",
																		"src": "10690:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10693:77:8",
																		"nodeType": "YulLiteral",
																		"src": "10693:77:8",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10683:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10683:6:8"
																},
																"nativeSrc": "10683:88:8",
																"nodeType": "YulFunctionCall",
																"src": "10683:88:8"
															},
															"nativeSrc": "10683:88:8",
															"nodeType": "YulExpressionStatement",
															"src": "10683:88:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10787:1:8",
																		"nodeType": "YulLiteral",
																		"src": "10787:1:8",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10790:4:8",
																		"nodeType": "YulLiteral",
																		"src": "10790:4:8",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10780:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10780:6:8"
																},
																"nativeSrc": "10780:15:8",
																"nodeType": "YulFunctionCall",
																"src": "10780:15:8"
															},
															"nativeSrc": "10780:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "10780:15:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10811:1:8",
																		"nodeType": "YulLiteral",
																		"src": "10811:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10814:4:8",
																		"nodeType": "YulLiteral",
																		"src": "10814:4:8",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10804:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "10804:6:8"
																},
																"nativeSrc": "10804:15:8",
																"nodeType": "YulFunctionCall",
																"src": "10804:15:8"
															},
															"nativeSrc": "10804:15:8",
															"nodeType": "YulExpressionStatement",
															"src": "10804:15:8"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "10645:180:8",
												"nodeType": "YulFunctionDefinition",
												"src": "10645:180:8"
											},
											{
												"body": {
													"nativeSrc": "10875:147:8",
													"nodeType": "YulBlock",
													"src": "10875:147:8",
													"statements": [
														{
															"nativeSrc": "10885:25:8",
															"nodeType": "YulAssignment",
															"src": "10885:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10908:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10908:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10890:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "10890:17:8"
																},
																"nativeSrc": "10890:20:8",
																"nodeType": "YulFunctionCall",
																"src": "10890:20:8"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10885:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "10885:1:8"
																}
															]
														},
														{
															"nativeSrc": "10919:25:8",
															"nodeType": "YulAssignment",
															"src": "10919:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10942:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10942:1:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10924:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "10924:17:8"
																},
																"nativeSrc": "10924:20:8",
																"nodeType": "YulFunctionCall",
																"src": "10924:20:8"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10919:1:8",
																	"nodeType": "YulIdentifier",
																	"src": "10919:1:8"
																}
															]
														},
														{
															"nativeSrc": "10953:16:8",
															"nodeType": "YulAssignment",
															"src": "10953:16:8",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10964:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10964:1:8"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10967:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10967:1:8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10960:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10960:3:8"
																},
																"nativeSrc": "10960:9:8",
																"nodeType": "YulFunctionCall",
																"src": "10960:9:8"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "10953:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "10953:3:8"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10993:22:8",
																"nodeType": "YulBlock",
																"src": "10993:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10995:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "10995:16:8"
																			},
																			"nativeSrc": "10995:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "10995:18:8"
																		},
																		"nativeSrc": "10995:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "10995:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10985:1:8",
																		"nodeType": "YulIdentifier",
																		"src": "10985:1:8"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "10988:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "10988:3:8"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10982:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "10982:2:8"
																},
																"nativeSrc": "10982:10:8",
																"nodeType": "YulFunctionCall",
																"src": "10982:10:8"
															},
															"nativeSrc": "10979:36:8",
															"nodeType": "YulIf",
															"src": "10979:36:8"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "10831:191:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10862:1:8",
														"nodeType": "YulTypedName",
														"src": "10862:1:8",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10865:1:8",
														"nodeType": "YulTypedName",
														"src": "10865:1:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "10871:3:8",
														"nodeType": "YulTypedName",
														"src": "10871:3:8",
														"type": ""
													}
												],
												"src": "10831:191:8"
											},
											{
												"body": {
													"nativeSrc": "11082:87:8",
													"nodeType": "YulBlock",
													"src": "11082:87:8",
													"statements": [
														{
															"nativeSrc": "11092:11:8",
															"nodeType": "YulAssignment",
															"src": "11092:11:8",
															"value": {
																"name": "ptr",
																"nativeSrc": "11100:3:8",
																"nodeType": "YulIdentifier",
																"src": "11100:3:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "11092:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "11092:4:8"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11120:1:8",
																		"nodeType": "YulLiteral",
																		"src": "11120:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "11123:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "11123:3:8"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11113:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11113:6:8"
																},
																"nativeSrc": "11113:14:8",
																"nodeType": "YulFunctionCall",
																"src": "11113:14:8"
															},
															"nativeSrc": "11113:14:8",
															"nodeType": "YulExpressionStatement",
															"src": "11113:14:8"
														},
														{
															"nativeSrc": "11136:26:8",
															"nodeType": "YulAssignment",
															"src": "11136:26:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11154:1:8",
																		"nodeType": "YulLiteral",
																		"src": "11154:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11157:4:8",
																		"nodeType": "YulLiteral",
																		"src": "11157:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "11144:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "11144:9:8"
																},
																"nativeSrc": "11144:18:8",
																"nodeType": "YulFunctionCall",
																"src": "11144:18:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "11136:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "11136:4:8"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "11028:141:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "11069:3:8",
														"nodeType": "YulTypedName",
														"src": "11069:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "11077:4:8",
														"nodeType": "YulTypedName",
														"src": "11077:4:8",
														"type": ""
													}
												],
												"src": "11028:141:8"
											},
											{
												"body": {
													"nativeSrc": "11219:49:8",
													"nodeType": "YulBlock",
													"src": "11219:49:8",
													"statements": [
														{
															"nativeSrc": "11229:33:8",
															"nodeType": "YulAssignment",
															"src": "11229:33:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11247:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "11247:5:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11254:2:8",
																				"nodeType": "YulLiteral",
																				"src": "11254:2:8",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11243:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11243:3:8"
																		},
																		"nativeSrc": "11243:14:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11243:14:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11259:2:8",
																		"nodeType": "YulLiteral",
																		"src": "11259:2:8",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "11239:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11239:3:8"
																},
																"nativeSrc": "11239:23:8",
																"nodeType": "YulFunctionCall",
																"src": "11239:23:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "11229:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11229:6:8"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "11175:93:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11202:5:8",
														"nodeType": "YulTypedName",
														"src": "11202:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "11212:6:8",
														"nodeType": "YulTypedName",
														"src": "11212:6:8",
														"type": ""
													}
												],
												"src": "11175:93:8"
											},
											{
												"body": {
													"nativeSrc": "11327:54:8",
													"nodeType": "YulBlock",
													"src": "11327:54:8",
													"statements": [
														{
															"nativeSrc": "11337:37:8",
															"nodeType": "YulAssignment",
															"src": "11337:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "11362:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "11362:4:8"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "11368:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "11368:5:8"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "11358:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11358:3:8"
																},
																"nativeSrc": "11358:16:8",
																"nodeType": "YulFunctionCall",
																"src": "11358:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "11337:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "11337:8:8"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "11274:107:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "11302:4:8",
														"nodeType": "YulTypedName",
														"src": "11302:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "11308:5:8",
														"nodeType": "YulTypedName",
														"src": "11308:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "11318:8:8",
														"nodeType": "YulTypedName",
														"src": "11318:8:8",
														"type": ""
													}
												],
												"src": "11274:107:8"
											},
											{
												"body": {
													"nativeSrc": "11463:317:8",
													"nodeType": "YulBlock",
													"src": "11463:317:8",
													"statements": [
														{
															"nativeSrc": "11473:35:8",
															"nodeType": "YulVariableDeclaration",
															"src": "11473:35:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "11494:10:8",
																		"nodeType": "YulIdentifier",
																		"src": "11494:10:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11506:1:8",
																		"nodeType": "YulLiteral",
																		"src": "11506:1:8",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "11490:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11490:3:8"
																},
																"nativeSrc": "11490:18:8",
																"nodeType": "YulFunctionCall",
																"src": "11490:18:8"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "11477:9:8",
																	"nodeType": "YulTypedName",
																	"src": "11477:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11517:109:8",
															"nodeType": "YulVariableDeclaration",
															"src": "11517:109:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "11548:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "11548:9:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11559:66:8",
																		"nodeType": "YulLiteral",
																		"src": "11559:66:8",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "11529:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "11529:18:8"
																},
																"nativeSrc": "11529:97:8",
																"nodeType": "YulFunctionCall",
																"src": "11529:97:8"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "11521:4:8",
																	"nodeType": "YulTypedName",
																	"src": "11521:4:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11635:51:8",
															"nodeType": "YulAssignment",
															"src": "11635:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "11666:9:8",
																		"nodeType": "YulIdentifier",
																		"src": "11666:9:8"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "11677:8:8",
																		"nodeType": "YulIdentifier",
																		"src": "11677:8:8"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "11647:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "11647:18:8"
																},
																"nativeSrc": "11647:39:8",
																"nodeType": "YulFunctionCall",
																"src": "11647:39:8"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "11635:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "11635:8:8"
																}
															]
														},
														{
															"nativeSrc": "11695:30:8",
															"nodeType": "YulAssignment",
															"src": "11695:30:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11708:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "11708:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "11719:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "11719:4:8"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "11715:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11715:3:8"
																		},
																		"nativeSrc": "11715:9:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11715:9:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "11704:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11704:3:8"
																},
																"nativeSrc": "11704:21:8",
																"nodeType": "YulFunctionCall",
																"src": "11704:21:8"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "11695:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "11695:5:8"
																}
															]
														},
														{
															"nativeSrc": "11734:40:8",
															"nodeType": "YulAssignment",
															"src": "11734:40:8",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11747:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "11747:5:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "11758:8:8",
																				"nodeType": "YulIdentifier",
																				"src": "11758:8:8"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "11768:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "11768:4:8"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11754:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "11754:3:8"
																		},
																		"nativeSrc": "11754:19:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11754:19:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "11744:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "11744:2:8"
																},
																"nativeSrc": "11744:30:8",
																"nodeType": "YulFunctionCall",
																"src": "11744:30:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "11734:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "11734:6:8"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "11387:393:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11424:5:8",
														"nodeType": "YulTypedName",
														"src": "11424:5:8",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "11431:10:8",
														"nodeType": "YulTypedName",
														"src": "11431:10:8",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "11443:8:8",
														"nodeType": "YulTypedName",
														"src": "11443:8:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "11456:6:8",
														"nodeType": "YulTypedName",
														"src": "11456:6:8",
														"type": ""
													}
												],
												"src": "11387:393:8"
											},
											{
												"body": {
													"nativeSrc": "11846:82:8",
													"nodeType": "YulBlock",
													"src": "11846:82:8",
													"statements": [
														{
															"nativeSrc": "11856:66:8",
															"nodeType": "YulAssignment",
															"src": "11856:66:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "11914:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "11914:5:8"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "11896:17:8",
																					"nodeType": "YulIdentifier",
																					"src": "11896:17:8"
																				},
																				"nativeSrc": "11896:24:8",
																				"nodeType": "YulFunctionCall",
																				"src": "11896:24:8"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "11887:8:8",
																			"nodeType": "YulIdentifier",
																			"src": "11887:8:8"
																		},
																		"nativeSrc": "11887:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "11887:34:8"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11869:17:8",
																	"nodeType": "YulIdentifier",
																	"src": "11869:17:8"
																},
																"nativeSrc": "11869:53:8",
																"nodeType": "YulFunctionCall",
																"src": "11869:53:8"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "11856:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "11856:9:8"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "11786:142:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11826:5:8",
														"nodeType": "YulTypedName",
														"src": "11826:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "11836:9:8",
														"nodeType": "YulTypedName",
														"src": "11836:9:8",
														"type": ""
													}
												],
												"src": "11786:142:8"
											},
											{
												"body": {
													"nativeSrc": "11981:28:8",
													"nodeType": "YulBlock",
													"src": "11981:28:8",
													"statements": [
														{
															"nativeSrc": "11991:12:8",
															"nodeType": "YulAssignment",
															"src": "11991:12:8",
															"value": {
																"name": "value",
																"nativeSrc": "11998:5:8",
																"nodeType": "YulIdentifier",
																"src": "11998:5:8"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "11991:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "11991:3:8"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "11934:75:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11967:5:8",
														"nodeType": "YulTypedName",
														"src": "11967:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "11977:3:8",
														"nodeType": "YulTypedName",
														"src": "11977:3:8",
														"type": ""
													}
												],
												"src": "11934:75:8"
											},
											{
												"body": {
													"nativeSrc": "12091:193:8",
													"nodeType": "YulBlock",
													"src": "12091:193:8",
													"statements": [
														{
															"nativeSrc": "12101:63:8",
															"nodeType": "YulVariableDeclaration",
															"src": "12101:63:8",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "12156:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "12156:7:8"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "12125:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "12125:30:8"
																},
																"nativeSrc": "12125:39:8",
																"nodeType": "YulFunctionCall",
																"src": "12125:39:8"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "12105:16:8",
																	"nodeType": "YulTypedName",
																	"src": "12105:16:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "12180:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "12180:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "12220:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "12220:4:8"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "12214:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "12214:5:8"
																				},
																				"nativeSrc": "12214:11:8",
																				"nodeType": "YulFunctionCall",
																				"src": "12214:11:8"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "12227:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "12227:6:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "12259:16:8",
																						"nodeType": "YulIdentifier",
																						"src": "12259:16:8"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "12235:23:8",
																					"nodeType": "YulIdentifier",
																					"src": "12235:23:8"
																				},
																				"nativeSrc": "12235:41:8",
																				"nodeType": "YulFunctionCall",
																				"src": "12235:41:8"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "12186:27:8",
																			"nodeType": "YulIdentifier",
																			"src": "12186:27:8"
																		},
																		"nativeSrc": "12186:91:8",
																		"nodeType": "YulFunctionCall",
																		"src": "12186:91:8"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "12173:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "12173:6:8"
																},
																"nativeSrc": "12173:105:8",
																"nodeType": "YulFunctionCall",
																"src": "12173:105:8"
															},
															"nativeSrc": "12173:105:8",
															"nodeType": "YulExpressionStatement",
															"src": "12173:105:8"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "12015:269:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "12068:4:8",
														"nodeType": "YulTypedName",
														"src": "12068:4:8",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "12074:6:8",
														"nodeType": "YulTypedName",
														"src": "12074:6:8",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "12082:7:8",
														"nodeType": "YulTypedName",
														"src": "12082:7:8",
														"type": ""
													}
												],
												"src": "12015:269:8"
											},
											{
												"body": {
													"nativeSrc": "12339:24:8",
													"nodeType": "YulBlock",
													"src": "12339:24:8",
													"statements": [
														{
															"nativeSrc": "12349:8:8",
															"nodeType": "YulAssignment",
															"src": "12349:8:8",
															"value": {
																"kind": "number",
																"nativeSrc": "12356:1:8",
																"nodeType": "YulLiteral",
																"src": "12356:1:8",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "12349:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "12349:3:8"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "12290:73:8",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "12335:3:8",
														"nodeType": "YulTypedName",
														"src": "12335:3:8",
														"type": ""
													}
												],
												"src": "12290:73:8"
											},
											{
												"body": {
													"nativeSrc": "12422:136:8",
													"nodeType": "YulBlock",
													"src": "12422:136:8",
													"statements": [
														{
															"nativeSrc": "12432:46:8",
															"nodeType": "YulVariableDeclaration",
															"src": "12432:46:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "12446:30:8",
																	"nodeType": "YulIdentifier",
																	"src": "12446:30:8"
																},
																"nativeSrc": "12446:32:8",
																"nodeType": "YulFunctionCall",
																"src": "12446:32:8"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "12436:6:8",
																	"nodeType": "YulTypedName",
																	"src": "12436:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "12531:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "12531:4:8"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "12537:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "12537:6:8"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "12545:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "12545:6:8"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "12487:43:8",
																	"nodeType": "YulIdentifier",
																	"src": "12487:43:8"
																},
																"nativeSrc": "12487:65:8",
																"nodeType": "YulFunctionCall",
																"src": "12487:65:8"
															},
															"nativeSrc": "12487:65:8",
															"nodeType": "YulExpressionStatement",
															"src": "12487:65:8"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "12369:189:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "12408:4:8",
														"nodeType": "YulTypedName",
														"src": "12408:4:8",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "12414:6:8",
														"nodeType": "YulTypedName",
														"src": "12414:6:8",
														"type": ""
													}
												],
												"src": "12369:189:8"
											},
											{
												"body": {
													"nativeSrc": "12614:136:8",
													"nodeType": "YulBlock",
													"src": "12614:136:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "12681:63:8",
																"nodeType": "YulBlock",
																"src": "12681:63:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "12725:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "12725:5:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12732:1:8",
																					"nodeType": "YulLiteral",
																					"src": "12732:1:8",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "12695:29:8",
																				"nodeType": "YulIdentifier",
																				"src": "12695:29:8"
																			},
																			"nativeSrc": "12695:39:8",
																			"nodeType": "YulFunctionCall",
																			"src": "12695:39:8"
																		},
																		"nativeSrc": "12695:39:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "12695:39:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "12634:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "12634:5:8"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "12641:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "12641:3:8"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "12631:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "12631:2:8"
																},
																"nativeSrc": "12631:14:8",
																"nodeType": "YulFunctionCall",
																"src": "12631:14:8"
															},
															"nativeSrc": "12624:120:8",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "12646:26:8",
																"nodeType": "YulBlock",
																"src": "12646:26:8",
																"statements": [
																	{
																		"nativeSrc": "12648:22:8",
																		"nodeType": "YulAssignment",
																		"src": "12648:22:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "12661:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "12661:5:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12668:1:8",
																					"nodeType": "YulLiteral",
																					"src": "12668:1:8",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "12657:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "12657:3:8"
																			},
																			"nativeSrc": "12657:13:8",
																			"nodeType": "YulFunctionCall",
																			"src": "12657:13:8"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "12648:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "12648:5:8"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "12628:2:8",
																"nodeType": "YulBlock",
																"src": "12628:2:8",
																"statements": []
															},
															"src": "12624:120:8"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "12564:186:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "12602:5:8",
														"nodeType": "YulTypedName",
														"src": "12602:5:8",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "12609:3:8",
														"nodeType": "YulTypedName",
														"src": "12609:3:8",
														"type": ""
													}
												],
												"src": "12564:186:8"
											},
											{
												"body": {
													"nativeSrc": "12835:464:8",
													"nodeType": "YulBlock",
													"src": "12835:464:8",
													"statements": [
														{
															"body": {
																"nativeSrc": "12861:431:8",
																"nodeType": "YulBlock",
																"src": "12861:431:8",
																"statements": [
																	{
																		"nativeSrc": "12875:54:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "12875:54:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "12923:5:8",
																					"nodeType": "YulIdentifier",
																					"src": "12923:5:8"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "12891:31:8",
																				"nodeType": "YulIdentifier",
																				"src": "12891:31:8"
																			},
																			"nativeSrc": "12891:38:8",
																			"nodeType": "YulFunctionCall",
																			"src": "12891:38:8"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "12879:8:8",
																				"nodeType": "YulTypedName",
																				"src": "12879:8:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "12942:63:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "12942:63:8",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "12965:8:8",
																					"nodeType": "YulIdentifier",
																					"src": "12965:8:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "12993:10:8",
																							"nodeType": "YulIdentifier",
																							"src": "12993:10:8"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "12975:17:8",
																						"nodeType": "YulIdentifier",
																						"src": "12975:17:8"
																					},
																					"nativeSrc": "12975:29:8",
																					"nodeType": "YulFunctionCall",
																					"src": "12975:29:8"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "12961:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "12961:3:8"
																			},
																			"nativeSrc": "12961:44:8",
																			"nodeType": "YulFunctionCall",
																			"src": "12961:44:8"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "12946:11:8",
																				"nodeType": "YulTypedName",
																				"src": "12946:11:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "13162:27:8",
																			"nodeType": "YulBlock",
																			"src": "13162:27:8",
																			"statements": [
																				{
																					"nativeSrc": "13164:23:8",
																					"nodeType": "YulAssignment",
																					"src": "13164:23:8",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "13179:8:8",
																						"nodeType": "YulIdentifier",
																						"src": "13179:8:8"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "13164:11:8",
																							"nodeType": "YulIdentifier",
																							"src": "13164:11:8"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "13146:10:8",
																					"nodeType": "YulIdentifier",
																					"src": "13146:10:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "13158:2:8",
																					"nodeType": "YulLiteral",
																					"src": "13158:2:8",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "13143:2:8",
																				"nodeType": "YulIdentifier",
																				"src": "13143:2:8"
																			},
																			"nativeSrc": "13143:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "13143:18:8"
																		},
																		"nativeSrc": "13140:49:8",
																		"nodeType": "YulIf",
																		"src": "13140:49:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "13231:11:8",
																					"nodeType": "YulIdentifier",
																					"src": "13231:11:8"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "13248:8:8",
																							"nodeType": "YulIdentifier",
																							"src": "13248:8:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "13276:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "13276:3:8"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "13258:17:8",
																								"nodeType": "YulIdentifier",
																								"src": "13258:17:8"
																							},
																							"nativeSrc": "13258:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "13258:22:8"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "13244:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "13244:3:8"
																					},
																					"nativeSrc": "13244:37:8",
																					"nodeType": "YulFunctionCall",
																					"src": "13244:37:8"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "13202:28:8",
																				"nodeType": "YulIdentifier",
																				"src": "13202:28:8"
																			},
																			"nativeSrc": "13202:80:8",
																			"nodeType": "YulFunctionCall",
																			"src": "13202:80:8"
																		},
																		"nativeSrc": "13202:80:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "13202:80:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "12852:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "12852:3:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12857:2:8",
																		"nodeType": "YulLiteral",
																		"src": "12857:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12849:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "12849:2:8"
																},
																"nativeSrc": "12849:11:8",
																"nodeType": "YulFunctionCall",
																"src": "12849:11:8"
															},
															"nativeSrc": "12846:446:8",
															"nodeType": "YulIf",
															"src": "12846:446:8"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "12756:543:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "12811:5:8",
														"nodeType": "YulTypedName",
														"src": "12811:5:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "12818:3:8",
														"nodeType": "YulTypedName",
														"src": "12818:3:8",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "12823:10:8",
														"nodeType": "YulTypedName",
														"src": "12823:10:8",
														"type": ""
													}
												],
												"src": "12756:543:8"
											},
											{
												"body": {
													"nativeSrc": "13368:54:8",
													"nodeType": "YulBlock",
													"src": "13368:54:8",
													"statements": [
														{
															"nativeSrc": "13378:37:8",
															"nodeType": "YulAssignment",
															"src": "13378:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "13403:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "13403:4:8"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "13409:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "13409:5:8"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "13399:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13399:3:8"
																},
																"nativeSrc": "13399:16:8",
																"nodeType": "YulFunctionCall",
																"src": "13399:16:8"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "13378:8:8",
																	"nodeType": "YulIdentifier",
																	"src": "13378:8:8"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "13305:117:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "13343:4:8",
														"nodeType": "YulTypedName",
														"src": "13343:4:8",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "13349:5:8",
														"nodeType": "YulTypedName",
														"src": "13349:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "13359:8:8",
														"nodeType": "YulTypedName",
														"src": "13359:8:8",
														"type": ""
													}
												],
												"src": "13305:117:8"
											},
											{
												"body": {
													"nativeSrc": "13479:118:8",
													"nodeType": "YulBlock",
													"src": "13479:118:8",
													"statements": [
														{
															"nativeSrc": "13489:68:8",
															"nodeType": "YulVariableDeclaration",
															"src": "13489:68:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "13538:1:8",
																						"nodeType": "YulLiteral",
																						"src": "13538:1:8",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "13541:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "13541:5:8"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "13534:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "13534:3:8"
																				},
																				"nativeSrc": "13534:13:8",
																				"nodeType": "YulFunctionCall",
																				"src": "13534:13:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "13553:1:8",
																						"nodeType": "YulLiteral",
																						"src": "13553:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "13549:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "13549:3:8"
																				},
																				"nativeSrc": "13549:6:8",
																				"nodeType": "YulFunctionCall",
																				"src": "13549:6:8"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "13505:28:8",
																			"nodeType": "YulIdentifier",
																			"src": "13505:28:8"
																		},
																		"nativeSrc": "13505:51:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13505:51:8"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "13501:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13501:3:8"
																},
																"nativeSrc": "13501:56:8",
																"nodeType": "YulFunctionCall",
																"src": "13501:56:8"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "13493:4:8",
																	"nodeType": "YulTypedName",
																	"src": "13493:4:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "13566:25:8",
															"nodeType": "YulAssignment",
															"src": "13566:25:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "13580:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "13580:4:8"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "13586:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "13586:4:8"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "13576:3:8",
																	"nodeType": "YulIdentifier",
																	"src": "13576:3:8"
																},
																"nativeSrc": "13576:15:8",
																"nodeType": "YulFunctionCall",
																"src": "13576:15:8"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "13566:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "13566:6:8"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "13428:169:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "13456:4:8",
														"nodeType": "YulTypedName",
														"src": "13456:4:8",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "13462:5:8",
														"nodeType": "YulTypedName",
														"src": "13462:5:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "13472:6:8",
														"nodeType": "YulTypedName",
														"src": "13472:6:8",
														"type": ""
													}
												],
												"src": "13428:169:8"
											},
											{
												"body": {
													"nativeSrc": "13683:214:8",
													"nodeType": "YulBlock",
													"src": "13683:214:8",
													"statements": [
														{
															"nativeSrc": "13816:37:8",
															"nodeType": "YulAssignment",
															"src": "13816:37:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "13843:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "13843:4:8"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "13849:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "13849:3:8"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "13824:18:8",
																	"nodeType": "YulIdentifier",
																	"src": "13824:18:8"
																},
																"nativeSrc": "13824:29:8",
																"nodeType": "YulFunctionCall",
																"src": "13824:29:8"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "13816:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "13816:4:8"
																}
															]
														},
														{
															"nativeSrc": "13862:29:8",
															"nodeType": "YulAssignment",
															"src": "13862:29:8",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "13873:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "13873:4:8"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "13883:1:8",
																				"nodeType": "YulLiteral",
																				"src": "13883:1:8",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "13886:3:8",
																				"nodeType": "YulIdentifier",
																				"src": "13886:3:8"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "13879:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "13879:3:8"
																		},
																		"nativeSrc": "13879:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "13879:11:8"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "13870:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "13870:2:8"
																},
																"nativeSrc": "13870:21:8",
																"nodeType": "YulFunctionCall",
																"src": "13870:21:8"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "13862:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "13862:4:8"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "13602:295:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "13664:4:8",
														"nodeType": "YulTypedName",
														"src": "13664:4:8",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "13670:3:8",
														"nodeType": "YulTypedName",
														"src": "13670:3:8",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "13678:4:8",
														"nodeType": "YulTypedName",
														"src": "13678:4:8",
														"type": ""
													}
												],
												"src": "13602:295:8"
											},
											{
												"body": {
													"nativeSrc": "13994:1303:8",
													"nodeType": "YulBlock",
													"src": "13994:1303:8",
													"statements": [
														{
															"nativeSrc": "14005:51:8",
															"nodeType": "YulVariableDeclaration",
															"src": "14005:51:8",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "14052:3:8",
																		"nodeType": "YulIdentifier",
																		"src": "14052:3:8"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "14019:32:8",
																	"nodeType": "YulIdentifier",
																	"src": "14019:32:8"
																},
																"nativeSrc": "14019:37:8",
																"nodeType": "YulFunctionCall",
																"src": "14019:37:8"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "14009:6:8",
																	"nodeType": "YulTypedName",
																	"src": "14009:6:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14141:22:8",
																"nodeType": "YulBlock",
																"src": "14141:22:8",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "14143:16:8",
																				"nodeType": "YulIdentifier",
																				"src": "14143:16:8"
																			},
																			"nativeSrc": "14143:18:8",
																			"nodeType": "YulFunctionCall",
																			"src": "14143:18:8"
																		},
																		"nativeSrc": "14143:18:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "14143:18:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "14113:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "14113:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14121:18:8",
																		"nodeType": "YulLiteral",
																		"src": "14121:18:8",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14110:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "14110:2:8"
																},
																"nativeSrc": "14110:30:8",
																"nodeType": "YulFunctionCall",
																"src": "14110:30:8"
															},
															"nativeSrc": "14107:56:8",
															"nodeType": "YulIf",
															"src": "14107:56:8"
														},
														{
															"nativeSrc": "14173:52:8",
															"nodeType": "YulVariableDeclaration",
															"src": "14173:52:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "14219:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "14219:4:8"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "14213:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "14213:5:8"
																		},
																		"nativeSrc": "14213:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "14213:11:8"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "14187:25:8",
																	"nodeType": "YulIdentifier",
																	"src": "14187:25:8"
																},
																"nativeSrc": "14187:38:8",
																"nodeType": "YulFunctionCall",
																"src": "14187:38:8"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "14177:6:8",
																	"nodeType": "YulTypedName",
																	"src": "14177:6:8",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "14318:4:8",
																		"nodeType": "YulIdentifier",
																		"src": "14318:4:8"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "14324:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "14324:6:8"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "14332:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "14332:6:8"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "14272:45:8",
																	"nodeType": "YulIdentifier",
																	"src": "14272:45:8"
																},
																"nativeSrc": "14272:67:8",
																"nodeType": "YulFunctionCall",
																"src": "14272:67:8"
															},
															"nativeSrc": "14272:67:8",
															"nodeType": "YulExpressionStatement",
															"src": "14272:67:8"
														},
														{
															"nativeSrc": "14349:18:8",
															"nodeType": "YulVariableDeclaration",
															"src": "14349:18:8",
															"value": {
																"kind": "number",
																"nativeSrc": "14366:1:8",
																"nodeType": "YulLiteral",
																"src": "14366:1:8",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "14353:9:8",
																	"nodeType": "YulTypedName",
																	"src": "14353:9:8",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14377:17:8",
															"nodeType": "YulAssignment",
															"src": "14377:17:8",
															"value": {
																"kind": "number",
																"nativeSrc": "14390:4:8",
																"nodeType": "YulLiteral",
																"src": "14390:4:8",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "14377:9:8",
																	"nodeType": "YulIdentifier",
																	"src": "14377:9:8"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "14441:611:8",
																		"nodeType": "YulBlock",
																		"src": "14441:611:8",
																		"statements": [
																			{
																				"nativeSrc": "14455:37:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "14455:37:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "14474:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "14474:6:8"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "14486:4:8",
																									"nodeType": "YulLiteral",
																									"src": "14486:4:8",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "14482:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "14482:3:8"
																							},
																							"nativeSrc": "14482:9:8",
																							"nodeType": "YulFunctionCall",
																							"src": "14482:9:8"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "14470:3:8",
																						"nodeType": "YulIdentifier",
																						"src": "14470:3:8"
																					},
																					"nativeSrc": "14470:22:8",
																					"nodeType": "YulFunctionCall",
																					"src": "14470:22:8"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "14459:7:8",
																						"nodeType": "YulTypedName",
																						"src": "14459:7:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "14506:51:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "14506:51:8",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "14552:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "14552:4:8"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "14520:31:8",
																						"nodeType": "YulIdentifier",
																						"src": "14520:31:8"
																					},
																					"nativeSrc": "14520:37:8",
																					"nodeType": "YulFunctionCall",
																					"src": "14520:37:8"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "14510:6:8",
																						"nodeType": "YulTypedName",
																						"src": "14510:6:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "14570:10:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "14570:10:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "14579:1:8",
																					"nodeType": "YulLiteral",
																					"src": "14579:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "14574:1:8",
																						"nodeType": "YulTypedName",
																						"src": "14574:1:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "14638:163:8",
																					"nodeType": "YulBlock",
																					"src": "14638:163:8",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "14663:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "14663:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "14681:3:8",
																														"nodeType": "YulIdentifier",
																														"src": "14681:3:8"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "14686:9:8",
																														"nodeType": "YulIdentifier",
																														"src": "14686:9:8"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "14677:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "14677:3:8"
																												},
																												"nativeSrc": "14677:19:8",
																												"nodeType": "YulFunctionCall",
																												"src": "14677:19:8"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "14671:5:8",
																											"nodeType": "YulIdentifier",
																											"src": "14671:5:8"
																										},
																										"nativeSrc": "14671:26:8",
																										"nodeType": "YulFunctionCall",
																										"src": "14671:26:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "14656:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "14656:6:8"
																								},
																								"nativeSrc": "14656:42:8",
																								"nodeType": "YulFunctionCall",
																								"src": "14656:42:8"
																							},
																							"nativeSrc": "14656:42:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "14656:42:8"
																						},
																						{
																							"nativeSrc": "14715:24:8",
																							"nodeType": "YulAssignment",
																							"src": "14715:24:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "14729:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "14729:6:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "14737:1:8",
																										"nodeType": "YulLiteral",
																										"src": "14737:1:8",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "14725:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "14725:3:8"
																								},
																								"nativeSrc": "14725:14:8",
																								"nodeType": "YulFunctionCall",
																								"src": "14725:14:8"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "14715:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "14715:6:8"
																								}
																							]
																						},
																						{
																							"nativeSrc": "14756:31:8",
																							"nodeType": "YulAssignment",
																							"src": "14756:31:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "14773:9:8",
																										"nodeType": "YulIdentifier",
																										"src": "14773:9:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "14784:2:8",
																										"nodeType": "YulLiteral",
																										"src": "14784:2:8",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "14769:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "14769:3:8"
																								},
																								"nativeSrc": "14769:18:8",
																								"nodeType": "YulFunctionCall",
																								"src": "14769:18:8"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "14756:9:8",
																									"nodeType": "YulIdentifier",
																									"src": "14756:9:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "14604:1:8",
																							"nodeType": "YulIdentifier",
																							"src": "14604:1:8"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "14607:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "14607:7:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "14601:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "14601:2:8"
																					},
																					"nativeSrc": "14601:14:8",
																					"nodeType": "YulFunctionCall",
																					"src": "14601:14:8"
																				},
																				"nativeSrc": "14593:208:8",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "14616:21:8",
																					"nodeType": "YulBlock",
																					"src": "14616:21:8",
																					"statements": [
																						{
																							"nativeSrc": "14618:17:8",
																							"nodeType": "YulAssignment",
																							"src": "14618:17:8",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "14627:1:8",
																										"nodeType": "YulIdentifier",
																										"src": "14627:1:8"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "14630:4:8",
																										"nodeType": "YulLiteral",
																										"src": "14630:4:8",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "14623:3:8",
																									"nodeType": "YulIdentifier",
																									"src": "14623:3:8"
																								},
																								"nativeSrc": "14623:12:8",
																								"nodeType": "YulFunctionCall",
																								"src": "14623:12:8"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "14618:1:8",
																									"nodeType": "YulIdentifier",
																									"src": "14618:1:8"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "14597:3:8",
																					"nodeType": "YulBlock",
																					"src": "14597:3:8",
																					"statements": []
																				},
																				"src": "14593:208:8"
																			},
																			{
																				"body": {
																					"nativeSrc": "14837:156:8",
																					"nodeType": "YulBlock",
																					"src": "14837:156:8",
																					"statements": [
																						{
																							"nativeSrc": "14855:43:8",
																							"nodeType": "YulVariableDeclaration",
																							"src": "14855:43:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "14882:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "14882:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "14887:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "14887:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "14878:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "14878:3:8"
																										},
																										"nativeSrc": "14878:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "14878:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "14872:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "14872:5:8"
																								},
																								"nativeSrc": "14872:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "14872:26:8"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "14859:9:8",
																									"nodeType": "YulTypedName",
																									"src": "14859:9:8",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "14922:6:8",
																										"nodeType": "YulIdentifier",
																										"src": "14922:6:8"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "14949:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "14949:9:8"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "14964:6:8",
																														"nodeType": "YulIdentifier",
																														"src": "14964:6:8"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "14972:4:8",
																														"nodeType": "YulLiteral",
																														"src": "14972:4:8",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "14960:3:8",
																													"nodeType": "YulIdentifier",
																													"src": "14960:3:8"
																												},
																												"nativeSrc": "14960:17:8",
																												"nodeType": "YulFunctionCall",
																												"src": "14960:17:8"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "14930:18:8",
																											"nodeType": "YulIdentifier",
																											"src": "14930:18:8"
																										},
																										"nativeSrc": "14930:48:8",
																										"nodeType": "YulFunctionCall",
																										"src": "14930:48:8"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "14915:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "14915:6:8"
																								},
																								"nativeSrc": "14915:64:8",
																								"nodeType": "YulFunctionCall",
																								"src": "14915:64:8"
																							},
																							"nativeSrc": "14915:64:8",
																							"nodeType": "YulExpressionStatement",
																							"src": "14915:64:8"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "14820:7:8",
																							"nodeType": "YulIdentifier",
																							"src": "14820:7:8"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "14829:6:8",
																							"nodeType": "YulIdentifier",
																							"src": "14829:6:8"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "14817:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "14817:2:8"
																					},
																					"nativeSrc": "14817:19:8",
																					"nodeType": "YulFunctionCall",
																					"src": "14817:19:8"
																				},
																				"nativeSrc": "14814:179:8",
																				"nodeType": "YulIf",
																				"src": "14814:179:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "15013:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "15013:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "15027:6:8",
																											"nodeType": "YulIdentifier",
																											"src": "15027:6:8"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "15035:1:8",
																											"nodeType": "YulLiteral",
																											"src": "15035:1:8",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "15023:3:8",
																										"nodeType": "YulIdentifier",
																										"src": "15023:3:8"
																									},
																									"nativeSrc": "15023:14:8",
																									"nodeType": "YulFunctionCall",
																									"src": "15023:14:8"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "15039:1:8",
																									"nodeType": "YulLiteral",
																									"src": "15039:1:8",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "15019:3:8",
																								"nodeType": "YulIdentifier",
																								"src": "15019:3:8"
																							},
																							"nativeSrc": "15019:22:8",
																							"nodeType": "YulFunctionCall",
																							"src": "15019:22:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "15006:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "15006:6:8"
																					},
																					"nativeSrc": "15006:36:8",
																					"nodeType": "YulFunctionCall",
																					"src": "15006:36:8"
																				},
																				"nativeSrc": "15006:36:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "15006:36:8"
																			}
																		]
																	},
																	"nativeSrc": "14434:618:8",
																	"nodeType": "YulCase",
																	"src": "14434:618:8",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14439:1:8",
																		"nodeType": "YulLiteral",
																		"src": "14439:1:8",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "15069:222:8",
																		"nodeType": "YulBlock",
																		"src": "15069:222:8",
																		"statements": [
																			{
																				"nativeSrc": "15083:14:8",
																				"nodeType": "YulVariableDeclaration",
																				"src": "15083:14:8",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "15096:1:8",
																					"nodeType": "YulLiteral",
																					"src": "15096:1:8",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "15087:5:8",
																						"nodeType": "YulTypedName",
																						"src": "15087:5:8",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "15120:67:8",
																					"nodeType": "YulBlock",
																					"src": "15120:67:8",
																					"statements": [
																						{
																							"nativeSrc": "15138:35:8",
																							"nodeType": "YulAssignment",
																							"src": "15138:35:8",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "15157:3:8",
																												"nodeType": "YulIdentifier",
																												"src": "15157:3:8"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "15162:9:8",
																												"nodeType": "YulIdentifier",
																												"src": "15162:9:8"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "15153:3:8",
																											"nodeType": "YulIdentifier",
																											"src": "15153:3:8"
																										},
																										"nativeSrc": "15153:19:8",
																										"nodeType": "YulFunctionCall",
																										"src": "15153:19:8"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "15147:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "15147:5:8"
																								},
																								"nativeSrc": "15147:26:8",
																								"nodeType": "YulFunctionCall",
																								"src": "15147:26:8"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "15138:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "15138:5:8"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "15113:6:8",
																					"nodeType": "YulIdentifier",
																					"src": "15113:6:8"
																				},
																				"nativeSrc": "15110:77:8",
																				"nodeType": "YulIf",
																				"src": "15110:77:8"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "15207:4:8",
																							"nodeType": "YulIdentifier",
																							"src": "15207:4:8"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "15266:5:8",
																									"nodeType": "YulIdentifier",
																									"src": "15266:5:8"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "15273:6:8",
																									"nodeType": "YulIdentifier",
																									"src": "15273:6:8"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "15213:52:8",
																								"nodeType": "YulIdentifier",
																								"src": "15213:52:8"
																							},
																							"nativeSrc": "15213:67:8",
																							"nodeType": "YulFunctionCall",
																							"src": "15213:67:8"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "15200:6:8",
																						"nodeType": "YulIdentifier",
																						"src": "15200:6:8"
																					},
																					"nativeSrc": "15200:81:8",
																					"nodeType": "YulFunctionCall",
																					"src": "15200:81:8"
																				},
																				"nativeSrc": "15200:81:8",
																				"nodeType": "YulExpressionStatement",
																				"src": "15200:81:8"
																			}
																		]
																	},
																	"nativeSrc": "15061:230:8",
																	"nodeType": "YulCase",
																	"src": "15061:230:8",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "14414:6:8",
																		"nodeType": "YulIdentifier",
																		"src": "14414:6:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14422:2:8",
																		"nodeType": "YulLiteral",
																		"src": "14422:2:8",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14411:2:8",
																	"nodeType": "YulIdentifier",
																	"src": "14411:2:8"
																},
																"nativeSrc": "14411:14:8",
																"nodeType": "YulFunctionCall",
																"src": "14411:14:8"
															},
															"nativeSrc": "14404:887:8",
															"nodeType": "YulSwitch",
															"src": "14404:887:8"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "13902:1395:8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "13983:4:8",
														"nodeType": "YulTypedName",
														"src": "13983:4:8",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "13989:3:8",
														"nodeType": "YulTypedName",
														"src": "13989:3:8",
														"type": ""
													}
												],
												"src": "13902:1395:8"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function cleanup_t_rational_1_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint64(value) -> converted {\n        converted := cleanup_t_uint64(identity(cleanup_t_rational_1_by_1(value)))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint64(value))\n    }\n\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_rational_1_by_1_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 8,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50600436106100f3575f3560e01c806370a08231116100955780639dc29fac116100645780639dc29fac1461025f578063a9059cbb1461027b578063dd62ed3e146102ab578063f2fde38b146102db576100f3565b806370a08231146101e9578063715018a6146102195780638da5cb5b1461022357806395d89b4114610241576100f3565b806323b872dd116100d157806323b872dd14610163578063313ce5671461019357806340c10f19146101b15780634cd88b76146101cd576100f3565b806306fdde03146100f7578063095ea7b31461011557806318160ddd14610145575b5f5ffd5b6100ff6102f7565b60405161010c919061126b565b60405180910390f35b61012f600480360381019061012a9190611329565b610395565b60405161013c9190611381565b60405180910390f35b61014d6103b7565b60405161015a91906113a9565b60405180910390f35b61017d600480360381019061017891906113c2565b6103ce565b60405161018a9190611381565b60405180910390f35b61019b6103fc565b6040516101a8919061142d565b60405180910390f35b6101cb60048036038101906101c69190611329565b610404565b005b6101e760048036038101906101e29190611572565b61041a565b005b61020360048036038101906101fe91906115e8565b6105a6565b60405161021091906113a9565b60405180910390f35b6102216105f9565b005b61022b61060c565b6040516102389190611622565b60405180910390f35b610249610641565b604051610256919061126b565b60405180910390f35b61027960048036038101906102749190611329565b6106df565b005b61029560048036038101906102909190611329565b6106f5565b6040516102a29190611381565b60405180910390f35b6102c560048036038101906102c0919061163b565b610717565b6040516102d291906113a9565b60405180910390f35b6102f560048036038101906102f091906115e8565b6107a7565b005b60605f61030261082b565b9050806003018054610313906116a6565b80601f016020809104026020016040519081016040528092919081815260200182805461033f906116a6565b801561038a5780601f106103615761010080835404028352916020019161038a565b820191905f5260205f20905b81548152906001019060200180831161036d57829003601f168201915b505050505091505090565b5f5f61039f610852565b90506103ac818585610859565b600191505092915050565b5f5f6103c161082b565b9050806002015491505090565b5f5f6103d8610852565b90506103e585828561086b565b6103f08585856108fe565b60019150509392505050565b5f6012905090565b61040c6109ee565b6104168282610a75565b5050565b5f610423610af4565b90505f815f0160089054906101000a900460ff161590505f825f015f9054906101000a900467ffffffffffffffff1690505f5f8267ffffffffffffffff1614801561046b5750825b90505f60018367ffffffffffffffff1614801561049e57505f3073ffffffffffffffffffffffffffffffffffffffff163b145b9050811580156104ac575080155b156104e3576040517ff92ee8a900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001855f015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff1602179055508315610530576001855f0160086101000a81548160ff0219169083151502179055505b61053a8787610b07565b61054333610b1d565b831561059d575f855f0160086101000a81548160ff0219169083151502179055507fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d26001604051610594919061172b565b60405180910390a15b50505050505050565b5f5f6105b061082b565b9050805f015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054915050919050565b6106016109ee565b61060a5f610b31565b565b5f5f610616610c02565b9050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505090565b60605f61064c61082b565b905080600401805461065d906116a6565b80601f0160208091040260200160405190810160405280929190818152602001828054610689906116a6565b80156106d45780601f106106ab576101008083540402835291602001916106d4565b820191905f5260205f20905b8154815290600101906020018083116106b757829003601f168201915b505050505091505090565b6106e76109ee565b6106f18282610c29565b5050565b5f5f6106ff610852565b905061070c8185856108fe565b600191505092915050565b5f5f61072161082b565b9050806001015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205491505092915050565b6107af6109ee565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361081f575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016108169190611622565b60405180910390fd5b61082881610b31565b50565b5f7f52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00905090565b5f33905090565b6108668383836001610ca8565b505050565b5f6108768484610717565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156108f857818110156108e9578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016108e093929190611744565b60405180910390fd5b6108f784848484035f610ca8565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361096e575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016109659190611622565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109de575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016109d59190611622565b60405180910390fd5b6109e9838383610e85565b505050565b6109f6610852565b73ffffffffffffffffffffffffffffffffffffffff16610a1461060c565b73ffffffffffffffffffffffffffffffffffffffff1614610a7357610a37610852565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610a6a9190611622565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ae5575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610adc9190611622565b60405180910390fd5b610af05f8383610e85565b5050565b5f5f610afe6110b4565b90508091505090565b610b0f6110dd565b610b19828261111d565b5050565b610b256110dd565b610b2e81611159565b50565b5f610b3a610c02565b90505f815f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905082825f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3505050565b5f7f9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300905090565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c99575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610c909190611622565b60405180910390fd5b610ca4825f83610e85565b5050565b5f610cb161082b565b90505f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610d23575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610d1a9190611622565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610d93575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610d8a9190611622565b60405180910390fd5b82816001015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508115610e7e578373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92585604051610e7591906113a9565b60405180910390a35b5050505050565b5f610e8e61082b565b90505f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610ee25781816002015f828254610ed691906117a6565b92505081905550610fb4565b5f815f015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905082811015610f6d578481846040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610f6493929190611744565b60405180910390fd5b828103825f015f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610ffd5781816002015f8282540392505081905550611049565b81815f015f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516110a691906113a9565b60405180910390a350505050565b5f7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a005f1b905090565b6110e56111dd565b61111b576040517fd7e6bcf800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b6111256110dd565b5f61112e61082b565b9050828160030190816111419190611970565b50818160040190816111539190611970565b50505050565b6111616110dd565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036111d1575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016111c89190611622565b60405180910390fd5b6111da81610b31565b50565b5f6111e6610af4565b5f0160089054906101000a900460ff16905090565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61123d826111fb565b6112478185611205565b9350611257818560208601611215565b61126081611223565b840191505092915050565b5f6020820190508181035f8301526112838184611233565b905092915050565b5f604051905090565b5f5ffd5b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6112c58261129c565b9050919050565b6112d5816112bb565b81146112df575f5ffd5b50565b5f813590506112f0816112cc565b92915050565b5f819050919050565b611308816112f6565b8114611312575f5ffd5b50565b5f81359050611323816112ff565b92915050565b5f5f6040838503121561133f5761133e611294565b5b5f61134c858286016112e2565b925050602061135d85828601611315565b9150509250929050565b5f8115159050919050565b61137b81611367565b82525050565b5f6020820190506113945f830184611372565b92915050565b6113a3816112f6565b82525050565b5f6020820190506113bc5f83018461139a565b92915050565b5f5f5f606084860312156113d9576113d8611294565b5b5f6113e6868287016112e2565b93505060206113f7868287016112e2565b925050604061140886828701611315565b9150509250925092565b5f60ff82169050919050565b61142781611412565b82525050565b5f6020820190506114405f83018461141e565b92915050565b5f5ffd5b5f5ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61148482611223565b810181811067ffffffffffffffff821117156114a3576114a261144e565b5b80604052505050565b5f6114b561128b565b90506114c1828261147b565b919050565b5f67ffffffffffffffff8211156114e0576114df61144e565b5b6114e982611223565b9050602081019050919050565b828183375f83830152505050565b5f611516611511846114c6565b6114ac565b9050828152602081018484840111156115325761153161144a565b5b61153d8482856114f6565b509392505050565b5f82601f83011261155957611558611446565b5b8135611569848260208601611504565b91505092915050565b5f5f6040838503121561158857611587611294565b5b5f83013567ffffffffffffffff8111156115a5576115a4611298565b5b6115b185828601611545565b925050602083013567ffffffffffffffff8111156115d2576115d1611298565b5b6115de85828601611545565b9150509250929050565b5f602082840312156115fd576115fc611294565b5b5f61160a848285016112e2565b91505092915050565b61161c816112bb565b82525050565b5f6020820190506116355f830184611613565b92915050565b5f5f6040838503121561165157611650611294565b5b5f61165e858286016112e2565b925050602061166f858286016112e2565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806116bd57607f821691505b6020821081036116d0576116cf611679565b5b50919050565b5f819050919050565b5f67ffffffffffffffff82169050919050565b5f819050919050565b5f61171561171061170b846116d6565b6116f2565b6116df565b9050919050565b611725816116fb565b82525050565b5f60208201905061173e5f83018461171c565b92915050565b5f6060820190506117575f830186611613565b611764602083018561139a565b611771604083018461139a565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6117b0826112f6565b91506117bb836112f6565b92508282019050808211156117d3576117d2611779565b5b92915050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026118357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826117fa565b61183f86836117fa565b95508019841693508086168417925050509392505050565b5f61187161186c611867846112f6565b6116f2565b6112f6565b9050919050565b5f819050919050565b61188a83611857565b61189e61189682611878565b848454611806565b825550505050565b5f5f905090565b6118b56118a6565b6118c0818484611881565b505050565b5b818110156118e3576118d85f826118ad565b6001810190506118c6565b5050565b601f821115611928576118f9816117d9565b611902846117eb565b81016020851015611911578190505b61192561191d856117eb565b8301826118c5565b50505b505050565b5f82821c905092915050565b5f6119485f198460080261192d565b1980831691505092915050565b5f6119608383611939565b9150826002028217905092915050565b611979826111fb565b67ffffffffffffffff8111156119925761199161144e565b5b61199c82546116a6565b6119a78282856118e7565b5f60209050601f8311600181146119d8575f84156119c6578287015190505b6119d08582611955565b865550611a37565b601f1984166119e6866117d9565b5f5b82811015611a0d578489015182556001820191506020850194506020810190506119e8565b86831015611a2a5784890151611a26601f891682611939565b8355505b6001600288020188555050505b50505050505056fea264697066735822122056c3ac632fc98887d4535227f9b7350bdd05c02ef5c5c17eda369365fc808a5064736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF3 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0x9DC29FAC GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x27B JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2DB JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x219 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x223 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x241 JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x4CD88B76 EQ PUSH2 0x1CD JUMPI PUSH2 0xF3 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xF7 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x145 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xFF PUSH2 0x2F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10C SWAP2 SWAP1 PUSH2 0x126B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12A SWAP2 SWAP1 PUSH2 0x1329 JUMP JUMPDEST PUSH2 0x395 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13C SWAP2 SWAP1 PUSH2 0x1381 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14D PUSH2 0x3B7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x13A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x178 SWAP2 SWAP1 PUSH2 0x13C2 JUMP JUMPDEST PUSH2 0x3CE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18A SWAP2 SWAP1 PUSH2 0x1381 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19B PUSH2 0x3FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x142D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x1329 JUMP JUMPDEST PUSH2 0x404 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0x1572 JUMP JUMPDEST PUSH2 0x41A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x203 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FE SWAP2 SWAP1 PUSH2 0x15E8 JUMP JUMPDEST PUSH2 0x5A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x210 SWAP2 SWAP1 PUSH2 0x13A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x221 PUSH2 0x5F9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22B PUSH2 0x60C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x238 SWAP2 SWAP1 PUSH2 0x1622 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x249 PUSH2 0x641 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x256 SWAP2 SWAP1 PUSH2 0x126B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x279 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x274 SWAP2 SWAP1 PUSH2 0x1329 JUMP JUMPDEST PUSH2 0x6DF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x295 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x290 SWAP2 SWAP1 PUSH2 0x1329 JUMP JUMPDEST PUSH2 0x6F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A2 SWAP2 SWAP1 PUSH2 0x1381 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C0 SWAP2 SWAP1 PUSH2 0x163B JUMP JUMPDEST PUSH2 0x717 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D2 SWAP2 SWAP1 PUSH2 0x13A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F0 SWAP2 SWAP1 PUSH2 0x15E8 JUMP JUMPDEST PUSH2 0x7A7 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x302 PUSH2 0x82B JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x3 ADD DUP1 SLOAD PUSH2 0x313 SWAP1 PUSH2 0x16A6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x33F SWAP1 PUSH2 0x16A6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x38A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x361 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x38A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x36D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x39F PUSH2 0x852 JUMP JUMPDEST SWAP1 POP PUSH2 0x3AC DUP2 DUP6 DUP6 PUSH2 0x859 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x3C1 PUSH2 0x82B JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x2 ADD SLOAD SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x3D8 PUSH2 0x852 JUMP JUMPDEST SWAP1 POP PUSH2 0x3E5 DUP6 DUP3 DUP6 PUSH2 0x86B JUMP JUMPDEST PUSH2 0x3F0 DUP6 DUP6 DUP6 PUSH2 0x8FE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x40C PUSH2 0x9EE JUMP JUMPDEST PUSH2 0x416 DUP3 DUP3 PUSH2 0xA75 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x423 PUSH2 0xAF4 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO SWAP1 POP PUSH0 DUP3 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x46B JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 PUSH1 0x1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x49E JUMPI POP PUSH0 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x4AC JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x4E3 JUMPI PUSH1 0x40 MLOAD PUSH32 0xF92EE8A900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 ISZERO PUSH2 0x530 JUMPI PUSH1 0x1 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMPDEST PUSH2 0x53A DUP8 DUP8 PUSH2 0xB07 JUMP JUMPDEST PUSH2 0x543 CALLER PUSH2 0xB1D JUMP JUMPDEST DUP4 ISZERO PUSH2 0x59D JUMPI PUSH0 DUP6 PUSH0 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 PUSH1 0x1 PUSH1 0x40 MLOAD PUSH2 0x594 SWAP2 SWAP1 PUSH2 0x172B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x5B0 PUSH2 0x82B JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x601 PUSH2 0x9EE JUMP JUMPDEST PUSH2 0x60A PUSH0 PUSH2 0xB31 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x616 PUSH2 0xC02 JUMP JUMPDEST SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x64C PUSH2 0x82B JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x4 ADD DUP1 SLOAD PUSH2 0x65D SWAP1 PUSH2 0x16A6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x689 SWAP1 PUSH2 0x16A6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6D4 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6AB JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6D4 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6B7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0x6E7 PUSH2 0x9EE JUMP JUMPDEST PUSH2 0x6F1 DUP3 DUP3 PUSH2 0xC29 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x6FF PUSH2 0x852 JUMP JUMPDEST SWAP1 POP PUSH2 0x70C DUP2 DUP6 DUP6 PUSH2 0x8FE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x721 PUSH2 0x82B JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x7AF PUSH2 0x9EE JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x81F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x816 SWAP2 SWAP1 PUSH2 0x1622 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x828 DUP2 PUSH2 0xB31 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0x52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x866 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xCA8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x876 DUP5 DUP5 PUSH2 0x717 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x8F8 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x8E9 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8E0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1744 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8F7 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xCA8 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x96E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x965 SWAP2 SWAP1 PUSH2 0x1622 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9DE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9D5 SWAP2 SWAP1 PUSH2 0x1622 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9E9 DUP4 DUP4 DUP4 PUSH2 0xE85 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x9F6 PUSH2 0x852 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA14 PUSH2 0x60C JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA73 JUMPI PUSH2 0xA37 PUSH2 0x852 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA6A SWAP2 SWAP1 PUSH2 0x1622 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAE5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xADC SWAP2 SWAP1 PUSH2 0x1622 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAF0 PUSH0 DUP4 DUP4 PUSH2 0xE85 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0xAFE PUSH2 0x10B4 JUMP JUMPDEST SWAP1 POP DUP1 SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH2 0xB0F PUSH2 0x10DD JUMP JUMPDEST PUSH2 0xB19 DUP3 DUP3 PUSH2 0x111D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xB25 PUSH2 0x10DD JUMP JUMPDEST PUSH2 0xB2E DUP2 PUSH2 0x1159 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0xB3A PUSH2 0xC02 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP3 DUP3 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC99 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC90 SWAP2 SWAP1 PUSH2 0x1622 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCA4 DUP3 PUSH0 DUP4 PUSH2 0xE85 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0xCB1 PUSH2 0x82B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD23 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD1A SWAP2 SWAP1 PUSH2 0x1622 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD93 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD8A SWAP2 SWAP1 PUSH2 0x1622 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 PUSH1 0x1 ADD PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 ISZERO PUSH2 0xE7E JUMPI DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP6 PUSH1 0x40 MLOAD PUSH2 0xE75 SWAP2 SWAP1 PUSH2 0x13A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xE8E PUSH2 0x82B JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEE2 JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xED6 SWAP2 SWAP1 PUSH2 0x17A6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xFB4 JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0xF6D JUMPI DUP5 DUP2 DUP5 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF64 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1744 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP2 SUB DUP3 PUSH0 ADD PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xFFD JUMPI DUP2 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1049 JUMP JUMPDEST DUP2 DUP2 PUSH0 ADD PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x10A6 SWAP2 SWAP1 PUSH2 0x13A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 PUSH0 SHL SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x10E5 PUSH2 0x11DD JUMP JUMPDEST PUSH2 0x111B JUMPI PUSH1 0x40 MLOAD PUSH32 0xD7E6BCF800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x1125 PUSH2 0x10DD JUMP JUMPDEST PUSH0 PUSH2 0x112E PUSH2 0x82B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x1141 SWAP2 SWAP1 PUSH2 0x1970 JUMP JUMPDEST POP DUP2 DUP2 PUSH1 0x4 ADD SWAP1 DUP2 PUSH2 0x1153 SWAP2 SWAP1 PUSH2 0x1970 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1161 PUSH2 0x10DD JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x11D1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11C8 SWAP2 SWAP1 PUSH2 0x1622 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11DA DUP2 PUSH2 0xB31 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH2 0x11E6 PUSH2 0xAF4 JUMP JUMPDEST PUSH0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x123D DUP3 PUSH2 0x11FB JUMP JUMPDEST PUSH2 0x1247 DUP2 DUP6 PUSH2 0x1205 JUMP JUMPDEST SWAP4 POP PUSH2 0x1257 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1215 JUMP JUMPDEST PUSH2 0x1260 DUP2 PUSH2 0x1223 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1283 DUP2 DUP5 PUSH2 0x1233 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x12C5 DUP3 PUSH2 0x129C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x12D5 DUP2 PUSH2 0x12BB JUMP JUMPDEST DUP2 EQ PUSH2 0x12DF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x12F0 DUP2 PUSH2 0x12CC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1308 DUP2 PUSH2 0x12F6 JUMP JUMPDEST DUP2 EQ PUSH2 0x1312 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1323 DUP2 PUSH2 0x12FF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x133F JUMPI PUSH2 0x133E PUSH2 0x1294 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x134C DUP6 DUP3 DUP7 ADD PUSH2 0x12E2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x135D DUP6 DUP3 DUP7 ADD PUSH2 0x1315 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x137B DUP2 PUSH2 0x1367 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1394 PUSH0 DUP4 ADD DUP5 PUSH2 0x1372 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x13A3 DUP2 PUSH2 0x12F6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13BC PUSH0 DUP4 ADD DUP5 PUSH2 0x139A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x13D9 JUMPI PUSH2 0x13D8 PUSH2 0x1294 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13E6 DUP7 DUP3 DUP8 ADD PUSH2 0x12E2 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x13F7 DUP7 DUP3 DUP8 ADD PUSH2 0x12E2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1408 DUP7 DUP3 DUP8 ADD PUSH2 0x1315 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1427 DUP2 PUSH2 0x1412 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1440 PUSH0 DUP4 ADD DUP5 PUSH2 0x141E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1484 DUP3 PUSH2 0x1223 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x14A3 JUMPI PUSH2 0x14A2 PUSH2 0x144E JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x14B5 PUSH2 0x128B JUMP JUMPDEST SWAP1 POP PUSH2 0x14C1 DUP3 DUP3 PUSH2 0x147B JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x14E0 JUMPI PUSH2 0x14DF PUSH2 0x144E JUMP JUMPDEST JUMPDEST PUSH2 0x14E9 DUP3 PUSH2 0x1223 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1516 PUSH2 0x1511 DUP5 PUSH2 0x14C6 JUMP JUMPDEST PUSH2 0x14AC JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1532 JUMPI PUSH2 0x1531 PUSH2 0x144A JUMP JUMPDEST JUMPDEST PUSH2 0x153D DUP5 DUP3 DUP6 PUSH2 0x14F6 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1559 JUMPI PUSH2 0x1558 PUSH2 0x1446 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1569 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1504 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1588 JUMPI PUSH2 0x1587 PUSH2 0x1294 JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15A5 JUMPI PUSH2 0x15A4 PUSH2 0x1298 JUMP JUMPDEST JUMPDEST PUSH2 0x15B1 DUP6 DUP3 DUP7 ADD PUSH2 0x1545 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15D2 JUMPI PUSH2 0x15D1 PUSH2 0x1298 JUMP JUMPDEST JUMPDEST PUSH2 0x15DE DUP6 DUP3 DUP7 ADD PUSH2 0x1545 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15FD JUMPI PUSH2 0x15FC PUSH2 0x1294 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x160A DUP5 DUP3 DUP6 ADD PUSH2 0x12E2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x161C DUP2 PUSH2 0x12BB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1635 PUSH0 DUP4 ADD DUP5 PUSH2 0x1613 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1651 JUMPI PUSH2 0x1650 PUSH2 0x1294 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x165E DUP6 DUP3 DUP7 ADD PUSH2 0x12E2 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x166F DUP6 DUP3 DUP7 ADD PUSH2 0x12E2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x16BD JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x16D0 JUMPI PUSH2 0x16CF PUSH2 0x1679 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1715 PUSH2 0x1710 PUSH2 0x170B DUP5 PUSH2 0x16D6 JUMP JUMPDEST PUSH2 0x16F2 JUMP JUMPDEST PUSH2 0x16DF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1725 DUP2 PUSH2 0x16FB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x173E PUSH0 DUP4 ADD DUP5 PUSH2 0x171C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1757 PUSH0 DUP4 ADD DUP7 PUSH2 0x1613 JUMP JUMPDEST PUSH2 0x1764 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x139A JUMP JUMPDEST PUSH2 0x1771 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x139A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x17B0 DUP3 PUSH2 0x12F6 JUMP JUMPDEST SWAP2 POP PUSH2 0x17BB DUP4 PUSH2 0x12F6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x17D3 JUMPI PUSH2 0x17D2 PUSH2 0x1779 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x1835 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x17FA JUMP JUMPDEST PUSH2 0x183F DUP7 DUP4 PUSH2 0x17FA JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1871 PUSH2 0x186C PUSH2 0x1867 DUP5 PUSH2 0x12F6 JUMP JUMPDEST PUSH2 0x16F2 JUMP JUMPDEST PUSH2 0x12F6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x188A DUP4 PUSH2 0x1857 JUMP JUMPDEST PUSH2 0x189E PUSH2 0x1896 DUP3 PUSH2 0x1878 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x1806 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x18B5 PUSH2 0x18A6 JUMP JUMPDEST PUSH2 0x18C0 DUP2 DUP5 DUP5 PUSH2 0x1881 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x18E3 JUMPI PUSH2 0x18D8 PUSH0 DUP3 PUSH2 0x18AD JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x18C6 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1928 JUMPI PUSH2 0x18F9 DUP2 PUSH2 0x17D9 JUMP JUMPDEST PUSH2 0x1902 DUP5 PUSH2 0x17EB JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1911 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x1925 PUSH2 0x191D DUP6 PUSH2 0x17EB JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x18C5 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1948 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x192D JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1960 DUP4 DUP4 PUSH2 0x1939 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1979 DUP3 PUSH2 0x11FB JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1992 JUMPI PUSH2 0x1991 PUSH2 0x144E JUMP JUMPDEST JUMPDEST PUSH2 0x199C DUP3 SLOAD PUSH2 0x16A6 JUMP JUMPDEST PUSH2 0x19A7 DUP3 DUP3 DUP6 PUSH2 0x18E7 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x19D8 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x19C6 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x19D0 DUP6 DUP3 PUSH2 0x1955 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x1A37 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x19E6 DUP7 PUSH2 0x17D9 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1A0D JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x19E8 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x1A2A JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x1A26 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x1939 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 JUMP 0xC3 0xAC PUSH4 0x2FC98887 0xD4 MSTORE8 MSTORE 0x27 EXTDELEGATECALL 0xB7 CALLDATALOAD SIGNEXTEND 0xDD SDIV 0xC0 0x2E CREATE2 0xC5 0xC1 PUSH31 0xDA369365FC808A5064736F6C634300081E0033000000000000000000000000 ",
							"sourceMap": "573:1812:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2697:144:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5114:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3850:152;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5892:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3735:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1652:168:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;987:336;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4035:171:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3155:101:0;;;:::i;:::-;;2441:144;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2954:148:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2218:165:7;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4401:178:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4612:195;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3405:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2697:144:2;2742:13;2767:22;2792:18;:16;:18::i;:::-;2767:43;;2827:1;:7;;2820:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2697:144;:::o;5114:186::-;5187:4;5203:13;5219:12;:10;:12::i;:::-;5203:28;;5241:31;5250:5;5257:7;5266:5;5241:8;:31::i;:::-;5289:4;5282:11;;;5114:186;;;;:::o;3850:152::-;3902:7;3921:22;3946:18;:16;:18::i;:::-;3921:43;;3981:1;:14;;;3974:21;;;3850:152;:::o;5892:244::-;5979:4;5995:15;6013:12;:10;:12::i;:::-;5995:30;;6035:37;6051:4;6057:7;6066:5;6035:15;:37::i;:::-;6082:26;6092:4;6098:2;6102:5;6082:9;:26::i;:::-;6125:4;6118:11;;;5892:244;;;;;:::o;3735:82::-;3784:5;3808:2;3801:9;;3735:82;:::o;1652:168:7:-;2334:13:0;:11;:13::i;:::-;1796:17:7::1;1802:2;1806:6;1796:5;:17::i;:::-;1652:168:::0;;:::o;987:336::-;4158:30:1;4191:26;:24;:26::i;:::-;4158:59;;4279:19;4302:1;:15;;;;;;;;;;;;4301:16;4279:38;;4327:18;4348:1;:14;;;;;;;;;;;;4327:35;;4704:17;4739:1;4724:11;:16;;;:34;;;;;4744:14;4724:34;4704:54;;4768:17;4803:1;4788:11;:16;;;:50;;;;;4837:1;4816:4;4808:25;;;:30;4788:50;4768:70;;4854:12;4853:13;:30;;;;;4871:12;4870:13;4853:30;4849:91;;;4906:23;;;;;;;;;;;;;;4849:91;4966:1;4949;:14;;;:18;;;;;;;;;;;;;;;;;;4981:14;4977:67;;;5029:4;5011:1;:15;;;:22;;;;;;;;;;;;;;;;;;4977:67;1180:26:7::1;1193:4;1199:6;1180:12;:26::i;:::-;1290;1305:10;1290:14;:26::i;:::-;5068:14:1::0;5064:101;;;5116:5;5098:1;:15;;;:23;;;;;;;;;;;;;;;;;;5140:14;5152:1;5140:14;;;;;;:::i;:::-;;;;;;;;5064:101;4092:1079;;;;;987:336:7;;:::o;4035:171:2:-;4100:7;4119:22;4144:18;:16;:18::i;:::-;4119:43;;4179:1;:11;;:20;4191:7;4179:20;;;;;;;;;;;;;;;;4172:27;;;4035:171;;;:::o;3155:101:0:-;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;:::-;3155:101::o:0;2441:144::-;2487:7;2506:24;2533:20;:18;:20::i;:::-;2506:47;;2570:1;:8;;;;;;;;;;;;2563:15;;;2441:144;:::o;2954:148:2:-;3001:13;3026:22;3051:18;:16;:18::i;:::-;3026:43;;3086:1;:9;;3079:16;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2954:148;:::o;2218:165:7:-;2334:13:0;:11;:13::i;:::-;2359:17:7::1;2365:2;2369:6;2359:5;:17::i;:::-;2218:165:::0;;:::o;4401:178:2:-;4470:4;4486:13;4502:12;:10;:12::i;:::-;4486:28;;4524:27;4534:5;4541:2;4545:5;4524:9;:27::i;:::-;4568:4;4561:11;;;4401:178;;;;:::o;4612:195::-;4692:7;4711:22;4736:18;:16;:18::i;:::-;4711:43;;4771:1;:13;;:20;4785:5;4771:20;;;;;;;;;;;;;;;:29;4792:7;4771:29;;;;;;;;;;;;;;;;4764:36;;;4612:195;;;;:::o;3405:215:0:-;2334:13;:11;:13::i;:::-;3509:1:::1;3489:22;;:8;:22;;::::0;3485:91:::1;;3562:1;3534:31;;;;;;;;;;;:::i;:::-;;;;;;;;3485:91;3585:28;3604:8;3585:18;:28::i;:::-;3405:215:::0;:::o;1947:153:2:-;1997:22;2064:20;2054:30;;1947:153;:::o;887:96:3:-;940:7;966:10;959:17;;887:96;:::o;9905:128:2:-;9989:37;9998:5;10005:7;10014:5;10021:4;9989:8;:37::i;:::-;9905:128;;;:::o;11649:476::-;11748:24;11775:25;11785:5;11792:7;11775:9;:25::i;:::-;11748:52;;11833:17;11814:16;:36;11810:309;;;11889:5;11870:16;:24;11866:130;;;11948:7;11957:16;11975:5;11921:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;11866:130;12037:57;12046:5;12053:7;12081:5;12062:16;:24;12088:5;12037:8;:57::i;:::-;11810:309;11738:387;11649:476;;;:::o;6509:300::-;6608:1;6592:18;;:4;:18;;;6588:86;;6660:1;6633:30;;;;;;;;;;;:::i;:::-;;;;;;;;6588:86;6701:1;6687:16;;:2;:16;;;6683:86;;6755:1;6726:32;;;;;;;;;;;:::i;:::-;;;;;;;;6683:86;6778:24;6786:4;6792:2;6796:5;6778:7;:24::i;:::-;6509:300;;;:::o;2658:162:0:-;2728:12;:10;:12::i;:::-;2717:23;;:7;:5;:7::i;:::-;:23;;;2713:101;;2790:12;:10;:12::i;:::-;2763:40;;;;;;;;;;;:::i;:::-;;;;;;;;2713:101;2658:162::o;8637:208:2:-;8726:1;8707:21;;:7;:21;;;8703:91;;8780:1;8751:32;;;;;;;;;;;:::i;:::-;;;;;;;;8703:91;8803:35;8819:1;8823:7;8832:5;8803:7;:35::i;:::-;8637:208;;:::o;9071:205:1:-;9129:30;9171:12;9186:27;:25;:27::i;:::-;9171:42;;9256:4;9246:14;;9232:38;9071:205;:::o;2263:147:2:-;6929:20:1;:18;:20::i;:::-;2365:38:2::1;2388:5;2395:7;2365:22;:38::i;:::-;2263:147:::0;;:::o;1847:127:0:-;6929:20:1;:18;:20::i;:::-;1929:38:0::1;1954:12;1929:24;:38::i;:::-;1847:127:::0;:::o;3774:248::-;3847:24;3874:20;:18;:20::i;:::-;3847:47;;3904:16;3923:1;:8;;;;;;;;;;;;3904:27;;3952:8;3941:1;:8;;;:19;;;;;;;;;;;;;;;;;;4006:8;3975:40;;3996:8;3975:40;;;;;;;;;;;;3837:185;;3774:248;:::o;1192:159::-;1244:24;1313:22;1303:32;;1192:159;:::o;9163:206:2:-;9252:1;9233:21;;:7;:21;;;9229:89;;9304:1;9277:30;;;;;;;;;;;:::i;:::-;;;;;;;;9229:89;9327:35;9335:7;9352:1;9356:5;9327:7;:35::i;:::-;9163:206;;:::o;10880:487::-;10988:22;11013:18;:16;:18::i;:::-;10988:43;;11062:1;11045:19;;:5;:19;;;11041:89;;11116:1;11087:32;;;;;;;;;;;:::i;:::-;;;;;;;;11041:89;11162:1;11143:21;;:7;:21;;;11139:90;;11215:1;11187:31;;;;;;;;;;;:::i;:::-;;;;;;;;11139:90;11270:5;11238:1;:13;;:20;11252:5;11238:20;;;;;;;;;;;;;;;:29;11259:7;11238:29;;;;;;;;;;;;;;;:37;;;;11289:9;11285:76;;;11335:7;11319:31;;11328:5;11319:31;;;11344:5;11319:31;;;;;;:::i;:::-;;;;;;;;11285:76;10978:389;10880:487;;;;:::o;7124:1170::-;7209:22;7234:18;:16;:18::i;:::-;7209:43;;7282:1;7266:18;;:4;:18;;;7262:546;;7420:5;7402:1;:14;;;:23;;;;;;;:::i;:::-;;;;;;;;7262:546;;;7456:19;7478:1;:11;;:17;7490:4;7478:17;;;;;;;;;;;;;;;;7456:39;;7527:5;7513:11;:19;7509:115;;;7584:4;7590:11;7603:5;7559:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;7509:115;7778:5;7764:11;:19;7744:1;:11;;:17;7756:4;7744:17;;;;;;;;;;;;;;;:39;;;;7442:366;7262:546;7836:1;7822:16;;:2;:16;;;7818:429;;8003:5;7985:1;:14;;;:23;;;;;;;;;;;7818:429;;;8217:5;8198:1;:11;;:15;8210:2;8198:15;;;;;;;;;;;;;;;;:24;;;;;;;;;;;7818:429;8277:2;8262:25;;8271:4;8262:25;;;8281:5;8262:25;;;;;;:::i;:::-;;;;;;;;7199:1095;7124:1170;;;:::o;8819:122:1:-;8887:7;3147:66;8913:21;;8906:28;;8819:122;:::o;7082:141::-;7149:17;:15;:17::i;:::-;7144:73;;7189:17;;;;;;;;;;;;;;7144:73;7082:141::o;2416:216:2:-;6929:20:1;:18;:20::i;:::-;2528:22:2::1;2553:18;:16;:18::i;:::-;2528:43;;2591:5;2581:1;:7;;:15;;;;;;:::i;:::-;;2618:7;2606:1;:9;;:19;;;;;;:::i;:::-;;2518:114;2416:216:::0;;:::o;1980:235:0:-;6929:20:1;:18;:20::i;:::-;2100:1:0::1;2076:26;;:12;:26;;::::0;2072:95:::1;;2153:1;2125:31;;;;;;;;;;;:::i;:::-;;;;;;;;2072:95;2176:32;2195:12;2176:18;:32::i;:::-;1980:235:::0;:::o;8485:120:1:-;8535:4;8558:26;:24;:26::i;:::-;:40;;;;;;;;;;;;8551:47;;8485:120;:::o;7:99:8:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1242:75::-;1275:6;1308:2;1302:9;1292:19;;1242:75;:::o;1323:117::-;1432:1;1429;1422:12;1446:117;1555:1;1552;1545:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:619::-;3768:6;3776;3784;3833:2;3821:9;3812:7;3808:23;3804:32;3801:119;;;3839:79;;:::i;:::-;3801:119;3959:1;3984:53;4029:7;4020:6;4009:9;4005:22;3984:53;:::i;:::-;3974:63;;3930:117;4086:2;4112:53;4157:7;4148:6;4137:9;4133:22;4112:53;:::i;:::-;4102:63;;4057:118;4214:2;4240:53;4285:7;4276:6;4265:9;4261:22;4240:53;:::i;:::-;4230:63;;4185:118;3691:619;;;;;:::o;4316:86::-;4351:7;4391:4;4384:5;4380:16;4369:27;;4316:86;;;:::o;4408:112::-;4491:22;4507:5;4491:22;:::i;:::-;4486:3;4479:35;4408:112;;:::o;4526:214::-;4615:4;4653:2;4642:9;4638:18;4630:26;;4666:67;4730:1;4719:9;4715:17;4706:6;4666:67;:::i;:::-;4526:214;;;;:::o;4746:117::-;4855:1;4852;4845:12;4869:117;4978:1;4975;4968:12;4992:180;5040:77;5037:1;5030:88;5137:4;5134:1;5127:15;5161:4;5158:1;5151:15;5178:281;5261:27;5283:4;5261:27;:::i;:::-;5253:6;5249:40;5391:6;5379:10;5376:22;5355:18;5343:10;5340:34;5337:62;5334:88;;;5402:18;;:::i;:::-;5334:88;5442:10;5438:2;5431:22;5221:238;5178:281;;:::o;5465:129::-;5499:6;5526:20;;:::i;:::-;5516:30;;5555:33;5583:4;5575:6;5555:33;:::i;:::-;5465:129;;;:::o;5600:308::-;5662:4;5752:18;5744:6;5741:30;5738:56;;;5774:18;;:::i;:::-;5738:56;5812:29;5834:6;5812:29;:::i;:::-;5804:37;;5896:4;5890;5886:15;5878:23;;5600:308;;;:::o;5914:148::-;6012:6;6007:3;6002;5989:30;6053:1;6044:6;6039:3;6035:16;6028:27;5914:148;;;:::o;6068:425::-;6146:5;6171:66;6187:49;6229:6;6187:49;:::i;:::-;6171:66;:::i;:::-;6162:75;;6260:6;6253:5;6246:21;6298:4;6291:5;6287:16;6336:3;6327:6;6322:3;6318:16;6315:25;6312:112;;;6343:79;;:::i;:::-;6312:112;6433:54;6480:6;6475:3;6470;6433:54;:::i;:::-;6152:341;6068:425;;;;;:::o;6513:340::-;6569:5;6618:3;6611:4;6603:6;6599:17;6595:27;6585:122;;6626:79;;:::i;:::-;6585:122;6743:6;6730:20;6768:79;6843:3;6835:6;6828:4;6820:6;6816:17;6768:79;:::i;:::-;6759:88;;6575:278;6513:340;;;;:::o;6859:834::-;6947:6;6955;7004:2;6992:9;6983:7;6979:23;6975:32;6972:119;;;7010:79;;:::i;:::-;6972:119;7158:1;7147:9;7143:17;7130:31;7188:18;7180:6;7177:30;7174:117;;;7210:79;;:::i;:::-;7174:117;7315:63;7370:7;7361:6;7350:9;7346:22;7315:63;:::i;:::-;7305:73;;7101:287;7455:2;7444:9;7440:18;7427:32;7486:18;7478:6;7475:30;7472:117;;;7508:79;;:::i;:::-;7472:117;7613:63;7668:7;7659:6;7648:9;7644:22;7613:63;:::i;:::-;7603:73;;7398:288;6859:834;;;;;:::o;7699:329::-;7758:6;7807:2;7795:9;7786:7;7782:23;7778:32;7775:119;;;7813:79;;:::i;:::-;7775:119;7933:1;7958:53;8003:7;7994:6;7983:9;7979:22;7958:53;:::i;:::-;7948:63;;7904:117;7699:329;;;;:::o;8034:118::-;8121:24;8139:5;8121:24;:::i;:::-;8116:3;8109:37;8034:118;;:::o;8158:222::-;8251:4;8289:2;8278:9;8274:18;8266:26;;8302:71;8370:1;8359:9;8355:17;8346:6;8302:71;:::i;:::-;8158:222;;;;:::o;8386:474::-;8454:6;8462;8511:2;8499:9;8490:7;8486:23;8482:32;8479:119;;;8517:79;;:::i;:::-;8479:119;8637:1;8662:53;8707:7;8698:6;8687:9;8683:22;8662:53;:::i;:::-;8652:63;;8608:117;8764:2;8790:53;8835:7;8826:6;8815:9;8811:22;8790:53;:::i;:::-;8780:63;;8735:118;8386:474;;;;;:::o;8866:180::-;8914:77;8911:1;8904:88;9011:4;9008:1;9001:15;9035:4;9032:1;9025:15;9052:320;9096:6;9133:1;9127:4;9123:12;9113:22;;9180:1;9174:4;9170:12;9201:18;9191:81;;9257:4;9249:6;9245:17;9235:27;;9191:81;9319:2;9311:6;9308:14;9288:18;9285:38;9282:84;;9338:18;;:::i;:::-;9282:84;9103:269;9052:320;;;:::o;9378:85::-;9423:7;9452:5;9441:16;;9378:85;;;:::o;9469:101::-;9505:7;9545:18;9538:5;9534:30;9523:41;;9469:101;;;:::o;9576:60::-;9604:3;9625:5;9618:12;;9576:60;;;:::o;9642:156::-;9699:9;9732:60;9749:42;9758:32;9784:5;9758:32;:::i;:::-;9749:42;:::i;:::-;9732:60;:::i;:::-;9719:73;;9642:156;;;:::o;9804:145::-;9898:44;9936:5;9898:44;:::i;:::-;9893:3;9886:57;9804:145;;:::o;9955:236::-;10055:4;10093:2;10082:9;10078:18;10070:26;;10106:78;10181:1;10170:9;10166:17;10157:6;10106:78;:::i;:::-;9955:236;;;;:::o;10197:442::-;10346:4;10384:2;10373:9;10369:18;10361:26;;10397:71;10465:1;10454:9;10450:17;10441:6;10397:71;:::i;:::-;10478:72;10546:2;10535:9;10531:18;10522:6;10478:72;:::i;:::-;10560;10628:2;10617:9;10613:18;10604:6;10560:72;:::i;:::-;10197:442;;;;;;:::o;10645:180::-;10693:77;10690:1;10683:88;10790:4;10787:1;10780:15;10814:4;10811:1;10804:15;10831:191;10871:3;10890:20;10908:1;10890:20;:::i;:::-;10885:25;;10924:20;10942:1;10924:20;:::i;:::-;10919:25;;10967:1;10964;10960:9;10953:16;;10988:3;10985:1;10982:10;10979:36;;;10995:18;;:::i;:::-;10979:36;10831:191;;;;:::o;11028:141::-;11077:4;11100:3;11092:11;;11123:3;11120:1;11113:14;11157:4;11154:1;11144:18;11136:26;;11028:141;;;:::o;11175:93::-;11212:6;11259:2;11254;11247:5;11243:14;11239:23;11229:33;;11175:93;;;:::o;11274:107::-;11318:8;11368:5;11362:4;11358:16;11337:37;;11274:107;;;;:::o;11387:393::-;11456:6;11506:1;11494:10;11490:18;11529:97;11559:66;11548:9;11529:97;:::i;:::-;11647:39;11677:8;11666:9;11647:39;:::i;:::-;11635:51;;11719:4;11715:9;11708:5;11704:21;11695:30;;11768:4;11758:8;11754:19;11747:5;11744:30;11734:40;;11463:317;;11387:393;;;;;:::o;11786:142::-;11836:9;11869:53;11887:34;11896:24;11914:5;11896:24;:::i;:::-;11887:34;:::i;:::-;11869:53;:::i;:::-;11856:66;;11786:142;;;:::o;11934:75::-;11977:3;11998:5;11991:12;;11934:75;;;:::o;12015:269::-;12125:39;12156:7;12125:39;:::i;:::-;12186:91;12235:41;12259:16;12235:41;:::i;:::-;12227:6;12220:4;12214:11;12186:91;:::i;:::-;12180:4;12173:105;12091:193;12015:269;;;:::o;12290:73::-;12335:3;12356:1;12349:8;;12290:73;:::o;12369:189::-;12446:32;;:::i;:::-;12487:65;12545:6;12537;12531:4;12487:65;:::i;:::-;12422:136;12369:189;;:::o;12564:186::-;12624:120;12641:3;12634:5;12631:14;12624:120;;;12695:39;12732:1;12725:5;12695:39;:::i;:::-;12668:1;12661:5;12657:13;12648:22;;12624:120;;;12564:186;;:::o;12756:543::-;12857:2;12852:3;12849:11;12846:446;;;12891:38;12923:5;12891:38;:::i;:::-;12975:29;12993:10;12975:29;:::i;:::-;12965:8;12961:44;13158:2;13146:10;13143:18;13140:49;;;13179:8;13164:23;;13140:49;13202:80;13258:22;13276:3;13258:22;:::i;:::-;13248:8;13244:37;13231:11;13202:80;:::i;:::-;12861:431;;12846:446;12756:543;;;:::o;13305:117::-;13359:8;13409:5;13403:4;13399:16;13378:37;;13305:117;;;;:::o;13428:169::-;13472:6;13505:51;13553:1;13549:6;13541:5;13538:1;13534:13;13505:51;:::i;:::-;13501:56;13586:4;13580;13576:15;13566:25;;13479:118;13428:169;;;;:::o;13602:295::-;13678:4;13824:29;13849:3;13843:4;13824:29;:::i;:::-;13816:37;;13886:3;13883:1;13879:11;13873:4;13870:21;13862:29;;13602:295;;;;:::o;13902:1395::-;14019:37;14052:3;14019:37;:::i;:::-;14121:18;14113:6;14110:30;14107:56;;;14143:18;;:::i;:::-;14107:56;14187:38;14219:4;14213:11;14187:38;:::i;:::-;14272:67;14332:6;14324;14318:4;14272:67;:::i;:::-;14366:1;14390:4;14377:17;;14422:2;14414:6;14411:14;14439:1;14434:618;;;;15096:1;15113:6;15110:77;;;15162:9;15157:3;15153:19;15147:26;15138:35;;15110:77;15213:67;15273:6;15266:5;15213:67;:::i;:::-;15207:4;15200:81;15069:222;14404:887;;14434:618;14486:4;14482:9;14474:6;14470:22;14520:37;14552:4;14520:37;:::i;:::-;14579:1;14593:208;14607:7;14604:1;14601:14;14593:208;;;14686:9;14681:3;14677:19;14671:26;14663:6;14656:42;14737:1;14729:6;14725:14;14715:24;;14784:2;14773:9;14769:18;14756:31;;14630:4;14627:1;14623:12;14618:17;;14593:208;;;14829:6;14820:7;14817:19;14814:179;;;14887:9;14882:3;14878:19;14872:26;14930:48;14972:4;14964:6;14960:17;14949:9;14930:48;:::i;:::-;14922:6;14915:64;14837:156;14814:179;15039:1;15035;15027:6;15023:14;15019:22;15013:4;15006:36;14441:611;;;14404:887;;13994:1303;;;13902:1395;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1354600",
								"executionCost": "1408",
								"totalCost": "1356008"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2903",
								"burn(address,uint256)": "infinite",
								"decimals()": "383",
								"initialize(string,string)": "infinite",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2633",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2552",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 573,
									"end": 2385,
									"name": "PUSH",
									"source": 7,
									"value": "80"
								},
								{
									"begin": 573,
									"end": 2385,
									"name": "PUSH",
									"source": 7,
									"value": "40"
								},
								{
									"begin": 573,
									"end": 2385,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 573,
									"end": 2385,
									"name": "CALLVALUE",
									"source": 7
								},
								{
									"begin": 573,
									"end": 2385,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 573,
									"end": 2385,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 573,
									"end": 2385,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 573,
									"end": 2385,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 573,
									"end": 2385,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 573,
									"end": 2385,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 573,
									"end": 2385,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 573,
									"end": 2385,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 573,
									"end": 2385,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 573,
									"end": 2385,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 573,
									"end": 2385,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 573,
									"end": 2385,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 573,
									"end": 2385,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 573,
									"end": 2385,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 573,
									"end": 2385,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 573,
									"end": 2385,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 573,
									"end": 2385,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122056c3ac632fc98887d4535227f9b7350bdd05c02ef5c5c17eda369365fc808a5064736f6c634300081e0033",
									".code": [
										{
											"begin": 573,
											"end": 2385,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "CALLVALUE",
											"source": 7
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "tag",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "CALLDATALOAD",
											"source": 7
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "SHR",
											"source": 7
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "PUSH",
											"source": 7,
											"value": "9DC29FAC"
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "PUSH",
											"source": 7,
											"value": "9DC29FAC"
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "15"
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "PUSH",
											"source": 7,
											"value": "DD62ED3E"
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "16"
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "PUSH",
											"source": 7,
											"value": "F2FDE38B"
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "17"
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "tag",
											"source": 7,
											"value": "19"
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "PUSH",
											"source": 7,
											"value": "70A08231"
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "10"
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "PUSH",
											"source": 7,
											"value": "715018A6"
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "11"
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "PUSH",
											"source": 7,
											"value": "8DA5CB5B"
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "12"
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "PUSH",
											"source": 7,
											"value": "95D89B41"
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "13"
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "tag",
											"source": 7,
											"value": "18"
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "6"
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "PUSH",
											"source": 7,
											"value": "313CE567"
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "7"
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "PUSH",
											"source": 7,
											"value": "40C10F19"
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "PUSH",
											"source": 7,
											"value": "4CD88B76"
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "tag",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "PUSH",
											"source": 7,
											"value": "6FDDE03"
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "3"
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "PUSH",
											"source": 7,
											"value": "95EA7B3"
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "PUSH",
											"source": 7,
											"value": "18160DDD"
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "5"
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "tag",
											"source": 7,
											"value": "2"
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 573,
											"end": 2385,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2697,
											"end": 2841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2697,
											"end": 2841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 5114,
											"end": 5300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 5114,
											"end": 5300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 5114,
											"end": 5300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3850,
											"end": 4002,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 3850,
											"end": 4002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3850,
											"end": 4002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3850,
											"end": 4002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3850,
											"end": 4002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3850,
											"end": 4002,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 3850,
											"end": 4002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3850,
											"end": 4002,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3850,
											"end": 4002,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3850,
											"end": 4002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3850,
											"end": 4002,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3850,
											"end": 4002,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3850,
											"end": 4002,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3850,
											"end": 4002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3850,
											"end": 4002,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3850,
											"end": 4002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3850,
											"end": 4002,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3850,
											"end": 4002,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3850,
											"end": 4002,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3850,
											"end": 4002,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3850,
											"end": 4002,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3850,
											"end": 4002,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3850,
											"end": 4002,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 5892,
											"end": 6136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 5892,
											"end": 6136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 5892,
											"end": 6136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3735,
											"end": 3817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3735,
											"end": 3817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1652,
											"end": 1820,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 1652,
											"end": 1820,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1652,
											"end": 1820,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 1652,
											"end": 1820,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 1652,
											"end": 1820,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1652,
											"end": 1820,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 1652,
											"end": 1820,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1652,
											"end": 1820,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1652,
											"end": 1820,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1652,
											"end": 1820,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1652,
											"end": 1820,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 1652,
											"end": 1820,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1652,
											"end": 1820,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1652,
											"end": 1820,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 1652,
											"end": 1820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1652,
											"end": 1820,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 1652,
											"end": 1820,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1652,
											"end": 1820,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 1652,
											"end": 1820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1652,
											"end": 1820,
											"name": "tag",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 1652,
											"end": 1820,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1652,
											"end": 1820,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 987,
											"end": 1323,
											"name": "tag",
											"source": 7,
											"value": "9"
										},
										{
											"begin": 987,
											"end": 1323,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 987,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 987,
											"end": 1323,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 987,
											"end": 1323,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 987,
											"end": 1323,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 987,
											"end": 1323,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 987,
											"end": 1323,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 987,
											"end": 1323,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 987,
											"end": 1323,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 987,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 987,
											"end": 1323,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 987,
											"end": 1323,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 987,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "49"
										},
										{
											"begin": 987,
											"end": 1323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 987,
											"end": 1323,
											"name": "tag",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 987,
											"end": 1323,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 987,
											"end": 1323,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 987,
											"end": 1323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 987,
											"end": 1323,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 987,
											"end": 1323,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 987,
											"end": 1323,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 4035,
											"end": 4206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 4035,
											"end": 4206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 4035,
											"end": 4206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2954,
											"end": 3102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2954,
											"end": 3102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2218,
											"end": 2383,
											"name": "tag",
											"source": 7,
											"value": "14"
										},
										{
											"begin": 2218,
											"end": 2383,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2218,
											"end": 2383,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 2218,
											"end": 2383,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2218,
											"end": 2383,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2218,
											"end": 2383,
											"name": "CALLDATASIZE",
											"source": 7
										},
										{
											"begin": 2218,
											"end": 2383,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2218,
											"end": 2383,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2218,
											"end": 2383,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2218,
											"end": 2383,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2218,
											"end": 2383,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 2218,
											"end": 2383,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2218,
											"end": 2383,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2218,
											"end": 2383,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "27"
										},
										{
											"begin": 2218,
											"end": 2383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2218,
											"end": 2383,
											"name": "tag",
											"source": 7,
											"value": "66"
										},
										{
											"begin": 2218,
											"end": 2383,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2218,
											"end": 2383,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 2218,
											"end": 2383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2218,
											"end": 2383,
											"name": "tag",
											"source": 7,
											"value": "65"
										},
										{
											"begin": 2218,
											"end": 2383,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2218,
											"end": 2383,
											"name": "STOP",
											"source": 7
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 4401,
											"end": 4579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 4401,
											"end": 4579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 4401,
											"end": 4579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 4612,
											"end": 4807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 4612,
											"end": 4807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "tag",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 4612,
											"end": 4807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2742,
											"end": 2755,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2767,
											"end": 2789,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2792,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2792,
											"end": 2808,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2792,
											"end": 2810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2792,
											"end": 2810,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2792,
											"end": 2810,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2767,
											"end": 2810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2767,
											"end": 2810,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2827,
											"end": 2828,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2827,
											"end": 2834,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2827,
											"end": 2834,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2820,
											"end": 2834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2820,
											"end": 2834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2820,
											"end": 2834,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2697,
											"end": 2841,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2697,
											"end": 2841,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5187,
											"end": 5191,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5203,
											"end": 5216,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5219,
											"end": 5231,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 5219,
											"end": 5229,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 5219,
											"end": 5231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5219,
											"end": 5231,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 5219,
											"end": 5231,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5231,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5203,
											"end": 5231,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5241,
											"end": 5272,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 5250,
											"end": 5255,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5257,
											"end": 5264,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5266,
											"end": 5271,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5241,
											"end": 5249,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 5241,
											"end": 5272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5241,
											"end": 5272,
											"name": "tag",
											"source": 2,
											"value": "92"
										},
										{
											"begin": 5241,
											"end": 5272,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5289,
											"end": 5293,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5282,
											"end": 5293,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5282,
											"end": 5293,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5282,
											"end": 5293,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5114,
											"end": 5300,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5114,
											"end": 5300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3850,
											"end": 4002,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3850,
											"end": 4002,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3902,
											"end": 3909,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3921,
											"end": 3943,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3946,
											"end": 3964,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3946,
											"end": 3962,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 3946,
											"end": 3964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3946,
											"end": 3964,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 3946,
											"end": 3964,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3921,
											"end": 3964,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3921,
											"end": 3964,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3981,
											"end": 3982,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3981,
											"end": 3995,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3981,
											"end": 3995,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3981,
											"end": 3995,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3974,
											"end": 3995,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3974,
											"end": 3995,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3974,
											"end": 3995,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3850,
											"end": 4002,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3850,
											"end": 4002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5979,
											"end": 5983,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5995,
											"end": 6010,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6013,
											"end": 6025,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 6013,
											"end": 6023,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 6013,
											"end": 6025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6013,
											"end": 6025,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 6013,
											"end": 6025,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5995,
											"end": 6025,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5995,
											"end": 6025,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6035,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 6051,
											"end": 6055,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6057,
											"end": 6064,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6066,
											"end": 6071,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6035,
											"end": 6050,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 6035,
											"end": 6072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6035,
											"end": 6072,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 6035,
											"end": 6072,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6082,
											"end": 6108,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 6092,
											"end": 6096,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6098,
											"end": 6100,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6102,
											"end": 6107,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6082,
											"end": 6091,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 6082,
											"end": 6108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6082,
											"end": 6108,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 6082,
											"end": 6108,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6125,
											"end": 6129,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6118,
											"end": 6129,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6118,
											"end": 6129,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6118,
											"end": 6129,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5892,
											"end": 6136,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5892,
											"end": 6136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3784,
											"end": 3789,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3808,
											"end": 3810,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3801,
											"end": 3810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3801,
											"end": 3810,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3735,
											"end": 3817,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3735,
											"end": 3817,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1652,
											"end": 1820,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 1652,
											"end": 1820,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1813,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 1802,
											"end": 1804,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1806,
											"end": 1812,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1796,
											"end": 1801,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "108"
										},
										{
											"begin": 1796,
											"end": 1813,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1796,
											"end": 1813,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "107"
										},
										{
											"begin": 1796,
											"end": 1813,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1652,
											"end": 1820,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1652,
											"end": 1820,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1652,
											"end": 1820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 987,
											"end": 1323,
											"name": "tag",
											"source": 7,
											"value": "50"
										},
										{
											"begin": 987,
											"end": 1323,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4158,
											"end": 4188,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 4191,
											"end": 4215,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 4191,
											"end": 4217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "tag",
											"source": 1,
											"value": "110"
										},
										{
											"begin": 4191,
											"end": 4217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4217,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4298,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4303,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4279,
											"end": 4317,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4345,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4349,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4327,
											"end": 4362,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4704,
											"end": 4721,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4739,
											"end": 4740,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4724,
											"end": 4735,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4740,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4724,
											"end": 4740,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4740,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4744,
											"end": 4758,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "tag",
											"source": 1,
											"value": "112"
										},
										{
											"begin": 4724,
											"end": 4758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4704,
											"end": 4758,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4704,
											"end": 4758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4768,
											"end": 4785,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4803,
											"end": 4804,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4788,
											"end": 4799,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4804,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4788,
											"end": 4804,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4804,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4837,
											"end": 4838,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4816,
											"end": 4820,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 4808,
											"end": 4833,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4808,
											"end": 4833,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4808,
											"end": 4833,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 4808,
											"end": 4838,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "tag",
											"source": 1,
											"value": "113"
										},
										{
											"begin": 4788,
											"end": 4838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4768,
											"end": 4838,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4768,
											"end": 4838,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4854,
											"end": 4866,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4866,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4871,
											"end": 4883,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4870,
											"end": 4883,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 4853,
											"end": 4883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "PUSH",
											"source": 1,
											"value": "F92EE8A900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4906,
											"end": 4929,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 4849,
											"end": 4940,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4966,
											"end": 4967,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4949,
											"end": 4950,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4963,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4949,
											"end": 4963,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4963,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4949,
											"end": 4967,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4981,
											"end": 4995,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5029,
											"end": 5033,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5011,
											"end": 5012,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5026,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5011,
											"end": 5026,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5026,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5011,
											"end": 5033,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "tag",
											"source": 1,
											"value": "116"
										},
										{
											"begin": 4977,
											"end": 5044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1180,
											"end": 1206,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 1193,
											"end": 1197,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 1199,
											"end": 1205,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 1180,
											"end": 1192,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "119"
										},
										{
											"begin": 1180,
											"end": 1206,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1180,
											"end": 1206,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "118"
										},
										{
											"begin": 1180,
											"end": 1206,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1316,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 1305,
											"end": 1315,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1304,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "121"
										},
										{
											"begin": 1290,
											"end": 1316,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1290,
											"end": 1316,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "120"
										},
										{
											"begin": 1290,
											"end": 1316,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5068,
											"end": 5082,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5116,
											"end": 5121,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5098,
											"end": 5099,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5113,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5098,
											"end": 5113,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5113,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 5121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH",
											"source": 1,
											"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
										},
										{
											"begin": 5152,
											"end": 5153,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "124"
										},
										{
											"begin": 5140,
											"end": 5154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5154,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 5064,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5171,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 987,
											"end": 1323,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 987,
											"end": 1323,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 987,
											"end": 1323,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4100,
											"end": 4107,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4119,
											"end": 4141,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4144,
											"end": 4162,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 4144,
											"end": 4160,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 4144,
											"end": 4162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4144,
											"end": 4162,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 4144,
											"end": 4162,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4119,
											"end": 4162,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4119,
											"end": 4162,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4179,
											"end": 4180,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4179,
											"end": 4190,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4179,
											"end": 4190,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4179,
											"end": 4199,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4191,
											"end": 4198,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4179,
											"end": 4199,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4179,
											"end": 4199,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4179,
											"end": 4199,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4179,
											"end": 4199,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4179,
											"end": 4199,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4179,
											"end": 4199,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4179,
											"end": 4199,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4179,
											"end": 4199,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4179,
											"end": 4199,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4179,
											"end": 4199,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4179,
											"end": 4199,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4179,
											"end": 4199,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4179,
											"end": 4199,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4179,
											"end": 4199,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4179,
											"end": 4199,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4179,
											"end": 4199,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4172,
											"end": 4199,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4172,
											"end": 4199,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4172,
											"end": 4199,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4035,
											"end": 4206,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4035,
											"end": 4206,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 3155,
											"end": 3256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 3246,
											"end": 3247,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3219,
											"end": 3237,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 3219,
											"end": 3249,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 3219,
											"end": 3249,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3155,
											"end": 3256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2487,
											"end": 2494,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2506,
											"end": 2530,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2533,
											"end": 2551,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2533,
											"end": 2553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 2533,
											"end": 2553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2553,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2553,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2570,
											"end": 2578,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2563,
											"end": 2578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2441,
											"end": 2585,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3001,
											"end": 3014,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3026,
											"end": 3048,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3051,
											"end": 3069,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 3051,
											"end": 3067,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 3051,
											"end": 3069,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3051,
											"end": 3069,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 3051,
											"end": 3069,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3026,
											"end": 3069,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3026,
											"end": 3069,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3087,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3086,
											"end": 3095,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3086,
											"end": 3095,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3079,
											"end": 3095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3079,
											"end": 3095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "tag",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2954,
											"end": 3102,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2954,
											"end": 3102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2218,
											"end": 2383,
											"name": "tag",
											"source": 7,
											"value": "67"
										},
										{
											"begin": 2218,
											"end": 2383,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2359,
											"end": 2376,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 2365,
											"end": 2367,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2369,
											"end": 2375,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2359,
											"end": 2364,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "146"
										},
										{
											"begin": 2359,
											"end": 2376,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2359,
											"end": 2376,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "145"
										},
										{
											"begin": 2359,
											"end": 2376,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2218,
											"end": 2383,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2218,
											"end": 2383,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2218,
											"end": 2383,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4470,
											"end": 4474,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4486,
											"end": 4499,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4502,
											"end": 4514,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 4502,
											"end": 4512,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 4502,
											"end": 4514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4502,
											"end": 4514,
											"name": "tag",
											"source": 2,
											"value": "148"
										},
										{
											"begin": 4502,
											"end": 4514,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4486,
											"end": 4514,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4486,
											"end": 4514,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4524,
											"end": 4551,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 4534,
											"end": 4539,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4541,
											"end": 4543,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4545,
											"end": 4550,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4524,
											"end": 4533,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 4524,
											"end": 4551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4524,
											"end": 4551,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 4524,
											"end": 4551,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4568,
											"end": 4572,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4561,
											"end": 4572,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4561,
											"end": 4572,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4561,
											"end": 4572,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4401,
											"end": 4579,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4401,
											"end": 4579,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4692,
											"end": 4699,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4711,
											"end": 4733,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4736,
											"end": 4754,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 4736,
											"end": 4752,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 4736,
											"end": 4754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4736,
											"end": 4754,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 4736,
											"end": 4754,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4711,
											"end": 4754,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4711,
											"end": 4754,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4771,
											"end": 4772,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4771,
											"end": 4784,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4771,
											"end": 4784,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4771,
											"end": 4791,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4785,
											"end": 4790,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4771,
											"end": 4791,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4771,
											"end": 4791,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4771,
											"end": 4791,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4771,
											"end": 4791,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4771,
											"end": 4791,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4771,
											"end": 4791,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4771,
											"end": 4791,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4771,
											"end": 4791,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4771,
											"end": 4791,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4771,
											"end": 4791,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4771,
											"end": 4791,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4771,
											"end": 4791,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4771,
											"end": 4791,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4771,
											"end": 4791,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4771,
											"end": 4791,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4771,
											"end": 4800,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4792,
											"end": 4799,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 4771,
											"end": 4800,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4771,
											"end": 4800,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4771,
											"end": 4800,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4771,
											"end": 4800,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4771,
											"end": 4800,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4771,
											"end": 4800,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4771,
											"end": 4800,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4771,
											"end": 4800,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4771,
											"end": 4800,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4771,
											"end": 4800,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4771,
											"end": 4800,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4771,
											"end": 4800,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4771,
											"end": 4800,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4771,
											"end": 4800,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4771,
											"end": 4800,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 4771,
											"end": 4800,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 4764,
											"end": 4800,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4764,
											"end": 4800,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4764,
											"end": 4800,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4612,
											"end": 4807,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4612,
											"end": 4807,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 2334,
											"end": 2345,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2334,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 2334,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3509,
											"end": 3510,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3497,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3489,
											"end": 3511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3489,
											"end": 3511,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3562,
											"end": 3563,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 3534,
											"end": 3565,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3534,
											"end": 3565,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 3485,
											"end": 3576,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 3604,
											"end": 3612,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3603,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 3585,
											"end": 3613,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 3585,
											"end": 3613,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3405,
											"end": 3620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1947,
											"end": 2100,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 1947,
											"end": 2100,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1997,
											"end": 2019,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2064,
											"end": 2084,
											"name": "PUSH",
											"source": 2,
											"value": "52C63247E1F47DB19D5CE0460030C497F067CA4CEBF71BA98EEADABE20BACE00"
										},
										{
											"begin": 2054,
											"end": 2084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2054,
											"end": 2084,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1947,
											"end": 2100,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1947,
											"end": 2100,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 887,
											"end": 983,
											"name": "tag",
											"source": 3,
											"value": "91"
										},
										{
											"begin": 887,
											"end": 983,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 940,
											"end": 947,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 959,
											"end": 976,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 959,
											"end": 976,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 887,
											"end": 983,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 887,
											"end": 983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 9905,
											"end": 10033,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 9905,
											"end": 10033,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10026,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 9998,
											"end": 10003,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10005,
											"end": 10012,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10014,
											"end": 10019,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10021,
											"end": 10025,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9989,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 9989,
											"end": 10026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9989,
											"end": 10026,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 9989,
											"end": 10026,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9905,
											"end": 10033,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9905,
											"end": 10033,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9905,
											"end": 10033,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9905,
											"end": 10033,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11649,
											"end": 12125,
											"name": "tag",
											"source": 2,
											"value": "99"
										},
										{
											"begin": 11649,
											"end": 12125,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11748,
											"end": 11772,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11775,
											"end": 11800,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 11785,
											"end": 11790,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11792,
											"end": 11799,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11775,
											"end": 11784,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 11775,
											"end": 11800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11775,
											"end": 11800,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 11775,
											"end": 11800,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11748,
											"end": 11800,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11748,
											"end": 11800,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11833,
											"end": 11850,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11814,
											"end": 11830,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11814,
											"end": 11850,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 11810,
											"end": 12119,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11810,
											"end": 12119,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 11810,
											"end": 12119,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11889,
											"end": 11894,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11870,
											"end": 11886,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11870,
											"end": 11894,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 11866,
											"end": 11996,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11866,
											"end": 11996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 11866,
											"end": 11996,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11948,
											"end": 11955,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11957,
											"end": 11973,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11975,
											"end": 11980,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11921,
											"end": 11981,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11921,
											"end": 11981,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11921,
											"end": 11981,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11921,
											"end": 11981,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11921,
											"end": 11981,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11921,
											"end": 11981,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11921,
											"end": 11981,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11921,
											"end": 11981,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 11921,
											"end": 11981,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 11921,
											"end": 11981,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 11921,
											"end": 11981,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11921,
											"end": 11981,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11921,
											"end": 11981,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 11921,
											"end": 11981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11921,
											"end": 11981,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 11921,
											"end": 11981,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11921,
											"end": 11981,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11921,
											"end": 11981,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11921,
											"end": 11981,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11921,
											"end": 11981,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11921,
											"end": 11981,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11921,
											"end": 11981,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11921,
											"end": 11981,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 11866,
											"end": 11996,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 11866,
											"end": 11996,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12037,
											"end": 12094,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 12046,
											"end": 12051,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12053,
											"end": 12060,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12081,
											"end": 12086,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12062,
											"end": 12078,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12062,
											"end": 12086,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12088,
											"end": 12093,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12037,
											"end": 12045,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 12037,
											"end": 12094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12037,
											"end": 12094,
											"name": "tag",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 12037,
											"end": 12094,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11810,
											"end": 12119,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 11810,
											"end": 12119,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11738,
											"end": 12125,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11649,
											"end": 12125,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11649,
											"end": 12125,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11649,
											"end": 12125,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11649,
											"end": 12125,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6509,
											"end": 6809,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 6509,
											"end": 6809,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6608,
											"end": 6609,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6592,
											"end": 6610,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6592,
											"end": 6610,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6592,
											"end": 6596,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6592,
											"end": 6610,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6592,
											"end": 6610,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6592,
											"end": 6610,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6588,
											"end": 6674,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 6588,
											"end": 6674,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6660,
											"end": 6661,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6633,
											"end": 6663,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6633,
											"end": 6663,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6633,
											"end": 6663,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6633,
											"end": 6663,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6633,
											"end": 6663,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6633,
											"end": 6663,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6633,
											"end": 6663,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6633,
											"end": 6663,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 6633,
											"end": 6663,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6633,
											"end": 6663,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6633,
											"end": 6663,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 6633,
											"end": 6663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6633,
											"end": 6663,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 6633,
											"end": 6663,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6633,
											"end": 6663,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6633,
											"end": 6663,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6633,
											"end": 6663,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6633,
											"end": 6663,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6633,
											"end": 6663,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6633,
											"end": 6663,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6633,
											"end": 6663,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6588,
											"end": 6674,
											"name": "tag",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 6588,
											"end": 6674,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6701,
											"end": 6702,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6687,
											"end": 6703,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6687,
											"end": 6703,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6687,
											"end": 6689,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6687,
											"end": 6703,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6687,
											"end": 6703,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6687,
											"end": 6703,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6683,
											"end": 6769,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 6683,
											"end": 6769,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6755,
											"end": 6756,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6726,
											"end": 6758,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6726,
											"end": 6758,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6726,
											"end": 6758,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6726,
											"end": 6758,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6726,
											"end": 6758,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6726,
											"end": 6758,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6726,
											"end": 6758,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6726,
											"end": 6758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 6726,
											"end": 6758,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6726,
											"end": 6758,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6726,
											"end": 6758,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 6726,
											"end": 6758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6726,
											"end": 6758,
											"name": "tag",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 6726,
											"end": 6758,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6726,
											"end": 6758,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6726,
											"end": 6758,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6726,
											"end": 6758,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6726,
											"end": 6758,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6726,
											"end": 6758,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6726,
											"end": 6758,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6726,
											"end": 6758,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6683,
											"end": 6769,
											"name": "tag",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 6683,
											"end": 6769,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6778,
											"end": 6802,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 6786,
											"end": 6790,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6792,
											"end": 6794,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6796,
											"end": 6801,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6778,
											"end": 6785,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 6778,
											"end": 6802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6778,
											"end": 6802,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 6778,
											"end": 6802,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6509,
											"end": 6809,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6509,
											"end": 6809,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6509,
											"end": 6809,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6509,
											"end": 6809,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 2658,
											"end": 2820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2728,
											"end": 2738,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2728,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 2728,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 2717,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2717,
											"end": 2724,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 2717,
											"end": 2724,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2717,
											"end": 2740,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 2790,
											"end": 2800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2790,
											"end": 2802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 2790,
											"end": 2802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2763,
											"end": 2803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2763,
											"end": 2803,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 2713,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2658,
											"end": 2820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8637,
											"end": 8845,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 8637,
											"end": 8845,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8726,
											"end": 8727,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8707,
											"end": 8728,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8707,
											"end": 8728,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8714,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8728,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8707,
											"end": 8728,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8707,
											"end": 8728,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8703,
											"end": 8794,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 8703,
											"end": 8794,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8780,
											"end": 8781,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8751,
											"end": 8783,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8751,
											"end": 8783,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8751,
											"end": 8783,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8751,
											"end": 8783,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8751,
											"end": 8783,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8751,
											"end": 8783,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8751,
											"end": 8783,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8751,
											"end": 8783,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 8751,
											"end": 8783,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8751,
											"end": 8783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8751,
											"end": 8783,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 8751,
											"end": 8783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8751,
											"end": 8783,
											"name": "tag",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 8751,
											"end": 8783,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8751,
											"end": 8783,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8751,
											"end": 8783,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8751,
											"end": 8783,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8751,
											"end": 8783,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8751,
											"end": 8783,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8751,
											"end": 8783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8751,
											"end": 8783,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8703,
											"end": 8794,
											"name": "tag",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 8703,
											"end": 8794,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8803,
											"end": 8838,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 8819,
											"end": 8820,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8823,
											"end": 8830,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8832,
											"end": 8837,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8803,
											"end": 8810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 8803,
											"end": 8838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8803,
											"end": 8838,
											"name": "tag",
											"source": 2,
											"value": "186"
										},
										{
											"begin": 8803,
											"end": 8838,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8637,
											"end": 8845,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8637,
											"end": 8845,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8637,
											"end": 8845,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9071,
											"end": 9276,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 9071,
											"end": 9276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9129,
											"end": 9159,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9171,
											"end": 9183,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9186,
											"end": 9213,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 9186,
											"end": 9211,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 9186,
											"end": 9213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9186,
											"end": 9213,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 9186,
											"end": 9213,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9171,
											"end": 9213,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9171,
											"end": 9213,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9256,
											"end": 9260,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9246,
											"end": 9260,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9246,
											"end": 9260,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9232,
											"end": 9270,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9071,
											"end": 9276,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9071,
											"end": 9276,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2263,
											"end": 2410,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2263,
											"end": 2410,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 6929,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 6929,
											"end": 6949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2365,
											"end": 2403,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 2388,
											"end": 2393,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2395,
											"end": 2402,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 2365,
											"end": 2403,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2365,
											"end": 2403,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 2365,
											"end": 2403,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2263,
											"end": 2410,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2263,
											"end": 2410,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2263,
											"end": 2410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 6929,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 6929,
											"end": 6949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 1954,
											"end": 1966,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 1953,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 1929,
											"end": 1967,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 1929,
											"end": 1967,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 1974,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 1974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3871,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 3874,
											"end": 3892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 3874,
											"end": 3894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 3874,
											"end": 3894,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3894,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3847,
											"end": 3894,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3920,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3924,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3923,
											"end": 3931,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3931,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3904,
											"end": 3931,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3952,
											"end": 3960,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3942,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3949,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3941,
											"end": 3960,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4006,
											"end": 4014,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3996,
											"end": 4004,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3975,
											"end": 4015,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3837,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3774,
											"end": 4022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1244,
											"end": 1268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1313,
											"end": 1335,
											"name": "PUSH",
											"source": 0,
											"value": "9016D09D72D40FDAE2FD8CEAC6B6234C7706214FD39C1CD1E609A0528C199300"
										},
										{
											"begin": 1303,
											"end": 1335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1303,
											"end": 1335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9163,
											"end": 9369,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 9163,
											"end": 9369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9252,
											"end": 9253,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9233,
											"end": 9254,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9233,
											"end": 9254,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9233,
											"end": 9240,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9233,
											"end": 9254,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9233,
											"end": 9254,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 9233,
											"end": 9254,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9229,
											"end": 9318,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 9229,
											"end": 9318,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 9304,
											"end": 9305,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9277,
											"end": 9307,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9277,
											"end": 9307,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9277,
											"end": 9307,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9277,
											"end": 9307,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9277,
											"end": 9307,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9277,
											"end": 9307,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 9277,
											"end": 9307,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9277,
											"end": 9307,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 9277,
											"end": 9307,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9277,
											"end": 9307,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9277,
											"end": 9307,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 9277,
											"end": 9307,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9277,
											"end": 9307,
											"name": "tag",
											"source": 2,
											"value": "206"
										},
										{
											"begin": 9277,
											"end": 9307,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9277,
											"end": 9307,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 9277,
											"end": 9307,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 9277,
											"end": 9307,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 9277,
											"end": 9307,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 9277,
											"end": 9307,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 9277,
											"end": 9307,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9277,
											"end": 9307,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 9229,
											"end": 9318,
											"name": "tag",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 9229,
											"end": 9318,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9327,
											"end": 9362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 9335,
											"end": 9342,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9352,
											"end": 9353,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 9356,
											"end": 9361,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9327,
											"end": 9334,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 9327,
											"end": 9362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9327,
											"end": 9362,
											"name": "tag",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 9327,
											"end": 9362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9163,
											"end": 9369,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9163,
											"end": 9369,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9163,
											"end": 9369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10880,
											"end": 11367,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 10880,
											"end": 11367,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10988,
											"end": 11010,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11013,
											"end": 11031,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 11013,
											"end": 11029,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 11013,
											"end": 11031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11013,
											"end": 11031,
											"name": "tag",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 11013,
											"end": 11031,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10988,
											"end": 11031,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10988,
											"end": 11031,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11062,
											"end": 11063,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11045,
											"end": 11064,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11045,
											"end": 11064,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11045,
											"end": 11050,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11045,
											"end": 11064,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11045,
											"end": 11064,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11045,
											"end": 11064,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11041,
											"end": 11130,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 11041,
											"end": 11130,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11116,
											"end": 11117,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11087,
											"end": 11119,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11087,
											"end": 11119,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11087,
											"end": 11119,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11087,
											"end": 11119,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11087,
											"end": 11119,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11087,
											"end": 11119,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11087,
											"end": 11119,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11087,
											"end": 11119,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 11087,
											"end": 11119,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11087,
											"end": 11119,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11087,
											"end": 11119,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 11087,
											"end": 11119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11087,
											"end": 11119,
											"name": "tag",
											"source": 2,
											"value": "211"
										},
										{
											"begin": 11087,
											"end": 11119,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11087,
											"end": 11119,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11087,
											"end": 11119,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11087,
											"end": 11119,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11087,
											"end": 11119,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11087,
											"end": 11119,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11087,
											"end": 11119,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11087,
											"end": 11119,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 11041,
											"end": 11130,
											"name": "tag",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 11041,
											"end": 11130,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11162,
											"end": 11163,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11143,
											"end": 11164,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11143,
											"end": 11164,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11143,
											"end": 11150,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11143,
											"end": 11164,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11143,
											"end": 11164,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11143,
											"end": 11164,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11139,
											"end": 11229,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 11139,
											"end": 11229,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11215,
											"end": 11216,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11187,
											"end": 11218,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11187,
											"end": 11218,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11187,
											"end": 11218,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11187,
											"end": 11218,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11187,
											"end": 11218,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11187,
											"end": 11218,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11187,
											"end": 11218,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11187,
											"end": 11218,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 11187,
											"end": 11218,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11187,
											"end": 11218,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11187,
											"end": 11218,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 11187,
											"end": 11218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11187,
											"end": 11218,
											"name": "tag",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 11187,
											"end": 11218,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11187,
											"end": 11218,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11187,
											"end": 11218,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11187,
											"end": 11218,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11187,
											"end": 11218,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11187,
											"end": 11218,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11187,
											"end": 11218,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11187,
											"end": 11218,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 11139,
											"end": 11229,
											"name": "tag",
											"source": 2,
											"value": "212"
										},
										{
											"begin": 11139,
											"end": 11229,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11270,
											"end": 11275,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11238,
											"end": 11239,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11238,
											"end": 11251,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 11238,
											"end": 11251,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11238,
											"end": 11258,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11252,
											"end": 11257,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 11238,
											"end": 11258,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11238,
											"end": 11258,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11238,
											"end": 11258,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11238,
											"end": 11258,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11238,
											"end": 11258,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11238,
											"end": 11258,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11238,
											"end": 11258,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11238,
											"end": 11258,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11238,
											"end": 11258,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11238,
											"end": 11258,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11238,
											"end": 11258,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11238,
											"end": 11258,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11238,
											"end": 11258,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11238,
											"end": 11258,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11238,
											"end": 11258,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 11238,
											"end": 11267,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11259,
											"end": 11266,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 11238,
											"end": 11267,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11238,
											"end": 11267,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11238,
											"end": 11267,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11238,
											"end": 11267,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11238,
											"end": 11267,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11238,
											"end": 11267,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11238,
											"end": 11267,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11238,
											"end": 11267,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11238,
											"end": 11267,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11238,
											"end": 11267,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11238,
											"end": 11267,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11238,
											"end": 11267,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11238,
											"end": 11267,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11238,
											"end": 11267,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11238,
											"end": 11267,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 11238,
											"end": 11275,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11238,
											"end": 11275,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11238,
											"end": 11275,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 11238,
											"end": 11275,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11289,
											"end": 11298,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11285,
											"end": 11361,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11285,
											"end": 11361,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 11285,
											"end": 11361,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11335,
											"end": 11342,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11319,
											"end": 11350,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11319,
											"end": 11350,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11328,
											"end": 11333,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11319,
											"end": 11350,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11319,
											"end": 11350,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11319,
											"end": 11350,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 11344,
											"end": 11349,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 11319,
											"end": 11350,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11319,
											"end": 11350,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11319,
											"end": 11350,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 11319,
											"end": 11350,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11319,
											"end": 11350,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11319,
											"end": 11350,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 11319,
											"end": 11350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11319,
											"end": 11350,
											"name": "tag",
											"source": 2,
											"value": "215"
										},
										{
											"begin": 11319,
											"end": 11350,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11319,
											"end": 11350,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11319,
											"end": 11350,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11319,
											"end": 11350,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11319,
											"end": 11350,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11319,
											"end": 11350,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11319,
											"end": 11350,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11319,
											"end": 11350,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 11285,
											"end": 11361,
											"name": "tag",
											"source": 2,
											"value": "214"
										},
										{
											"begin": 11285,
											"end": 11361,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10978,
											"end": 11367,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10880,
											"end": 11367,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10880,
											"end": 11367,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10880,
											"end": 11367,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10880,
											"end": 11367,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10880,
											"end": 11367,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7124,
											"end": 8294,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 7124,
											"end": 8294,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7209,
											"end": 7231,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7234,
											"end": 7252,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 7234,
											"end": 7250,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 7234,
											"end": 7252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7234,
											"end": 7252,
											"name": "tag",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 7234,
											"end": 7252,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7209,
											"end": 7252,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7209,
											"end": 7252,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7282,
											"end": 7283,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7266,
											"end": 7284,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7266,
											"end": 7284,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7266,
											"end": 7270,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7266,
											"end": 7284,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7266,
											"end": 7284,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7266,
											"end": 7284,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7262,
											"end": 7808,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 7262,
											"end": 7808,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7420,
											"end": 7425,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7402,
											"end": 7403,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7402,
											"end": 7416,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 7402,
											"end": 7416,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7402,
											"end": 7416,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7402,
											"end": 7425,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7402,
											"end": 7425,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7402,
											"end": 7425,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7402,
											"end": 7425,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 7402,
											"end": 7425,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7402,
											"end": 7425,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7402,
											"end": 7425,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "220"
										},
										{
											"begin": 7402,
											"end": 7425,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7402,
											"end": 7425,
											"name": "tag",
											"source": 2,
											"value": "219"
										},
										{
											"begin": 7402,
											"end": 7425,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7402,
											"end": 7425,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7402,
											"end": 7425,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7402,
											"end": 7425,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7402,
											"end": 7425,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7402,
											"end": 7425,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7402,
											"end": 7425,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7402,
											"end": 7425,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7262,
											"end": 7808,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 7262,
											"end": 7808,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7262,
											"end": 7808,
											"name": "tag",
											"source": 2,
											"value": "218"
										},
										{
											"begin": 7262,
											"end": 7808,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7456,
											"end": 7475,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7478,
											"end": 7479,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7478,
											"end": 7489,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7478,
											"end": 7489,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7478,
											"end": 7495,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7490,
											"end": 7494,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 7478,
											"end": 7495,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7478,
											"end": 7495,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7478,
											"end": 7495,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7478,
											"end": 7495,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7478,
											"end": 7495,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7478,
											"end": 7495,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7478,
											"end": 7495,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7478,
											"end": 7495,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7478,
											"end": 7495,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7478,
											"end": 7495,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7478,
											"end": 7495,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7478,
											"end": 7495,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7478,
											"end": 7495,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7478,
											"end": 7495,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7478,
											"end": 7495,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7478,
											"end": 7495,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7456,
											"end": 7495,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7456,
											"end": 7495,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7527,
											"end": 7532,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7513,
											"end": 7524,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7513,
											"end": 7532,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 7509,
											"end": 7624,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7509,
											"end": 7624,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 7509,
											"end": 7624,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7584,
											"end": 7588,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7590,
											"end": 7601,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7603,
											"end": 7608,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7559,
											"end": 7609,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7559,
											"end": 7609,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7559,
											"end": 7609,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7559,
											"end": 7609,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7559,
											"end": 7609,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7559,
											"end": 7609,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7559,
											"end": 7609,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7559,
											"end": 7609,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 7559,
											"end": 7609,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 7559,
											"end": 7609,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7559,
											"end": 7609,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7559,
											"end": 7609,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7559,
											"end": 7609,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 7559,
											"end": 7609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7559,
											"end": 7609,
											"name": "tag",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 7559,
											"end": 7609,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7559,
											"end": 7609,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7559,
											"end": 7609,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7559,
											"end": 7609,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7559,
											"end": 7609,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7559,
											"end": 7609,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7559,
											"end": 7609,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7559,
											"end": 7609,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7509,
											"end": 7624,
											"name": "tag",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 7509,
											"end": 7624,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7778,
											"end": 7783,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7764,
											"end": 7775,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7764,
											"end": 7783,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7744,
											"end": 7745,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7744,
											"end": 7755,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7744,
											"end": 7755,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7744,
											"end": 7761,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7756,
											"end": 7760,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 7744,
											"end": 7761,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7744,
											"end": 7761,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7744,
											"end": 7761,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7744,
											"end": 7761,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7744,
											"end": 7761,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7744,
											"end": 7761,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7744,
											"end": 7761,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7744,
											"end": 7761,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7744,
											"end": 7761,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7744,
											"end": 7761,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7744,
											"end": 7761,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7744,
											"end": 7761,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7744,
											"end": 7761,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7744,
											"end": 7761,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7744,
											"end": 7761,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7744,
											"end": 7783,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7744,
											"end": 7783,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7744,
											"end": 7783,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7744,
											"end": 7783,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7442,
											"end": 7808,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7262,
											"end": 7808,
											"name": "tag",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 7262,
											"end": 7808,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7836,
											"end": 7837,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7822,
											"end": 7838,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7822,
											"end": 7838,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7822,
											"end": 7824,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7822,
											"end": 7838,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7822,
											"end": 7838,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7822,
											"end": 7838,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7818,
											"end": 8247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 7818,
											"end": 8247,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8003,
											"end": 8008,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7985,
											"end": 7986,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7985,
											"end": 7999,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 7985,
											"end": 7999,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7985,
											"end": 7999,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7985,
											"end": 8008,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7985,
											"end": 8008,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7985,
											"end": 8008,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7985,
											"end": 8008,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7985,
											"end": 8008,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7985,
											"end": 8008,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7985,
											"end": 8008,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7985,
											"end": 8008,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7985,
											"end": 8008,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7985,
											"end": 8008,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7985,
											"end": 8008,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7818,
											"end": 8247,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 7818,
											"end": 8247,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7818,
											"end": 8247,
											"name": "tag",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 7818,
											"end": 8247,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8217,
											"end": 8222,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8198,
											"end": 8199,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8198,
											"end": 8209,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8198,
											"end": 8209,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8198,
											"end": 8213,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8210,
											"end": 8212,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 8198,
											"end": 8213,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8198,
											"end": 8213,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8198,
											"end": 8213,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8198,
											"end": 8213,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8198,
											"end": 8213,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8198,
											"end": 8213,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8198,
											"end": 8213,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8198,
											"end": 8213,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8198,
											"end": 8213,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8198,
											"end": 8213,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8198,
											"end": 8213,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8198,
											"end": 8213,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8198,
											"end": 8213,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8198,
											"end": 8213,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8198,
											"end": 8213,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8198,
											"end": 8213,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8198,
											"end": 8222,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8198,
											"end": 8222,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8198,
											"end": 8222,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8198,
											"end": 8222,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8198,
											"end": 8222,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 8198,
											"end": 8222,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8198,
											"end": 8222,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8198,
											"end": 8222,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8198,
											"end": 8222,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8198,
											"end": 8222,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 8198,
											"end": 8222,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7818,
											"end": 8247,
											"name": "tag",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 7818,
											"end": 8247,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8277,
											"end": 8279,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8262,
											"end": 8287,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8262,
											"end": 8287,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8271,
											"end": 8275,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8262,
											"end": 8287,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8262,
											"end": 8287,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8262,
											"end": 8287,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8281,
											"end": 8286,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8262,
											"end": 8287,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8262,
											"end": 8287,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8262,
											"end": 8287,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 8262,
											"end": 8287,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8262,
											"end": 8287,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8262,
											"end": 8287,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 8262,
											"end": 8287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8262,
											"end": 8287,
											"name": "tag",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 8262,
											"end": 8287,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8262,
											"end": 8287,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8262,
											"end": 8287,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8262,
											"end": 8287,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8262,
											"end": 8287,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8262,
											"end": 8287,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8262,
											"end": 8287,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8262,
											"end": 8287,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 7199,
											"end": 8294,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7124,
											"end": 8294,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7124,
											"end": 8294,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7124,
											"end": 8294,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7124,
											"end": 8294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8819,
											"end": 8941,
											"name": "tag",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 8819,
											"end": 8941,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8887,
											"end": 8894,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3147,
											"end": 3213,
											"name": "PUSH",
											"source": 1,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 8913,
											"end": 8934,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8913,
											"end": 8934,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 8906,
											"end": 8934,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8906,
											"end": 8934,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8819,
											"end": 8941,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8819,
											"end": 8941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7082,
											"end": 7223,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 7082,
											"end": 7223,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7149,
											"end": 7166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 7149,
											"end": 7164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 7149,
											"end": 7166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7149,
											"end": 7166,
											"name": "tag",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 7149,
											"end": 7166,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7144,
											"end": 7217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 7144,
											"end": 7217,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "PUSH",
											"source": 1,
											"value": "D7E6BCF800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7189,
											"end": 7206,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7144,
											"end": 7217,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 7144,
											"end": 7217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7082,
											"end": 7223,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2416,
											"end": 2632,
											"name": "tag",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 2416,
											"end": 2632,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 6929,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 6929,
											"end": 6949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "tag",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2528,
											"end": 2550,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2553,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 2553,
											"end": 2569,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 2553,
											"end": 2571,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2553,
											"end": 2571,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "235"
										},
										{
											"begin": 2553,
											"end": 2571,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2528,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2528,
											"end": 2571,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2591,
											"end": 2596,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2581,
											"end": 2582,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2581,
											"end": 2588,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2581,
											"end": 2588,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2581,
											"end": 2596,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2581,
											"end": 2596,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2581,
											"end": 2596,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 2581,
											"end": 2596,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2581,
											"end": 2596,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2581,
											"end": 2596,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 2581,
											"end": 2596,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2581,
											"end": 2596,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "236"
										},
										{
											"begin": 2581,
											"end": 2596,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2581,
											"end": 2596,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2618,
											"end": 2625,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2606,
											"end": 2607,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2606,
											"end": 2615,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2606,
											"end": 2615,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2606,
											"end": 2625,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2606,
											"end": 2625,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2606,
											"end": 2625,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 2606,
											"end": 2625,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2606,
											"end": 2625,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2606,
											"end": 2625,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 2606,
											"end": 2625,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2606,
											"end": 2625,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 2606,
											"end": 2625,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2606,
											"end": 2625,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2632,
											"modifierDepth": 1,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2416,
											"end": 2632,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2416,
											"end": 2632,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2416,
											"end": 2632,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 6929,
											"end": 6947,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 6929,
											"end": 6949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 6929,
											"end": 6949,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2088,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2076,
											"end": 2102,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2076,
											"end": 2102,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2154,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2125,
											"end": 2156,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2125,
											"end": 2156,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 2072,
											"end": 2167,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 2195,
											"end": 2207,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2194,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2176,
											"end": 2208,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 2176,
											"end": 2208,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1980,
											"end": 2215,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1980,
											"end": 2215,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8485,
											"end": 8605,
											"name": "tag",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 8485,
											"end": 8605,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8535,
											"end": 8539,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8558,
											"end": 8584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 8558,
											"end": 8582,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 8558,
											"end": 8584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8584,
											"name": "tag",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 8558,
											"end": 8584,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "PUSH",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 8558,
											"end": 8598,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8551,
											"end": 8598,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8551,
											"end": 8598,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8485,
											"end": 8605,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8485,
											"end": 8605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 8
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 8,
											"value": "304"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "248"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 8,
											"value": "305"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "249"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 8,
											"value": "306"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 8,
											"value": "307"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "251"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 8,
											"value": "309"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1242,
											"end": 1317,
											"name": "tag",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 1242,
											"end": 1317,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1275,
											"end": 1281,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1308,
											"end": 1310,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1302,
											"end": 1311,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1292,
											"end": 1311,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1292,
											"end": 1311,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1242,
											"end": 1317,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1242,
											"end": 1317,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1446,
											"end": 1563,
											"name": "tag",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 1446,
											"end": 1563,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1555,
											"end": 1556,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1552,
											"end": 1553,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1545,
											"end": 1557,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "255"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 8,
											"value": "315"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 8,
											"value": "317"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 8,
											"value": "318"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "257"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 8,
											"value": "320"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 8,
											"value": "323"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "260"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 8,
											"value": "326"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 8,
											"value": "27"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 8,
											"value": "329"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 8,
											"value": "328"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 8,
											"value": "330"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 8,
											"value": "331"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "262"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 8,
											"value": "334"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 8,
											"value": "30"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "263"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 8,
											"value": "336"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 8,
											"value": "338"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 8,
											"value": "34"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 8,
											"value": "340"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "tag",
											"source": 8,
											"value": "37"
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 3804,
											"end": 3836,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 3839,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "tag",
											"source": 8,
											"value": "343"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "tag",
											"source": 8,
											"value": "342"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 4029,
											"end": 4036,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4020,
											"end": 4026,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4009,
											"end": 4018,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4005,
											"end": 4027,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 3984,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "tag",
											"source": 8,
											"value": "344"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3930,
											"end": 4047,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4086,
											"end": 4088,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4148,
											"end": 4154,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4137,
											"end": 4146,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 4112,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "tag",
											"source": 8,
											"value": "345"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4057,
											"end": 4175,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 4285,
											"end": 4292,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4265,
											"end": 4274,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "261"
										},
										{
											"begin": 4240,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "tag",
											"source": 8,
											"value": "346"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4185,
											"end": 4303,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 3691,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "tag",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4351,
											"end": 4358,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4391,
											"end": 4395,
											"name": "PUSH",
											"source": 8,
											"value": "FF"
										},
										{
											"begin": 4384,
											"end": 4389,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4380,
											"end": 4396,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4316,
											"end": 4402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "tag",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 4507,
											"end": 4512,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "265"
										},
										{
											"begin": 4491,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "tag",
											"source": 8,
											"value": "349"
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4486,
											"end": 4489,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4479,
											"end": 4514,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4408,
											"end": 4520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "tag",
											"source": 8,
											"value": "43"
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4615,
											"end": 4619,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4655,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 4642,
											"end": 4651,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 4730,
											"end": 4731,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4719,
											"end": 4728,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 4715,
											"end": 4732,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 4706,
											"end": 4712,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "266"
										},
										{
											"begin": 4666,
											"end": 4733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "tag",
											"source": 8,
											"value": "351"
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 4526,
											"end": 4740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4746,
											"end": 4863,
											"name": "tag",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 4746,
											"end": 4863,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4855,
											"end": 4856,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4852,
											"end": 4853,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4845,
											"end": 4857,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4869,
											"end": 4986,
											"name": "tag",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 4869,
											"end": 4986,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 4978,
											"end": 4979,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4975,
											"end": 4976,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 4968,
											"end": 4980,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4992,
											"end": 5172,
											"name": "tag",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 4992,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5040,
											"end": 5117,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5037,
											"end": 5038,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5030,
											"end": 5118,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5137,
											"end": 5141,
											"name": "PUSH",
											"source": 8,
											"value": "41"
										},
										{
											"begin": 5134,
											"end": 5135,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 5127,
											"end": 5142,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5161,
											"end": 5165,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 5158,
											"end": 5159,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5151,
											"end": 5166,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 5178,
											"end": 5459,
											"name": "tag",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 5178,
											"end": 5459,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5261,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 5283,
											"end": 5287,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5261,
											"end": 5288,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 5261,
											"end": 5288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5261,
											"end": 5288,
											"name": "tag",
											"source": 8,
											"value": "356"
										},
										{
											"begin": 5261,
											"end": 5288,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5253,
											"end": 5259,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5249,
											"end": 5289,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5391,
											"end": 5397,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5379,
											"end": 5389,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5376,
											"end": 5398,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 5355,
											"end": 5373,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5343,
											"end": 5353,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5340,
											"end": 5374,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5337,
											"end": 5399,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 5334,
											"end": 5422,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5334,
											"end": 5422,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "357"
										},
										{
											"begin": 5334,
											"end": 5422,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5402,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "358"
										},
										{
											"begin": 5402,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 5402,
											"end": 5420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5402,
											"end": 5420,
											"name": "tag",
											"source": 8,
											"value": "358"
										},
										{
											"begin": 5402,
											"end": 5420,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5334,
											"end": 5422,
											"name": "tag",
											"source": 8,
											"value": "357"
										},
										{
											"begin": 5334,
											"end": 5422,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5442,
											"end": 5452,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 5438,
											"end": 5440,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 5431,
											"end": 5453,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5221,
											"end": 5459,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5178,
											"end": 5459,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5178,
											"end": 5459,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5178,
											"end": 5459,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5465,
											"end": 5594,
											"name": "tag",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 5465,
											"end": 5594,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5499,
											"end": 5505,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5526,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 5526,
											"end": 5546,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "252"
										},
										{
											"begin": 5526,
											"end": 5546,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5526,
											"end": 5546,
											"name": "tag",
											"source": 8,
											"value": "360"
										},
										{
											"begin": 5526,
											"end": 5546,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5516,
											"end": 5546,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5516,
											"end": 5546,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5555,
											"end": 5588,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 5583,
											"end": 5587,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5575,
											"end": 5581,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5555,
											"end": 5588,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "270"
										},
										{
											"begin": 5555,
											"end": 5588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5555,
											"end": 5588,
											"name": "tag",
											"source": 8,
											"value": "361"
										},
										{
											"begin": 5555,
											"end": 5588,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5465,
											"end": 5594,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5465,
											"end": 5594,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5465,
											"end": 5594,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5465,
											"end": 5594,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5600,
											"end": 5908,
											"name": "tag",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 5600,
											"end": 5908,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5662,
											"end": 5666,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 5752,
											"end": 5770,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5744,
											"end": 5750,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5741,
											"end": 5771,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 5738,
											"end": 5794,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 5738,
											"end": 5794,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "363"
										},
										{
											"begin": 5738,
											"end": 5794,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 5774,
											"end": 5792,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 5774,
											"end": 5792,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 5774,
											"end": 5792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5774,
											"end": 5792,
											"name": "tag",
											"source": 8,
											"value": "364"
										},
										{
											"begin": 5774,
											"end": 5792,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5738,
											"end": 5794,
											"name": "tag",
											"source": 8,
											"value": "363"
										},
										{
											"begin": 5738,
											"end": 5794,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5812,
											"end": 5841,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "365"
										},
										{
											"begin": 5834,
											"end": 5840,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 5812,
											"end": 5841,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "250"
										},
										{
											"begin": 5812,
											"end": 5841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5812,
											"end": 5841,
											"name": "tag",
											"source": 8,
											"value": "365"
										},
										{
											"begin": 5812,
											"end": 5841,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 5804,
											"end": 5841,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5804,
											"end": 5841,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5896,
											"end": 5900,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 5890,
											"end": 5894,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 5886,
											"end": 5901,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 5878,
											"end": 5901,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5878,
											"end": 5901,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5600,
											"end": 5908,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 5600,
											"end": 5908,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 5600,
											"end": 5908,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5600,
											"end": 5908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 5914,
											"end": 6062,
											"name": "tag",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 5914,
											"end": 6062,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6012,
											"end": 6018,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6007,
											"end": 6010,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6002,
											"end": 6005,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 5989,
											"end": 6019,
											"name": "CALLDATACOPY",
											"source": 8
										},
										{
											"begin": 6053,
											"end": 6054,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6044,
											"end": 6050,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6039,
											"end": 6042,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6035,
											"end": 6051,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6028,
											"end": 6055,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 5914,
											"end": 6062,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5914,
											"end": 6062,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5914,
											"end": 6062,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 5914,
											"end": 6062,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6068,
											"end": 6493,
											"name": "tag",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 6068,
											"end": 6493,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6146,
											"end": 6151,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6171,
											"end": 6237,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 6187,
											"end": 6236,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 6229,
											"end": 6235,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6187,
											"end": 6236,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "272"
										},
										{
											"begin": 6187,
											"end": 6236,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6187,
											"end": 6236,
											"name": "tag",
											"source": 8,
											"value": "369"
										},
										{
											"begin": 6187,
											"end": 6236,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6171,
											"end": 6237,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "271"
										},
										{
											"begin": 6171,
											"end": 6237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6171,
											"end": 6237,
											"name": "tag",
											"source": 8,
											"value": "368"
										},
										{
											"begin": 6171,
											"end": 6237,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6162,
											"end": 6237,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6162,
											"end": 6237,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6260,
											"end": 6266,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6253,
											"end": 6258,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6246,
											"end": 6267,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6298,
											"end": 6302,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6291,
											"end": 6296,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6287,
											"end": 6303,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6336,
											"end": 6339,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6327,
											"end": 6333,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6322,
											"end": 6325,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6318,
											"end": 6334,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6315,
											"end": 6340,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 6312,
											"end": 6424,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6312,
											"end": 6424,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 6312,
											"end": 6424,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6343,
											"end": 6422,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "371"
										},
										{
											"begin": 6343,
											"end": 6422,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "268"
										},
										{
											"begin": 6343,
											"end": 6422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6343,
											"end": 6422,
											"name": "tag",
											"source": 8,
											"value": "371"
										},
										{
											"begin": 6343,
											"end": 6422,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6312,
											"end": 6424,
											"name": "tag",
											"source": 8,
											"value": "370"
										},
										{
											"begin": 6312,
											"end": 6424,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6433,
											"end": 6487,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 6480,
											"end": 6486,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6475,
											"end": 6478,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6470,
											"end": 6473,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6433,
											"end": 6487,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "273"
										},
										{
											"begin": 6433,
											"end": 6487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6433,
											"end": 6487,
											"name": "tag",
											"source": 8,
											"value": "372"
										},
										{
											"begin": 6433,
											"end": 6487,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6152,
											"end": 6493,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6068,
											"end": 6493,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 6068,
											"end": 6493,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6068,
											"end": 6493,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6068,
											"end": 6493,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6068,
											"end": 6493,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6068,
											"end": 6493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6513,
											"end": 6853,
											"name": "tag",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 6513,
											"end": 6853,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6569,
											"end": 6574,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6618,
											"end": 6621,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6611,
											"end": 6615,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 6603,
											"end": 6609,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6599,
											"end": 6616,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6595,
											"end": 6622,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 6585,
											"end": 6707,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 6585,
											"end": 6707,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6626,
											"end": 6705,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 6626,
											"end": 6705,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "267"
										},
										{
											"begin": 6626,
											"end": 6705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6626,
											"end": 6705,
											"name": "tag",
											"source": 8,
											"value": "375"
										},
										{
											"begin": 6626,
											"end": 6705,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6585,
											"end": 6707,
											"name": "tag",
											"source": 8,
											"value": "374"
										},
										{
											"begin": 6585,
											"end": 6707,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6743,
											"end": 6749,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6730,
											"end": 6750,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 6768,
											"end": 6847,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "376"
										},
										{
											"begin": 6843,
											"end": 6846,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 6835,
											"end": 6841,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 6828,
											"end": 6832,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 6820,
											"end": 6826,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 6816,
											"end": 6833,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6768,
											"end": 6847,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "274"
										},
										{
											"begin": 6768,
											"end": 6847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6768,
											"end": 6847,
											"name": "tag",
											"source": 8,
											"value": "376"
										},
										{
											"begin": 6768,
											"end": 6847,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6759,
											"end": 6847,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6759,
											"end": 6847,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6575,
											"end": 6853,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6513,
											"end": 6853,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6513,
											"end": 6853,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6513,
											"end": 6853,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6513,
											"end": 6853,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6513,
											"end": 6853,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 6859,
											"end": 7693,
											"name": "tag",
											"source": 8,
											"value": "49"
										},
										{
											"begin": 6859,
											"end": 7693,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6947,
											"end": 6953,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 6955,
											"end": 6961,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7004,
											"end": 7006,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6992,
											"end": 7001,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 6983,
											"end": 6990,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 6979,
											"end": 7002,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6975,
											"end": 7007,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 6972,
											"end": 7091,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6972,
											"end": 7091,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 6972,
											"end": 7091,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7010,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 7010,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 7010,
											"end": 7089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7010,
											"end": 7089,
											"name": "tag",
											"source": 8,
											"value": "379"
										},
										{
											"begin": 7010,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6972,
											"end": 7091,
											"name": "tag",
											"source": 8,
											"value": "378"
										},
										{
											"begin": 6972,
											"end": 7091,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7158,
											"end": 7159,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7147,
											"end": 7156,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7143,
											"end": 7160,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7130,
											"end": 7161,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 7188,
											"end": 7206,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7180,
											"end": 7186,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7177,
											"end": 7207,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 7174,
											"end": 7291,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7174,
											"end": 7291,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 7174,
											"end": 7291,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7210,
											"end": 7289,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 7210,
											"end": 7289,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 7210,
											"end": 7289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7210,
											"end": 7289,
											"name": "tag",
											"source": 8,
											"value": "381"
										},
										{
											"begin": 7210,
											"end": 7289,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7174,
											"end": 7291,
											"name": "tag",
											"source": 8,
											"value": "380"
										},
										{
											"begin": 7174,
											"end": 7291,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7315,
											"end": 7378,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 7370,
											"end": 7377,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7361,
											"end": 7367,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7350,
											"end": 7359,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 7346,
											"end": 7368,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7315,
											"end": 7378,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 7315,
											"end": 7378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7315,
											"end": 7378,
											"name": "tag",
											"source": 8,
											"value": "382"
										},
										{
											"begin": 7315,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7305,
											"end": 7378,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7305,
											"end": 7378,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7101,
											"end": 7388,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7455,
											"end": 7457,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7444,
											"end": 7453,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 7440,
											"end": 7458,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7427,
											"end": 7459,
											"name": "CALLDATALOAD",
											"source": 8
										},
										{
											"begin": 7486,
											"end": 7504,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7478,
											"end": 7484,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 7475,
											"end": 7505,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 7472,
											"end": 7589,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7472,
											"end": 7589,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 7472,
											"end": 7589,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7508,
											"end": 7587,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 7508,
											"end": 7587,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "254"
										},
										{
											"begin": 7508,
											"end": 7587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7508,
											"end": 7587,
											"name": "tag",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 7508,
											"end": 7587,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7472,
											"end": 7589,
											"name": "tag",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 7472,
											"end": 7589,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7613,
											"end": 7676,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 7668,
											"end": 7675,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7659,
											"end": 7665,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7648,
											"end": 7657,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 7644,
											"end": 7666,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7613,
											"end": 7676,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "275"
										},
										{
											"begin": 7613,
											"end": 7676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7613,
											"end": 7676,
											"name": "tag",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 7613,
											"end": 7676,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7603,
											"end": 7676,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7603,
											"end": 7676,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7398,
											"end": 7686,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6859,
											"end": 7693,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6859,
											"end": 7693,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6859,
											"end": 7693,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 6859,
											"end": 7693,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6859,
											"end": 7693,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 6859,
											"end": 7693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7699,
											"end": 8028,
											"name": "tag",
											"source": 8,
											"value": "53"
										},
										{
											"begin": 7699,
											"end": 8028,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7758,
											"end": 7764,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7807,
											"end": 7809,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 7795,
											"end": 7804,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7786,
											"end": 7793,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7782,
											"end": 7805,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 7778,
											"end": 7810,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 7775,
											"end": 7894,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 7775,
											"end": 7894,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 7775,
											"end": 7894,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 7813,
											"end": 7892,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 7813,
											"end": 7892,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 7813,
											"end": 7892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7813,
											"end": 7892,
											"name": "tag",
											"source": 8,
											"value": "388"
										},
										{
											"begin": 7813,
											"end": 7892,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7775,
											"end": 7894,
											"name": "tag",
											"source": 8,
											"value": "387"
										},
										{
											"begin": 7775,
											"end": 7894,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7933,
											"end": 7934,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 7958,
											"end": 8011,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 8003,
											"end": 8010,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 7994,
											"end": 8000,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 7983,
											"end": 7992,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 7979,
											"end": 8001,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 7958,
											"end": 8011,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 7958,
											"end": 8011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 7958,
											"end": 8011,
											"name": "tag",
											"source": 8,
											"value": "389"
										},
										{
											"begin": 7958,
											"end": 8011,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 7948,
											"end": 8011,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7948,
											"end": 8011,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7904,
											"end": 8021,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7699,
											"end": 8028,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 7699,
											"end": 8028,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 7699,
											"end": 8028,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7699,
											"end": 8028,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 7699,
											"end": 8028,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8034,
											"end": 8152,
											"name": "tag",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 8034,
											"end": 8152,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8121,
											"end": 8145,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 8139,
											"end": 8144,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8121,
											"end": 8145,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "256"
										},
										{
											"begin": 8121,
											"end": 8145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8121,
											"end": 8145,
											"name": "tag",
											"source": 8,
											"value": "391"
										},
										{
											"begin": 8121,
											"end": 8145,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8116,
											"end": 8119,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8109,
											"end": 8146,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 8034,
											"end": 8152,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8034,
											"end": 8152,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8034,
											"end": 8152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8158,
											"end": 8380,
											"name": "tag",
											"source": 8,
											"value": "61"
										},
										{
											"begin": 8158,
											"end": 8380,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8251,
											"end": 8255,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8289,
											"end": 8291,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8278,
											"end": 8287,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8274,
											"end": 8292,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8266,
											"end": 8292,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8266,
											"end": 8292,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8302,
											"end": 8373,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 8370,
											"end": 8371,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8359,
											"end": 8368,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8355,
											"end": 8372,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8346,
											"end": 8352,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8302,
											"end": 8373,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 8302,
											"end": 8373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8302,
											"end": 8373,
											"name": "tag",
											"source": 8,
											"value": "393"
										},
										{
											"begin": 8302,
											"end": 8373,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8158,
											"end": 8380,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8158,
											"end": 8380,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8158,
											"end": 8380,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8158,
											"end": 8380,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8158,
											"end": 8380,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8386,
											"end": 8860,
											"name": "tag",
											"source": 8,
											"value": "74"
										},
										{
											"begin": 8386,
											"end": 8860,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8454,
											"end": 8460,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8462,
											"end": 8468,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8511,
											"end": 8513,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8499,
											"end": 8508,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 8490,
											"end": 8497,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8486,
											"end": 8509,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 8482,
											"end": 8514,
											"name": "SLT",
											"source": 8
										},
										{
											"begin": 8479,
											"end": 8598,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8479,
											"end": 8598,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 8479,
											"end": 8598,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8517,
											"end": 8596,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "396"
										},
										{
											"begin": 8517,
											"end": 8596,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "253"
										},
										{
											"begin": 8517,
											"end": 8596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8517,
											"end": 8596,
											"name": "tag",
											"source": 8,
											"value": "396"
										},
										{
											"begin": 8517,
											"end": 8596,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8479,
											"end": 8598,
											"name": "tag",
											"source": 8,
											"value": "395"
										},
										{
											"begin": 8479,
											"end": 8598,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8637,
											"end": 8638,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8662,
											"end": 8715,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 8707,
											"end": 8714,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8698,
											"end": 8704,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8687,
											"end": 8696,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 8683,
											"end": 8705,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8662,
											"end": 8715,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 8662,
											"end": 8715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8662,
											"end": 8715,
											"name": "tag",
											"source": 8,
											"value": "397"
										},
										{
											"begin": 8662,
											"end": 8715,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8652,
											"end": 8715,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8652,
											"end": 8715,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8608,
											"end": 8725,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8764,
											"end": 8766,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8790,
											"end": 8843,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 8835,
											"end": 8842,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 8826,
											"end": 8832,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8815,
											"end": 8824,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 8811,
											"end": 8833,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8790,
											"end": 8843,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "258"
										},
										{
											"begin": 8790,
											"end": 8843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8790,
											"end": 8843,
											"name": "tag",
											"source": 8,
											"value": "398"
										},
										{
											"begin": 8790,
											"end": 8843,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8780,
											"end": 8843,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8780,
											"end": 8843,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8735,
											"end": 8853,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8386,
											"end": 8860,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8386,
											"end": 8860,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8386,
											"end": 8860,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8386,
											"end": 8860,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 8386,
											"end": 8860,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8386,
											"end": 8860,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8866,
											"end": 9046,
											"name": "tag",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 8866,
											"end": 9046,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8914,
											"end": 8991,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8911,
											"end": 8912,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8904,
											"end": 8992,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9011,
											"end": 9015,
											"name": "PUSH",
											"source": 8,
											"value": "22"
										},
										{
											"begin": 9008,
											"end": 9009,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 9001,
											"end": 9016,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9035,
											"end": 9039,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 9032,
											"end": 9033,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9025,
											"end": 9040,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 9052,
											"end": 9372,
											"name": "tag",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 9052,
											"end": 9372,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9096,
											"end": 9102,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9133,
											"end": 9134,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 9127,
											"end": 9131,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9123,
											"end": 9135,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 9113,
											"end": 9135,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9113,
											"end": 9135,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9180,
											"end": 9181,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 9174,
											"end": 9178,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9170,
											"end": 9182,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9201,
											"end": 9219,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9191,
											"end": 9272,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 9191,
											"end": 9272,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9257,
											"end": 9261,
											"name": "PUSH",
											"source": 8,
											"value": "7F"
										},
										{
											"begin": 9249,
											"end": 9255,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9245,
											"end": 9262,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9235,
											"end": 9262,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9235,
											"end": 9262,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9191,
											"end": 9272,
											"name": "tag",
											"source": 8,
											"value": "401"
										},
										{
											"begin": 9191,
											"end": 9272,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9319,
											"end": 9321,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 9311,
											"end": 9317,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9308,
											"end": 9322,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 9288,
											"end": 9306,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9285,
											"end": 9323,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9282,
											"end": 9366,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "402"
										},
										{
											"begin": 9282,
											"end": 9366,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9338,
											"end": 9356,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 9338,
											"end": 9356,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "277"
										},
										{
											"begin": 9338,
											"end": 9356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9338,
											"end": 9356,
											"name": "tag",
											"source": 8,
											"value": "403"
										},
										{
											"begin": 9338,
											"end": 9356,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9282,
											"end": 9366,
											"name": "tag",
											"source": 8,
											"value": "402"
										},
										{
											"begin": 9282,
											"end": 9366,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9103,
											"end": 9372,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9052,
											"end": 9372,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9052,
											"end": 9372,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9052,
											"end": 9372,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9052,
											"end": 9372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9378,
											"end": 9463,
											"name": "tag",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 9378,
											"end": 9463,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9423,
											"end": 9430,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9452,
											"end": 9457,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9441,
											"end": 9457,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9441,
											"end": 9457,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9378,
											"end": 9463,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9378,
											"end": 9463,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9378,
											"end": 9463,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9378,
											"end": 9463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9469,
											"end": 9570,
											"name": "tag",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 9469,
											"end": 9570,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9505,
											"end": 9512,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9545,
											"end": 9563,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9538,
											"end": 9543,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9534,
											"end": 9564,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 9523,
											"end": 9564,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9523,
											"end": 9564,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9469,
											"end": 9570,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9469,
											"end": 9570,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9469,
											"end": 9570,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9469,
											"end": 9570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9576,
											"end": 9636,
											"name": "tag",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 9576,
											"end": 9636,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9604,
											"end": 9607,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9625,
											"end": 9630,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9618,
											"end": 9630,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9618,
											"end": 9630,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9576,
											"end": 9636,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9576,
											"end": 9636,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9576,
											"end": 9636,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9576,
											"end": 9636,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9642,
											"end": 9798,
											"name": "tag",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 9642,
											"end": 9798,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9699,
											"end": 9708,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 9732,
											"end": 9792,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 9749,
											"end": 9791,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 9758,
											"end": 9790,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 9784,
											"end": 9789,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 9758,
											"end": 9790,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "278"
										},
										{
											"begin": 9758,
											"end": 9790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9758,
											"end": 9790,
											"name": "tag",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 9758,
											"end": 9790,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9749,
											"end": 9791,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 9749,
											"end": 9791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9749,
											"end": 9791,
											"name": "tag",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 9749,
											"end": 9791,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9732,
											"end": 9792,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "279"
										},
										{
											"begin": 9732,
											"end": 9792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9732,
											"end": 9792,
											"name": "tag",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 9732,
											"end": 9792,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9719,
											"end": 9792,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9719,
											"end": 9792,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9642,
											"end": 9798,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9642,
											"end": 9798,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9642,
											"end": 9798,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9642,
											"end": 9798,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9804,
											"end": 9949,
											"name": "tag",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 9804,
											"end": 9949,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9898,
											"end": 9942,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 9936,
											"end": 9941,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9898,
											"end": 9942,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "281"
										},
										{
											"begin": 9898,
											"end": 9942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9898,
											"end": 9942,
											"name": "tag",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 9898,
											"end": 9942,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9893,
											"end": 9896,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 9886,
											"end": 9943,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9804,
											"end": 9949,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9804,
											"end": 9949,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9804,
											"end": 9949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9955,
											"end": 10191,
											"name": "tag",
											"source": 8,
											"value": "124"
										},
										{
											"begin": 9955,
											"end": 10191,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10055,
											"end": 10059,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10093,
											"end": 10095,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10082,
											"end": 10091,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10078,
											"end": 10096,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10070,
											"end": 10096,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10070,
											"end": 10096,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10106,
											"end": 10184,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "414"
										},
										{
											"begin": 10181,
											"end": 10182,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10170,
											"end": 10179,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10166,
											"end": 10183,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10157,
											"end": 10163,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10106,
											"end": 10184,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "282"
										},
										{
											"begin": 10106,
											"end": 10184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10106,
											"end": 10184,
											"name": "tag",
											"source": 8,
											"value": "414"
										},
										{
											"begin": 10106,
											"end": 10184,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9955,
											"end": 10191,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 9955,
											"end": 10191,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9955,
											"end": 10191,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9955,
											"end": 10191,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 9955,
											"end": 10191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10197,
											"end": 10639,
											"name": "tag",
											"source": 8,
											"value": "168"
										},
										{
											"begin": 10197,
											"end": 10639,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10346,
											"end": 10350,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10384,
											"end": 10386,
											"name": "PUSH",
											"source": 8,
											"value": "60"
										},
										{
											"begin": 10373,
											"end": 10382,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10369,
											"end": 10387,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10361,
											"end": 10387,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10361,
											"end": 10387,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10397,
											"end": 10468,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 10465,
											"end": 10466,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10454,
											"end": 10463,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10450,
											"end": 10467,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10441,
											"end": 10447,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 10397,
											"end": 10468,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "276"
										},
										{
											"begin": 10397,
											"end": 10468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10397,
											"end": 10468,
											"name": "tag",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 10397,
											"end": 10468,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10478,
											"end": 10550,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 10546,
											"end": 10548,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 10535,
											"end": 10544,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10531,
											"end": 10549,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10522,
											"end": 10528,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 10478,
											"end": 10550,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 10478,
											"end": 10550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10478,
											"end": 10550,
											"name": "tag",
											"source": 8,
											"value": "417"
										},
										{
											"begin": 10478,
											"end": 10550,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10560,
											"end": 10632,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "418"
										},
										{
											"begin": 10628,
											"end": 10630,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 10617,
											"end": 10626,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10613,
											"end": 10631,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10604,
											"end": 10610,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 10560,
											"end": 10632,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "264"
										},
										{
											"begin": 10560,
											"end": 10632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10560,
											"end": 10632,
											"name": "tag",
											"source": 8,
											"value": "418"
										},
										{
											"begin": 10560,
											"end": 10632,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10197,
											"end": 10639,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 10197,
											"end": 10639,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 10197,
											"end": 10639,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10197,
											"end": 10639,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10197,
											"end": 10639,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10197,
											"end": 10639,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10197,
											"end": 10639,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10645,
											"end": 10825,
											"name": "tag",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 10645,
											"end": 10825,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10693,
											"end": 10770,
											"name": "PUSH",
											"source": 8,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10690,
											"end": 10691,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10683,
											"end": 10771,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10790,
											"end": 10794,
											"name": "PUSH",
											"source": 8,
											"value": "11"
										},
										{
											"begin": 10787,
											"end": 10788,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 10780,
											"end": 10795,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 10814,
											"end": 10818,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 10811,
											"end": 10812,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10804,
											"end": 10819,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 10831,
											"end": 11022,
											"name": "tag",
											"source": 8,
											"value": "220"
										},
										{
											"begin": 10831,
											"end": 11022,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10871,
											"end": 10874,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 10890,
											"end": 10910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "421"
										},
										{
											"begin": 10908,
											"end": 10909,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10890,
											"end": 10910,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 10890,
											"end": 10910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10890,
											"end": 10910,
											"name": "tag",
											"source": 8,
											"value": "421"
										},
										{
											"begin": 10890,
											"end": 10910,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10885,
											"end": 10910,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10885,
											"end": 10910,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10924,
											"end": 10944,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 10942,
											"end": 10943,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 10924,
											"end": 10944,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 10924,
											"end": 10944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10924,
											"end": 10944,
											"name": "tag",
											"source": 8,
											"value": "422"
										},
										{
											"begin": 10924,
											"end": 10944,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10919,
											"end": 10944,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10919,
											"end": 10944,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10967,
											"end": 10968,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10964,
											"end": 10965,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10960,
											"end": 10969,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 10953,
											"end": 10969,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 10953,
											"end": 10969,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10988,
											"end": 10991,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 10985,
											"end": 10986,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 10982,
											"end": 10992,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 10979,
											"end": 11015,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 10979,
											"end": 11015,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "423"
										},
										{
											"begin": 10979,
											"end": 11015,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 10995,
											"end": 11013,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 10995,
											"end": 11013,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "283"
										},
										{
											"begin": 10995,
											"end": 11013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 10995,
											"end": 11013,
											"name": "tag",
											"source": 8,
											"value": "424"
										},
										{
											"begin": 10995,
											"end": 11013,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10979,
											"end": 11015,
											"name": "tag",
											"source": 8,
											"value": "423"
										},
										{
											"begin": 10979,
											"end": 11015,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 10831,
											"end": 11022,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 10831,
											"end": 11022,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 10831,
											"end": 11022,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10831,
											"end": 11022,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 10831,
											"end": 11022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11028,
											"end": 11169,
											"name": "tag",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 11028,
											"end": 11169,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11077,
											"end": 11081,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11100,
											"end": 11103,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11092,
											"end": 11103,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11092,
											"end": 11103,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11123,
											"end": 11126,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11120,
											"end": 11121,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11113,
											"end": 11127,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 11157,
											"end": 11161,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11154,
											"end": 11155,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11144,
											"end": 11162,
											"name": "KECCAK256",
											"source": 8
										},
										{
											"begin": 11136,
											"end": 11162,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11136,
											"end": 11162,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11028,
											"end": 11169,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11028,
											"end": 11169,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11028,
											"end": 11169,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11028,
											"end": 11169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11175,
											"end": 11268,
											"name": "tag",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 11175,
											"end": 11268,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11212,
											"end": 11218,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11259,
											"end": 11261,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 11254,
											"end": 11256,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 11247,
											"end": 11252,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11243,
											"end": 11257,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 11239,
											"end": 11262,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 11229,
											"end": 11262,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11229,
											"end": 11262,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11175,
											"end": 11268,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11175,
											"end": 11268,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11175,
											"end": 11268,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11175,
											"end": 11268,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11274,
											"end": 11381,
											"name": "tag",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 11274,
											"end": 11381,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11318,
											"end": 11326,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11368,
											"end": 11373,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11362,
											"end": 11366,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11358,
											"end": 11374,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 11337,
											"end": 11374,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11337,
											"end": 11374,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11274,
											"end": 11381,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11274,
											"end": 11381,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11274,
											"end": 11381,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11274,
											"end": 11381,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11274,
											"end": 11381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11387,
											"end": 11780,
											"name": "tag",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 11387,
											"end": 11780,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11456,
											"end": 11462,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11506,
											"end": 11507,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 11494,
											"end": 11504,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11490,
											"end": 11508,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 11529,
											"end": 11626,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 11559,
											"end": 11625,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11548,
											"end": 11557,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 11529,
											"end": 11626,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 11529,
											"end": 11626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11529,
											"end": 11626,
											"name": "tag",
											"source": 8,
											"value": "429"
										},
										{
											"begin": 11529,
											"end": 11626,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11647,
											"end": 11686,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 11677,
											"end": 11685,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 11666,
											"end": 11675,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 11647,
											"end": 11686,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "286"
										},
										{
											"begin": 11647,
											"end": 11686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11647,
											"end": 11686,
											"name": "tag",
											"source": 8,
											"value": "430"
										},
										{
											"begin": 11647,
											"end": 11686,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11635,
											"end": 11686,
											"name": "SWAP6",
											"source": 8
										},
										{
											"begin": 11635,
											"end": 11686,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11719,
											"end": 11723,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11715,
											"end": 11724,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 11708,
											"end": 11713,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11704,
											"end": 11725,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 11695,
											"end": 11725,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 11695,
											"end": 11725,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11768,
											"end": 11772,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 11758,
											"end": 11766,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 11754,
											"end": 11773,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 11747,
											"end": 11752,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11744,
											"end": 11774,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 11734,
											"end": 11774,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11734,
											"end": 11774,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11463,
											"end": 11780,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11463,
											"end": 11780,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11387,
											"end": 11780,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 11387,
											"end": 11780,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 11387,
											"end": 11780,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11387,
											"end": 11780,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11387,
											"end": 11780,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11387,
											"end": 11780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11786,
											"end": 11928,
											"name": "tag",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 11786,
											"end": 11928,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11836,
											"end": 11845,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11869,
											"end": 11922,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 11887,
											"end": 11921,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 11896,
											"end": 11920,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 11914,
											"end": 11919,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 11896,
											"end": 11920,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 11896,
											"end": 11920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11896,
											"end": 11920,
											"name": "tag",
											"source": 8,
											"value": "434"
										},
										{
											"begin": 11896,
											"end": 11920,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11887,
											"end": 11921,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "280"
										},
										{
											"begin": 11887,
											"end": 11921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11887,
											"end": 11921,
											"name": "tag",
											"source": 8,
											"value": "433"
										},
										{
											"begin": 11887,
											"end": 11921,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11869,
											"end": 11922,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "259"
										},
										{
											"begin": 11869,
											"end": 11922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11869,
											"end": 11922,
											"name": "tag",
											"source": 8,
											"value": "432"
										},
										{
											"begin": 11869,
											"end": 11922,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11856,
											"end": 11922,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11856,
											"end": 11922,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11786,
											"end": 11928,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11786,
											"end": 11928,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11786,
											"end": 11928,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11786,
											"end": 11928,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 11934,
											"end": 12009,
											"name": "tag",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 11934,
											"end": 12009,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11977,
											"end": 11980,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 11998,
											"end": 12003,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 11991,
											"end": 12003,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11991,
											"end": 12003,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11934,
											"end": 12009,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 11934,
											"end": 12009,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 11934,
											"end": 12009,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 11934,
											"end": 12009,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12015,
											"end": 12284,
											"name": "tag",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 12015,
											"end": 12284,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12125,
											"end": 12164,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 12156,
											"end": 12163,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 12125,
											"end": 12164,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "288"
										},
										{
											"begin": 12125,
											"end": 12164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12125,
											"end": 12164,
											"name": "tag",
											"source": 8,
											"value": "437"
										},
										{
											"begin": 12125,
											"end": 12164,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12186,
											"end": 12277,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 12235,
											"end": 12276,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "439"
										},
										{
											"begin": 12259,
											"end": 12275,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12235,
											"end": 12276,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "289"
										},
										{
											"begin": 12235,
											"end": 12276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12235,
											"end": 12276,
											"name": "tag",
											"source": 8,
											"value": "439"
										},
										{
											"begin": 12235,
											"end": 12276,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12227,
											"end": 12233,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 12220,
											"end": 12224,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 12214,
											"end": 12225,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 12186,
											"end": 12277,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "287"
										},
										{
											"begin": 12186,
											"end": 12277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12186,
											"end": 12277,
											"name": "tag",
											"source": 8,
											"value": "438"
										},
										{
											"begin": 12186,
											"end": 12277,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12180,
											"end": 12184,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12173,
											"end": 12278,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 12091,
											"end": 12284,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12015,
											"end": 12284,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12015,
											"end": 12284,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12015,
											"end": 12284,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12015,
											"end": 12284,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12290,
											"end": 12363,
											"name": "tag",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 12290,
											"end": 12363,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12335,
											"end": 12338,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12356,
											"end": 12357,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12349,
											"end": 12357,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12349,
											"end": 12357,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12290,
											"end": 12363,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12290,
											"end": 12363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12369,
											"end": 12558,
											"name": "tag",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 12369,
											"end": 12558,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12446,
											"end": 12478,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 12446,
											"end": 12478,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "291"
										},
										{
											"begin": 12446,
											"end": 12478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12446,
											"end": 12478,
											"name": "tag",
											"source": 8,
											"value": "442"
										},
										{
											"begin": 12446,
											"end": 12478,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12487,
											"end": 12552,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "443"
										},
										{
											"begin": 12545,
											"end": 12551,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12537,
											"end": 12543,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 12531,
											"end": 12535,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 12487,
											"end": 12552,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "290"
										},
										{
											"begin": 12487,
											"end": 12552,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12487,
											"end": 12552,
											"name": "tag",
											"source": 8,
											"value": "443"
										},
										{
											"begin": 12487,
											"end": 12552,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12422,
											"end": 12558,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12369,
											"end": 12558,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12369,
											"end": 12558,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12369,
											"end": 12558,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12564,
											"end": 12750,
											"name": "tag",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 12564,
											"end": 12750,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12624,
											"end": 12744,
											"name": "tag",
											"source": 8,
											"value": "445"
										},
										{
											"begin": 12624,
											"end": 12744,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12641,
											"end": 12644,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12634,
											"end": 12639,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12631,
											"end": 12645,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 12624,
											"end": 12744,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12624,
											"end": 12744,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "447"
										},
										{
											"begin": 12624,
											"end": 12744,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12695,
											"end": 12734,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "448"
										},
										{
											"begin": 12732,
											"end": 12733,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 12725,
											"end": 12730,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12695,
											"end": 12734,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "292"
										},
										{
											"begin": 12695,
											"end": 12734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12695,
											"end": 12734,
											"name": "tag",
											"source": 8,
											"value": "448"
										},
										{
											"begin": 12695,
											"end": 12734,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12668,
											"end": 12669,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 12661,
											"end": 12666,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12657,
											"end": 12670,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 12648,
											"end": 12670,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 12648,
											"end": 12670,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12624,
											"end": 12744,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "445"
										},
										{
											"begin": 12624,
											"end": 12744,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12624,
											"end": 12744,
											"name": "tag",
											"source": 8,
											"value": "447"
										},
										{
											"begin": 12624,
											"end": 12744,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12564,
											"end": 12750,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12564,
											"end": 12750,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12564,
											"end": 12750,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12756,
											"end": 13299,
											"name": "tag",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 12756,
											"end": 13299,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12857,
											"end": 12859,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 12852,
											"end": 12855,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 12849,
											"end": 12860,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 12846,
											"end": 13292,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 12846,
											"end": 13292,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "450"
										},
										{
											"begin": 12846,
											"end": 13292,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 12891,
											"end": 12929,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "451"
										},
										{
											"begin": 12923,
											"end": 12928,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12891,
											"end": 12929,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 12891,
											"end": 12929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12891,
											"end": 12929,
											"name": "tag",
											"source": 8,
											"value": "451"
										},
										{
											"begin": 12891,
											"end": 12929,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12975,
											"end": 13004,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "452"
										},
										{
											"begin": 12993,
											"end": 13003,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 12975,
											"end": 13004,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 12975,
											"end": 13004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 12975,
											"end": 13004,
											"name": "tag",
											"source": 8,
											"value": "452"
										},
										{
											"begin": 12975,
											"end": 13004,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12965,
											"end": 12973,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 12961,
											"end": 13005,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13158,
											"end": 13160,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 13146,
											"end": 13156,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 13143,
											"end": 13161,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 13140,
											"end": 13189,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 13140,
											"end": 13189,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "453"
										},
										{
											"begin": 13140,
											"end": 13189,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 13179,
											"end": 13187,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 13164,
											"end": 13187,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13164,
											"end": 13187,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13140,
											"end": 13189,
											"name": "tag",
											"source": 8,
											"value": "453"
										},
										{
											"begin": 13140,
											"end": 13189,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13202,
											"end": 13282,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "454"
										},
										{
											"begin": 13258,
											"end": 13280,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "455"
										},
										{
											"begin": 13276,
											"end": 13279,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 13258,
											"end": 13280,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "285"
										},
										{
											"begin": 13258,
											"end": 13280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13258,
											"end": 13280,
											"name": "tag",
											"source": 8,
											"value": "455"
										},
										{
											"begin": 13258,
											"end": 13280,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13248,
											"end": 13256,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13244,
											"end": 13281,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 13231,
											"end": 13242,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13202,
											"end": 13282,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "293"
										},
										{
											"begin": 13202,
											"end": 13282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13202,
											"end": 13282,
											"name": "tag",
											"source": 8,
											"value": "454"
										},
										{
											"begin": 13202,
											"end": 13282,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12861,
											"end": 13292,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12861,
											"end": 13292,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12846,
											"end": 13292,
											"name": "tag",
											"source": 8,
											"value": "450"
										},
										{
											"begin": 12846,
											"end": 13292,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12756,
											"end": 13299,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12756,
											"end": 13299,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12756,
											"end": 13299,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 12756,
											"end": 13299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13305,
											"end": 13422,
											"name": "tag",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 13305,
											"end": 13422,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13359,
											"end": 13367,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13409,
											"end": 13414,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13403,
											"end": 13407,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13399,
											"end": 13415,
											"name": "SHR",
											"source": 8
										},
										{
											"begin": 13378,
											"end": 13415,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13378,
											"end": 13415,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13305,
											"end": 13422,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 13305,
											"end": 13422,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13305,
											"end": 13422,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13305,
											"end": 13422,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13305,
											"end": 13422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13428,
											"end": 13597,
											"name": "tag",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 13428,
											"end": 13597,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13472,
											"end": 13478,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13505,
											"end": 13556,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "458"
										},
										{
											"begin": 13553,
											"end": 13554,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13549,
											"end": 13555,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 13541,
											"end": 13546,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 13538,
											"end": 13539,
											"name": "PUSH",
											"source": 8,
											"value": "8"
										},
										{
											"begin": 13534,
											"end": 13547,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 13505,
											"end": 13556,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "295"
										},
										{
											"begin": 13505,
											"end": 13556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13505,
											"end": 13556,
											"name": "tag",
											"source": 8,
											"value": "458"
										},
										{
											"begin": 13505,
											"end": 13556,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13501,
											"end": 13557,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 13586,
											"end": 13590,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 13580,
											"end": 13584,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13576,
											"end": 13591,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 13566,
											"end": 13591,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13566,
											"end": 13591,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13479,
											"end": 13597,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13428,
											"end": 13597,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 13428,
											"end": 13597,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13428,
											"end": 13597,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13428,
											"end": 13597,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13428,
											"end": 13597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13602,
											"end": 13897,
											"name": "tag",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 13602,
											"end": 13897,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13678,
											"end": 13682,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 13824,
											"end": 13853,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "460"
										},
										{
											"begin": 13849,
											"end": 13852,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13843,
											"end": 13847,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 13824,
											"end": 13853,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 13824,
											"end": 13853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13824,
											"end": 13853,
											"name": "tag",
											"source": 8,
											"value": "460"
										},
										{
											"begin": 13824,
											"end": 13853,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13816,
											"end": 13853,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13816,
											"end": 13853,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13886,
											"end": 13889,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13883,
											"end": 13884,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 13879,
											"end": 13890,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 13873,
											"end": 13877,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 13870,
											"end": 13891,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 13862,
											"end": 13891,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 13862,
											"end": 13891,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13602,
											"end": 13897,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 13602,
											"end": 13897,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 13602,
											"end": 13897,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13602,
											"end": 13897,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13602,
											"end": 13897,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 13902,
											"end": 15297,
											"name": "tag",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 13902,
											"end": 15297,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14019,
											"end": 14056,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "462"
										},
										{
											"begin": 14052,
											"end": 14055,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14019,
											"end": 14056,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "247"
										},
										{
											"begin": 14019,
											"end": 14056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14019,
											"end": 14056,
											"name": "tag",
											"source": 8,
											"value": "462"
										},
										{
											"begin": 14019,
											"end": 14056,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14121,
											"end": 14139,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14113,
											"end": 14119,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14110,
											"end": 14140,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 14107,
											"end": 14163,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 14107,
											"end": 14163,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "463"
										},
										{
											"begin": 14107,
											"end": 14163,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 14143,
											"end": 14161,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "464"
										},
										{
											"begin": 14143,
											"end": 14161,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 14143,
											"end": 14161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14143,
											"end": 14161,
											"name": "tag",
											"source": 8,
											"value": "464"
										},
										{
											"begin": 14143,
											"end": 14161,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14107,
											"end": 14163,
											"name": "tag",
											"source": 8,
											"value": "463"
										},
										{
											"begin": 14107,
											"end": 14163,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14187,
											"end": 14225,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 14219,
											"end": 14223,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14213,
											"end": 14224,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 14187,
											"end": 14225,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "84"
										},
										{
											"begin": 14187,
											"end": 14225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14187,
											"end": 14225,
											"name": "tag",
											"source": 8,
											"value": "465"
										},
										{
											"begin": 14187,
											"end": 14225,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14272,
											"end": 14339,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "466"
										},
										{
											"begin": 14332,
											"end": 14338,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14324,
											"end": 14330,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14318,
											"end": 14322,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 14272,
											"end": 14339,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "294"
										},
										{
											"begin": 14272,
											"end": 14339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14272,
											"end": 14339,
											"name": "tag",
											"source": 8,
											"value": "466"
										},
										{
											"begin": 14272,
											"end": 14339,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14366,
											"end": 14367,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14390,
											"end": 14394,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14377,
											"end": 14394,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14377,
											"end": 14394,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14422,
											"end": 14424,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 14414,
											"end": 14420,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14411,
											"end": 14425,
											"name": "GT",
											"source": 8
										},
										{
											"begin": 14439,
											"end": 14440,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 14434,
											"end": 15052,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14434,
											"end": 15052,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 14434,
											"end": 15052,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "468"
										},
										{
											"begin": 14434,
											"end": 15052,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 15096,
											"end": 15097,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 15113,
											"end": 15119,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 15110,
											"end": 15187,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 15110,
											"end": 15187,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "469"
										},
										{
											"begin": 15110,
											"end": 15187,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 15162,
											"end": 15171,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15157,
											"end": 15160,
											"name": "DUP8",
											"source": 8
										},
										{
											"begin": 15153,
											"end": 15172,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15147,
											"end": 15173,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 15138,
											"end": 15173,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 15138,
											"end": 15173,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 15110,
											"end": 15187,
											"name": "tag",
											"source": 8,
											"value": "469"
										},
										{
											"begin": 15110,
											"end": 15187,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15213,
											"end": 15280,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "470"
										},
										{
											"begin": 15273,
											"end": 15279,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 15266,
											"end": 15271,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 15213,
											"end": 15280,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "297"
										},
										{
											"begin": 15213,
											"end": 15280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 15213,
											"end": 15280,
											"name": "tag",
											"source": 8,
											"value": "470"
										},
										{
											"begin": 15213,
											"end": 15280,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15207,
											"end": 15211,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 15200,
											"end": 15281,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 15069,
											"end": 15291,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14404,
											"end": 15291,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "467"
										},
										{
											"begin": 14404,
											"end": 15291,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14434,
											"end": 15052,
											"name": "tag",
											"source": 8,
											"value": "468"
										},
										{
											"begin": 14434,
											"end": 15052,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14486,
											"end": 14490,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 14482,
											"end": 14491,
											"name": "NOT",
											"source": 8
										},
										{
											"begin": 14474,
											"end": 14480,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 14470,
											"end": 14492,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 14520,
											"end": 14557,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "471"
										},
										{
											"begin": 14552,
											"end": 14556,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 14520,
											"end": 14557,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "284"
										},
										{
											"begin": 14520,
											"end": 14557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14520,
											"end": 14557,
											"name": "tag",
											"source": 8,
											"value": "471"
										},
										{
											"begin": 14520,
											"end": 14557,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14579,
											"end": 14580,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 14593,
											"end": 14801,
											"name": "tag",
											"source": 8,
											"value": "472"
										},
										{
											"begin": 14593,
											"end": 14801,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14607,
											"end": 14614,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14604,
											"end": 14605,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14601,
											"end": 14615,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 14593,
											"end": 14801,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 14593,
											"end": 14801,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "474"
										},
										{
											"begin": 14593,
											"end": 14801,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 14686,
											"end": 14695,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 14681,
											"end": 14684,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 14677,
											"end": 14696,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14671,
											"end": 14697,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 14663,
											"end": 14669,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14656,
											"end": 14698,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 14737,
											"end": 14738,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 14729,
											"end": 14735,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14725,
											"end": 14739,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14715,
											"end": 14739,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 14715,
											"end": 14739,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14784,
											"end": 14786,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14773,
											"end": 14782,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 14769,
											"end": 14787,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14756,
											"end": 14787,
											"name": "SWAP5",
											"source": 8
										},
										{
											"begin": 14756,
											"end": 14787,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14630,
											"end": 14634,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 14627,
											"end": 14628,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 14623,
											"end": 14635,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14618,
											"end": 14635,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 14618,
											"end": 14635,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14593,
											"end": 14801,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "472"
										},
										{
											"begin": 14593,
											"end": 14801,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14593,
											"end": 14801,
											"name": "tag",
											"source": 8,
											"value": "474"
										},
										{
											"begin": 14593,
											"end": 14801,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14829,
											"end": 14835,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 14820,
											"end": 14827,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14817,
											"end": 14836,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 14814,
											"end": 14993,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 14814,
											"end": 14993,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "475"
										},
										{
											"begin": 14814,
											"end": 14993,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 14887,
											"end": 14896,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 14882,
											"end": 14885,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 14878,
											"end": 14897,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 14872,
											"end": 14898,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 14930,
											"end": 14978,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "476"
										},
										{
											"begin": 14972,
											"end": 14976,
											"name": "PUSH",
											"source": 8,
											"value": "1F"
										},
										{
											"begin": 14964,
											"end": 14970,
											"name": "DUP10",
											"source": 8
										},
										{
											"begin": 14960,
											"end": 14977,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 14949,
											"end": 14958,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 14930,
											"end": 14978,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "296"
										},
										{
											"begin": 14930,
											"end": 14978,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 14930,
											"end": 14978,
											"name": "tag",
											"source": 8,
											"value": "476"
										},
										{
											"begin": 14930,
											"end": 14978,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14922,
											"end": 14928,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 14915,
											"end": 14979,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 14837,
											"end": 14993,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14814,
											"end": 14993,
											"name": "tag",
											"source": 8,
											"value": "475"
										},
										{
											"begin": 14814,
											"end": 14993,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15039,
											"end": 15040,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 15035,
											"end": 15036,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 15027,
											"end": 15033,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 15023,
											"end": 15037,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 15019,
											"end": 15041,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 15013,
											"end": 15017,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 15006,
											"end": 15042,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 14441,
											"end": 15052,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14441,
											"end": 15052,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14441,
											"end": 15052,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 14404,
											"end": 15291,
											"name": "tag",
											"source": 8,
											"value": "467"
										},
										{
											"begin": 14404,
											"end": 15291,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14404,
											"end": 15291,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13994,
											"end": 15297,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13994,
											"end": 15297,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13994,
											"end": 15297,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13902,
											"end": 15297,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13902,
											"end": 15297,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 13902,
											"end": 15297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"Token.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address,uint256)": "9dc29fac",
							"decimals()": "313ce567",
							"initialize(string,string)": "4cd88b76",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"A simple upgradeable ERC20 token contract with mint and burn functionality\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"burn(address,uint256)\":{\"details\":\"Burns tokens from a specified address\",\"params\":{\"amount\":\"The amount of tokens to burn (in wei units)\",\"to\":\"The address from which tokens will be burned\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"initialize(string,string)\":{\"details\":\"Initializes the token contract with name and symbol\",\"params\":{\"name\":\"The name of the token (e.g., \\\"MyToken\\\")\",\"symbol\":\"The symbol of the token (e.g., \\\"MTK\\\")\"}},\"mint(address,uint256)\":{\"details\":\"Mints new tokens to a specified address\",\"params\":{\"amount\":\"The amount of tokens to mint (in wei units)\",\"to\":\"The address that will receive the newly minted tokens\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Token\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(address,uint256)\":{\"notice\":\"Only the contract owner can call this functionThis decreases the total supply of tokensThe address must have sufficient balance for the burn to succeed\"},\"initialize(string,string)\":{\"notice\":\"This function replaces the constructor in upgradeable contractsCan only be called once due to the initializer modifier\"},\"mint(address,uint256)\":{\"notice\":\"Only the contract owner can call this functionThis increases the total supply of tokens\"}},\"notice\":\"This contract inherits from OpenZeppelin's upgradeable contracts to support proxy patterns\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"Token.sol\":\"Token\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0xdb4d24ee2c087c391d587cd17adfe5b3f9d93b3110b1388c2ab6c7c0ad1dcd05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab7b6d5b9e2b88176312967fe0f0e78f3d9a1422fa5e4b64e2440c35869b5d08\",\"dweb:/ipfs/QmXKYWWyzcLg1B2k7Sb1qkEXgLCYfXecR9wYW5obRzWP1Q\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xfcd09c2aa8cc3f93e12545454359f901965db312bc03833daf84de0c03e05022\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://07701188648d2ab83dab1037808298585264559bddf243bd8929037adcb984b0\",\"dweb:/ipfs/QmavmG5REdHCAWsZ8Cag26BCxAq27DRKGxr3uBg5ZYxQ51\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x19fdfb0f3b89a230e7dbd1cf416f1a6b531a3ee5db4da483f946320fc74afc0e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3490d794728f5bfecb46820431adaff71ba374141545ec20b650bb60353fac23\",\"dweb:/ipfs/QmPsfxjVpMcZbpE7BH93DzTpEaktESigEw4SmDzkXuJ4WR\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"Token.sol\":{\"keccak256\":\"0x9b5c7eef73cfc9849683b4b0060af53d1a11c86b93ff7fd93c49de1feeb59b98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3064cbc7d8a85d5e5500bf21a8ba3bac37dd5f05001cebe3640f18f603c50055\",\"dweb:/ipfs/QmVXmD5e9Q78JRVsHDkVEHMR6Fg9U1uiKdD1H2ei7HerJg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"burn(address,uint256)": {
								"notice": "Only the contract owner can call this functionThis decreases the total supply of tokensThe address must have sufficient balance for the burn to succeed"
							},
							"initialize(string,string)": {
								"notice": "This function replaces the constructor in upgradeable contractsCan only be called once due to the initializer modifier"
							},
							"mint(address,uint256)": {
								"notice": "Only the contract owner can call this functionThis increases the total supply of tokens"
							}
						},
						"notice": "This contract inherits from OpenZeppelin's upgradeable contracts to support proxy patterns",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1125
						],
						"Initializable": [
							462
						],
						"OwnableUpgradeable": [
							194
						]
					},
					"id": 195,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 1126,
							"src": "128:67:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1125,
										"src": "136:18:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 195,
							"sourceUnit": 463,
							"src": "196:63:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 462,
										"src": "204:13:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "Initializable",
										"nameLocations": [
											"789:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 462,
										"src": "789:13:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "789:13:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"804:18:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1125,
										"src": "804:18:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "804:18:0"
								}
							],
							"canonicalName": "OwnableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "261:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 194,
							"linearizedBaseContracts": [
								194,
								1125,
								462
							],
							"name": "OwnableUpgradeable",
							"nameLocation": "767:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "OwnableUpgradeable.OwnableStorage",
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "829:65:0",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.Ownable"
									},
									"id": 14,
									"members": [
										{
											"constant": false,
											"id": 13,
											"mutability": "mutable",
											"name": "_owner",
											"nameLocation": "939:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 14,
											"src": "931:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 12,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "931:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "OwnableStorage",
									"nameLocation": "906:14:0",
									"nodeType": "StructDefinition",
									"scope": 194,
									"src": "899:53:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 17,
									"mutability": "constant",
									"name": "OwnableStorageLocation",
									"nameLocation": "1094:22:0",
									"nodeType": "VariableDeclaration",
									"scope": 194,
									"src": "1069:116:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 15,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1069:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307839303136643039643732643430666461653266643863656163366236323334633737303632313466643339633163643165363039613035323863313939333030",
										"id": 16,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1119:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_65173360639460082030725920392146925864023520599682862633725751242436743107328_by_1",
											"typeString": "int_const 6517...(69 digits omitted)...7328"
										},
										"value": "0x9016d09d72d40fdae2fd8ceac6b6234c7706214fd39c1cd1e609a0528c199300"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "1270:81:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1289:56:0",
													"nodeType": "YulBlock",
													"src": "1289:56:0",
													"statements": [
														{
															"nativeSrc": "1303:32:0",
															"nodeType": "YulAssignment",
															"src": "1303:32:0",
															"value": {
																"name": "OwnableStorageLocation",
																"nativeSrc": "1313:22:0",
																"nodeType": "YulIdentifier",
																"src": "1313:22:0"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "1303:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "1303:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 21,
														"isOffset": false,
														"isSlot": true,
														"src": "1303:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 17,
														"isOffset": false,
														"isSlot": false,
														"src": "1313:22:0",
														"valueSize": 1
													}
												],
												"id": 23,
												"nodeType": "InlineAssembly",
												"src": "1280:65:0"
											}
										]
									},
									"id": 25,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getOwnableStorage",
									"nameLocation": "1201:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1219:2:0"
									},
									"returnParameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 21,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "1267:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "1244:24:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
													"typeString": "struct OwnableUpgradeable.OwnableStorage"
												},
												"typeName": {
													"id": 20,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 19,
														"name": "OwnableStorage",
														"nameLocations": [
															"1244:14:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 14,
														"src": "1244:14:0"
													},
													"referencedDeclaration": 14,
													"src": "1244:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1243:26:0"
									},
									"scope": 194,
									"src": "1192:159:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 26,
										"nodeType": "StructuredDocumentation",
										"src": "1357:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 30,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "1453:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1488:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1480:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 27,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1480:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1479:17:0"
									},
									"src": "1447:50:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1503:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 35,
									"name": "OwnableInvalidOwner",
									"nameLocation": "1596:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1624:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1616:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1616:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1615:15:0"
									},
									"src": "1590:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 41,
									"name": "OwnershipTransferred",
									"nameLocation": "1643:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1680:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1664:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1664:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1711:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1695:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 38,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1695:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1663:57:0"
									},
									"src": "1637:84:0"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1919:55:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 50,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "1954:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 49,
														"name": "__Ownable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 81,
														"src": "1929:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1929:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1929:38:0"
											}
										]
									},
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "1727:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 47,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 46,
												"name": "onlyInitializing",
												"nameLocations": [
													"1902:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "1902:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1902:16:0"
										}
									],
									"name": "__Ownable_init",
									"nameLocation": "1856:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1879:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1871:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1871:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1870:22:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1919:0:0"
									},
									"scope": 194,
									"src": "1847:127:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "2062:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 66,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 61,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "2076:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 64,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2100:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2092:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 62,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2092:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 65,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2092:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2076:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 75,
												"nodeType": "IfStatement",
												"src": "2072:95:0",
												"trueBody": {
													"id": 74,
													"nodeType": "Block",
													"src": "2104:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 70,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2153:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 69,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2145:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 68,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2145:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 71,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2145:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 67,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "2125:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 72,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2125:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 73,
															"nodeType": "RevertStatement",
															"src": "2118:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 77,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 56,
															"src": "2195:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 76,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "2176:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2176:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 79,
												"nodeType": "ExpressionStatement",
												"src": "2176:32:0"
											}
										]
									},
									"id": 81,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 59,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 58,
												"name": "onlyInitializing",
												"nameLocations": [
													"2045:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2045:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2045:16:0"
										}
									],
									"name": "__Ownable_init_unchained",
									"nameLocation": "1989:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "2022:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 81,
												"src": "2014:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2014:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2013:22:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2062:0:0"
									},
									"scope": 194,
									"src": "1980:235:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "2324:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 84,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "2334:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2334:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "2334:13:0"
											},
											{
												"id": 87,
												"nodeType": "PlaceholderStatement",
												"src": "2357:1:0"
											}
										]
									},
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "2221:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 89,
									"name": "onlyOwner",
									"nameLocation": "2312:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2321:2:0"
									},
									"src": "2303:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 104,
										"nodeType": "Block",
										"src": "2496:89:0",
										"statements": [
											{
												"assignments": [
													97
												],
												"declarations": [
													{
														"constant": false,
														"id": 97,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2529:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 104,
														"src": "2506:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 96,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 95,
																"name": "OwnableStorage",
																"nameLocations": [
																	"2506:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "2506:14:0"
															},
															"referencedDeclaration": 14,
															"src": "2506:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 98,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "2533:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2533:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:47:0"
											},
											{
												"expression": {
													"expression": {
														"id": 101,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 97,
														"src": "2570:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 102,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2572:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "2570:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 94,
												"id": 103,
												"nodeType": "Return",
												"src": "2563:15:0"
											}
										]
									},
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "2371:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 105,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "2450:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2455:2:0"
									},
									"returnParameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 105,
												"src": "2487:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2487:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2486:9:0"
									},
									"scope": 194,
									"src": "2441:144:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 121,
										"nodeType": "Block",
										"src": "2703:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 109,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 105,
															"src": "2717:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2717:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 111,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1107,
															"src": "2728:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2728:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2717:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2713:101:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2742:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 115,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1107,
																			"src": "2790:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2790:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 114,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 30,
																	"src": "2763:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2763:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2756:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 106,
										"nodeType": "StructuredDocumentation",
										"src": "2591:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "2667:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2678:2:0"
									},
									"returnParameters": {
										"id": 108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2703:0:0"
									},
									"scope": 194,
									"src": "2658:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 135,
										"nodeType": "Block",
										"src": "3209:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3246:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 130,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3238:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 129,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3238:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3238:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 128,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3219:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 133,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3219:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 134,
												"nodeType": "ExpressionStatement",
												"src": "3219:30:0"
											}
										]
									},
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "2826:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 136,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 126,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 125,
												"name": "onlyOwner",
												"nameLocations": [
													"3199:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3199:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3199:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "3164:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3181:2:0"
									},
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3209:0:0"
									},
									"scope": 194,
									"src": "3155:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 163,
										"nodeType": "Block",
										"src": "3475:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 144,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 139,
														"src": "3489:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3509:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 146,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3501:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 145,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3501:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 148,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3501:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3489:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 158,
												"nodeType": "IfStatement",
												"src": "3485:91:0",
												"trueBody": {
													"id": 157,
													"nodeType": "Block",
													"src": "3513:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 153,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3562:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 152,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3554:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 151,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3554:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 154,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3554:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 150,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "3534:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 155,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 156,
															"nodeType": "RevertStatement",
															"src": "3527:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 160,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 139,
															"src": "3604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 159,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 193,
														"src": "3585:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3585:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "3585:28:0"
											}
										]
									},
									"documentation": {
										"id": 137,
										"nodeType": "StructuredDocumentation",
										"src": "3262:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 164,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 142,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 141,
												"name": "onlyOwner",
												"nameLocations": [
													"3465:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "3465:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3465:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "3414:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3440:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "3432:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3432:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3431:18:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3475:0:0"
									},
									"scope": 194,
									"src": "3405:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 192,
										"nodeType": "Block",
										"src": "3837:185:0",
										"statements": [
											{
												"assignments": [
													172
												],
												"declarations": [
													{
														"constant": false,
														"id": 172,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3870:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "3847:24:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage"
														},
														"typeName": {
															"id": 171,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 170,
																"name": "OwnableStorage",
																"nameLocations": [
																	"3847:14:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 14,
																"src": "3847:14:0"
															},
															"referencedDeclaration": 14,
															"src": "3847:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 175,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 173,
														"name": "_getOwnableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "3874:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_OwnableStorage_$14_storage_ptr_$",
															"typeString": "function () pure returns (struct OwnableUpgradeable.OwnableStorage storage pointer)"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3874:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
														"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3847:47:0"
											},
											{
												"assignments": [
													177
												],
												"declarations": [
													{
														"constant": false,
														"id": 177,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "3912:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 192,
														"src": "3904:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 176,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3904:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 180,
												"initialValue": {
													"expression": {
														"id": 178,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 172,
														"src": "3923:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
															"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
														}
													},
													"id": 179,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3925:6:0",
													"memberName": "_owner",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 13,
													"src": "3923:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3904:27:0"
											},
											{
												"expression": {
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 181,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "3941:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_OwnableStorage_$14_storage_ptr",
																"typeString": "struct OwnableUpgradeable.OwnableStorage storage pointer"
															}
														},
														"id": 183,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3943:6:0",
														"memberName": "_owner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 13,
														"src": "3941:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 184,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "3952:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3941:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "3941:19:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 188,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 177,
															"src": "3996:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 189,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 167,
															"src": "4006:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 187,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 41,
														"src": "3975:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3975:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 191,
												"nodeType": "EmitStatement",
												"src": "3970:45:0"
											}
										]
									},
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "3626:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 193,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3783:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3810:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 193,
												"src": "3802:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3802:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3801:18:0"
									},
									"returnParameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3837:0:0"
									},
									"scope": 194,
									"src": "3774:248:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 195,
							"src": "749:3275:0",
							"usedErrors": [
								30,
								35,
								211,
								214
							],
							"usedEvents": [
								41,
								219
							]
						}
					],
					"src": "102:3923:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							462
						]
					},
					"id": 463,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 196,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 197,
								"nodeType": "StructuredDocumentation",
								"src": "139:2209:1",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 462,
							"linearizedBaseContracts": [
								462
							],
							"name": "Initializable",
							"nameLocation": "2367:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Initializable.InitializableStorage",
									"documentation": {
										"id": 198,
										"nodeType": "StructuredDocumentation",
										"src": "2387:293:1",
										"text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
									},
									"id": 205,
									"members": [
										{
											"constant": false,
											"id": 201,
											"mutability": "mutable",
											"name": "_initialized",
											"nameLocation": "2820:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "2813:19:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 200,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2813:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 204,
											"mutability": "mutable",
											"name": "_initializing",
											"nameLocation": "2955:13:1",
											"nodeType": "VariableDeclaration",
											"scope": 205,
											"src": "2950:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 203,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2950:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitializableStorage",
									"nameLocation": "2692:20:1",
									"nodeType": "StructDefinition",
									"scope": 462,
									"src": "2685:290:1",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 208,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "3123:21:1",
									"nodeType": "VariableDeclaration",
									"scope": 462,
									"src": "3098:115:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 206,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3098:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 207,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3147:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "3220:60:1",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 211,
									"name": "InvalidInitialization",
									"nameLocation": "3291:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:2:1"
									},
									"src": "3285:30:1"
								},
								{
									"documentation": {
										"id": 212,
										"nodeType": "StructuredDocumentation",
										"src": "3321:57:1",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 214,
									"name": "NotInitializing",
									"nameLocation": "3389:15:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:2:1"
									},
									"src": "3383:24:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3413:90:1",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 219,
									"name": "Initialized",
									"nameLocation": "3514:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3533:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3526:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 216,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3526:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:16:1"
									},
									"src": "3508:34:1"
								},
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "4092:1079:1",
										"statements": [
											{
												"assignments": [
													224
												],
												"declarations": [
													{
														"constant": false,
														"id": 224,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4187:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4158:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 223,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 222,
																"name": "InitializableStorage",
																"nameLocations": [
																	"4158:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "4158:20:1"
															},
															"referencedDeclaration": 205,
															"src": "4158:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 227,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 225,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "4191:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4191:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4158:59:1"
											},
											{
												"assignments": [
													229
												],
												"declarations": [
													{
														"constant": false,
														"id": 229,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4284:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4279:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 228,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4279:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 233,
												"initialValue": {
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4301:16:1",
													"subExpression": {
														"expression": {
															"id": 230,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4302:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 231,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4304:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "4302:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:38:1"
											},
											{
												"assignments": [
													235
												],
												"declarations": [
													{
														"constant": false,
														"id": 235,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4334:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4327:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 234,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4327:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 238,
												"initialValue": {
													"expression": {
														"id": 236,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "4348:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 237,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4350:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 201,
													"src": "4348:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4327:35:1"
											},
											{
												"assignments": [
													240
												],
												"declarations": [
													{
														"constant": false,
														"id": 240,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "4709:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4704:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 239,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4704:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 246,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 243,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 241,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4724:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4739:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4724:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 244,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 229,
														"src": "4744:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4724:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4704:54:1"
											},
											{
												"assignments": [
													248
												],
												"declarations": [
													{
														"constant": false,
														"id": 248,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "4773:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 301,
														"src": "4768:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 247,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4768:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 261,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 251,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 249,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "4788:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4803:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4788:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 259,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 254,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4816:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$462",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$462",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 253,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4808:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 252,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4808:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 255,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4808:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4822:4:1",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "4808:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4827:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4808:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4837:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4808:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4788:50:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4768:70:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4853:13:1",
														"subExpression": {
															"id": 262,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "4854:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 265,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4870:13:1",
														"subExpression": {
															"id": 264,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 248,
															"src": "4871:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4853:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 271,
												"nodeType": "IfStatement",
												"src": "4849:91:1",
												"trueBody": {
													"id": 270,
													"nodeType": "Block",
													"src": "4885:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 267,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "4906:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4906:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 269,
															"nodeType": "RevertStatement",
															"src": "4899:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 272,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 224,
															"src": "4949:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 274,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4951:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "4949:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 275,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4966:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4949:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 277,
												"nodeType": "ExpressionStatement",
												"src": "4949:18:1"
											},
											{
												"condition": {
													"id": 278,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "4981:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 286,
												"nodeType": "IfStatement",
												"src": "4977:67:1",
												"trueBody": {
													"id": 285,
													"nodeType": "Block",
													"src": "4997:47:1",
													"statements": [
														{
															"expression": {
																"id": 283,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 279,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "5011:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 281,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5013:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 204,
																	"src": "5011:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 282,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5029:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5011:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 284,
															"nodeType": "ExpressionStatement",
															"src": "5011:22:1"
														}
													]
												}
											},
											{
												"id": 287,
												"nodeType": "PlaceholderStatement",
												"src": "5053:1:1"
											},
											{
												"condition": {
													"id": 288,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 229,
													"src": "5068:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 300,
												"nodeType": "IfStatement",
												"src": "5064:101:1",
												"trueBody": {
													"id": 299,
													"nodeType": "Block",
													"src": "5084:81:1",
													"statements": [
														{
															"expression": {
																"id": 293,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 289,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 224,
																		"src": "5098:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 291,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5100:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 204,
																	"src": "5098:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 292,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5116:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5098:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 294,
															"nodeType": "ExpressionStatement",
															"src": "5098:23:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5152:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 295,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "5140:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 297,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5140:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 298,
															"nodeType": "EmitStatement",
															"src": "5135:19:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3548:516:1",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 302,
									"name": "initializer",
									"nameLocation": "4078:11:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:2:1"
									},
									"src": "4069:1102:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "6289:392:1",
										"statements": [
											{
												"assignments": [
													309
												],
												"declarations": [
													{
														"constant": false,
														"id": 309,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6384:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 348,
														"src": "6355:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 308,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 307,
																"name": "InitializableStorage",
																"nameLocations": [
																	"6355:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "6355:20:1"
															},
															"referencedDeclaration": 205,
															"src": "6355:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 312,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 310,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "6388:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6388:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6355:59:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 313,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6429:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 314,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6431:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6429:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 315,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "6448:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																	"typeString": "struct Initializable.InitializableStorage storage pointer"
																}
															},
															"id": 316,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6450:12:1",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 201,
															"src": "6448:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 317,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6466:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "6448:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6429:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 324,
												"nodeType": "IfStatement",
												"src": "6425:105:1",
												"trueBody": {
													"id": 323,
													"nodeType": "Block",
													"src": "6475:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 320,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "6496:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6496:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 322,
															"nodeType": "RevertStatement",
															"src": "6489:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 325,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6539:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 327,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6541:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "6539:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 328,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 305,
														"src": "6556:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6539:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 330,
												"nodeType": "ExpressionStatement",
												"src": "6539:24:1"
											},
											{
												"expression": {
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 331,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6573:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 333,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6575:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6573:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 334,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6591:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6573:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 336,
												"nodeType": "ExpressionStatement",
												"src": "6573:22:1"
											},
											{
												"id": 337,
												"nodeType": "PlaceholderStatement",
												"src": "6605:1:1"
											},
											{
												"expression": {
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 338,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "6616:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 340,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6618:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 204,
														"src": "6616:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 341,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6634:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6616:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 343,
												"nodeType": "ExpressionStatement",
												"src": "6616:23:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 345,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "6666:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 344,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 219,
														"src": "6654:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6654:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 347,
												"nodeType": "EmitStatement",
												"src": "6649:25:1"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "5177:1068:1",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 349,
									"name": "reinitializer",
									"nameLocation": "6259:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6280:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "6273:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 304,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6273:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6272:16:1"
									},
									"src": "6250:431:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "6919:48:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 352,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 370,
														"src": "6929:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6929:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 354,
												"nodeType": "ExpressionStatement",
												"src": "6929:20:1"
											},
											{
												"id": 355,
												"nodeType": "PlaceholderStatement",
												"src": "6959:1:1"
											}
										]
									},
									"documentation": {
										"id": 350,
										"nodeType": "StructuredDocumentation",
										"src": "6687:199:1",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 357,
									"name": "onlyInitializing",
									"nameLocation": "6900:16:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6916:2:1"
									},
									"src": "6891:76:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "7134:89:1",
										"statements": [
											{
												"condition": {
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7148:18:1",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 361,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 438,
															"src": "7149:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 362,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7149:17:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 368,
												"nodeType": "IfStatement",
												"src": "7144:73:1",
												"trueBody": {
													"id": 367,
													"nodeType": "Block",
													"src": "7168:49:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 364,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "7189:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7189:17:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 366,
															"nodeType": "RevertStatement",
															"src": "7182:24:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "6973:104:1",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "7091:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7109:2:1"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7134:0:1"
									},
									"scope": 462,
									"src": "7082:141:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 415,
										"nodeType": "Block",
										"src": "7758:373:1",
										"statements": [
											{
												"assignments": [
													376
												],
												"declarations": [
													{
														"constant": false,
														"id": 376,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7853:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 415,
														"src": "7824:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 375,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 374,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7824:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 205,
																"src": "7824:20:1"
															},
															"referencedDeclaration": 205,
															"src": "7824:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 379,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 377,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 461,
														"src": "7857:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7857:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7824:59:1"
											},
											{
												"condition": {
													"expression": {
														"id": 380,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 376,
														"src": "7898:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 381,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7900:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 204,
													"src": "7898:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 386,
												"nodeType": "IfStatement",
												"src": "7894:76:1",
												"trueBody": {
													"id": 385,
													"nodeType": "Block",
													"src": "7915:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 382,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "7936:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7936:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 384,
															"nodeType": "RevertStatement",
															"src": "7929:30:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 387,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "7983:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 388,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7985:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 201,
														"src": "7983:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8006:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 390,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "8006:6:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 389,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8001:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 392,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8001:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 393,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8014:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8001:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7983:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 414,
												"nodeType": "IfStatement",
												"src": "7979:146:1",
												"trueBody": {
													"id": 413,
													"nodeType": "Block",
													"src": "8019:106:1",
													"statements": [
														{
															"expression": {
																"id": 403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 395,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 376,
																		"src": "8033:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 397,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8035:12:1",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 201,
																	"src": "8033:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 400,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8055:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 399,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "8055:6:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 398,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8050:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8050:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8063:3:1",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8050:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "8033:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 404,
															"nodeType": "ExpressionStatement",
															"src": "8033:33:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 408,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8102:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 407,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "8102:6:1",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 406,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "8097:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 409,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8097:12:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8110:3:1",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "8097:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 405,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 219,
																	"src": "8085:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 411,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8085:29:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 412,
															"nodeType": "EmitStatement",
															"src": "8080:34:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "7229:475:1",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "7718:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7738:2:1"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7758:0:1"
									},
									"scope": 462,
									"src": "7709:422:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 426,
										"nodeType": "Block",
										"src": "8306:63:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 422,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "8323:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 423,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8323:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 424,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8350:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 201,
													"src": "8323:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 421,
												"id": 425,
												"nodeType": "Return",
												"src": "8316:46:1"
											}
										]
									},
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "8137:99:1",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 427,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "8250:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8272:2:1"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 427,
												"src": "8298:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 419,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8298:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8297:8:1"
									},
									"scope": 462,
									"src": "8241:128:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 437,
										"nodeType": "Block",
										"src": "8541:64:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 433,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "8558:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$205_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8558:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 435,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8585:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 204,
													"src": "8558:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 432,
												"id": 436,
												"nodeType": "Return",
												"src": "8551:47:1"
											}
										]
									},
									"documentation": {
										"id": 428,
										"nodeType": "StructuredDocumentation",
										"src": "8375:105:1",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "8494:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8509:2:1"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "8535:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 430,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8535:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8534:6:1"
									},
									"scope": 462,
									"src": "8485:120:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 446,
										"nodeType": "Block",
										"src": "8896:45:1",
										"statements": [
											{
												"expression": {
													"id": 444,
													"name": "INITIALIZABLE_STORAGE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 208,
													"src": "8913:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 443,
												"id": 445,
												"nodeType": "Return",
												"src": "8906:28:1"
											}
										]
									},
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "8611:203:1",
										"text": " @dev Pointer to storage slot. Allows integrators to override it with a custom storage location.\n NOTE: Consider following the ERC-7201 formula to derive storage locations."
									},
									"id": 447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_initializableStorageSlot",
									"nameLocation": "8828:25:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8853:2:1"
									},
									"returnParameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "8887:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 441,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8886:9:1"
									},
									"scope": 462,
									"src": "8819:122:1",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 460,
										"nodeType": "Block",
										"src": "9161:115:1",
										"statements": [
											{
												"assignments": [
													455
												],
												"declarations": [
													{
														"constant": false,
														"id": 455,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "9179:4:1",
														"nodeType": "VariableDeclaration",
														"scope": 460,
														"src": "9171:12:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 454,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "9171:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 458,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 456,
														"name": "_initializableStorageSlot",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 447,
														"src": "9186:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_bytes32_$",
															"typeString": "function () pure returns (bytes32)"
														}
													},
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9186:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9171:42:1"
											},
											{
												"AST": {
													"nativeSrc": "9232:38:1",
													"nodeType": "YulBlock",
													"src": "9232:38:1",
													"statements": [
														{
															"nativeSrc": "9246:14:1",
															"nodeType": "YulAssignment",
															"src": "9246:14:1",
															"value": {
																"name": "slot",
																"nativeSrc": "9256:4:1",
																"nodeType": "YulIdentifier",
																"src": "9256:4:1"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "9246:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9246:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 452,
														"isOffset": false,
														"isSlot": true,
														"src": "9246:6:1",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 455,
														"isOffset": false,
														"isSlot": false,
														"src": "9256:4:1",
														"valueSize": 1
													}
												],
												"id": 459,
												"nodeType": "InlineAssembly",
												"src": "9223:47:1"
											}
										]
									},
									"documentation": {
										"id": 448,
										"nodeType": "StructuredDocumentation",
										"src": "8947:67:1",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 461,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "9080:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9104:2:1"
									},
									"returnParameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "9158:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 461,
												"src": "9129:30:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
													"typeString": "struct Initializable.InitializableStorage"
												},
												"typeName": {
													"id": 451,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 450,
														"name": "InitializableStorage",
														"nameLocations": [
															"9129:20:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 205,
														"src": "9129:20:1"
													},
													"referencedDeclaration": 205,
													"src": "9129:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$205_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9128:32:1"
									},
									"scope": 462,
									"src": "9071:205:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 463,
							"src": "2349:6929:1",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "113:9166:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1125
						],
						"ERC20Upgradeable": [
							1079
						],
						"IERC20": [
							1340
						],
						"IERC20Errors": [
							1167
						],
						"IERC20Metadata": [
							1366
						],
						"Initializable": [
							462
						]
					},
					"id": 1080,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 464,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 466,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1080,
							"sourceUnit": 1341,
							"src": "131:70:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 465,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1340,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"id": 468,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1080,
							"sourceUnit": 1367,
							"src": "202:97:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 467,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1366,
										"src": "210:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../../utils/ContextUpgradeable.sol",
							"id": 470,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1080,
							"sourceUnit": 1126,
							"src": "300:70:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 469,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1125,
										"src": "308:18:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"id": 472,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1080,
							"sourceUnit": 1263,
							"src": "371:83:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 471,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1167,
										"src": "379:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../../proxy/utils/Initializable.sol",
							"id": 474,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1080,
							"sourceUnit": 463,
							"src": "455:66:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 473,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 462,
										"src": "463:13:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 476,
										"name": "Initializable",
										"nameLocations": [
											"1319:13:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 462,
										"src": "1319:13:2"
									},
									"id": 477,
									"nodeType": "InheritanceSpecifier",
									"src": "1319:13:2"
								},
								{
									"baseName": {
										"id": 478,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"1334:18:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1125,
										"src": "1334:18:2"
									},
									"id": 479,
									"nodeType": "InheritanceSpecifier",
									"src": "1334:18:2"
								},
								{
									"baseName": {
										"id": 480,
										"name": "IERC20",
										"nameLocations": [
											"1354:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1340,
										"src": "1354:6:2"
									},
									"id": 481,
									"nodeType": "InheritanceSpecifier",
									"src": "1354:6:2"
								},
								{
									"baseName": {
										"id": 482,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1362:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1366,
										"src": "1362:14:2"
									},
									"id": 483,
									"nodeType": "InheritanceSpecifier",
									"src": "1362:14:2"
								},
								{
									"baseName": {
										"id": 484,
										"name": "IERC20Errors",
										"nameLocations": [
											"1378:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1167,
										"src": "1378:12:2"
									},
									"id": 485,
									"nodeType": "InheritanceSpecifier",
									"src": "1378:12:2"
								}
							],
							"canonicalName": "ERC20Upgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 475,
								"nodeType": "StructuredDocumentation",
								"src": "523:757:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 1079,
							"linearizedBaseContracts": [
								1079,
								1167,
								1366,
								1340,
								1125,
								462
							],
							"name": "ERC20Upgradeable",
							"nameLocation": "1299:16:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ERC20Upgradeable.ERC20Storage",
									"documentation": {
										"id": 486,
										"nodeType": "StructuredDocumentation",
										"src": "1397:63:2",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.ERC20"
									},
									"id": 503,
									"members": [
										{
											"constant": false,
											"id": 490,
											"mutability": "mutable",
											"name": "_balances",
											"nameLocation": "1531:9:2",
											"nodeType": "VariableDeclaration",
											"scope": 503,
											"src": "1495:45:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 489,
												"keyName": "account",
												"keyNameLocation": "1511:7:2",
												"keyType": {
													"id": 487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1503:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1495:35:2",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1522:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 496,
											"mutability": "mutable",
											"name": "_allowances",
											"nameLocation": "1615:11:2",
											"nodeType": "VariableDeclaration",
											"scope": 503,
											"src": "1551:75:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
												"typeString": "mapping(address => mapping(address => uint256))"
											},
											"typeName": {
												"id": 495,
												"keyName": "account",
												"keyNameLocation": "1567:7:2",
												"keyType": {
													"id": 491,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1559:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1551:63:2",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
													"typeString": "mapping(address => mapping(address => uint256))"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 494,
													"keyName": "spender",
													"keyNameLocation": "1594:7:2",
													"keyType": {
														"id": 492,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "1586:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Mapping",
													"src": "1578:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
														"typeString": "mapping(address => uint256)"
													},
													"valueName": "",
													"valueNameLocation": "-1:-1:-1",
													"valueType": {
														"id": 493,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "1605:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 498,
											"mutability": "mutable",
											"name": "_totalSupply",
											"nameLocation": "1645:12:2",
											"nodeType": "VariableDeclaration",
											"scope": 503,
											"src": "1637:20:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 497,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1637:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 500,
											"mutability": "mutable",
											"name": "_name",
											"nameLocation": "1675:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 503,
											"src": "1668:12:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 499,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1668:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 502,
											"mutability": "mutable",
											"name": "_symbol",
											"nameLocation": "1697:7:2",
											"nodeType": "VariableDeclaration",
											"scope": 503,
											"src": "1690:14:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 501,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1690:6:2",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "ERC20Storage",
									"nameLocation": "1472:12:2",
									"nodeType": "StructDefinition",
									"scope": 1079,
									"src": "1465:246:2",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 506,
									"mutability": "constant",
									"name": "ERC20StorageLocation",
									"nameLocation": "1851:20:2",
									"nodeType": "VariableDeclaration",
									"scope": 1079,
									"src": "1826:114:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 504,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1826:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307835326336333234376531663437646231396435636530343630303330633439376630363763613463656266373162613938656561646162653230626163653030",
										"id": 505,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1874:66:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_37439836327923360225337895871394760624280537466773280374265222508165906222592_by_1",
											"typeString": "int_const 3743...(69 digits omitted)...2592"
										},
										"value": "0x52c63247e1f47db19d5ce0460030c497f067ca4cebf71ba98eeadabe20bace00"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 513,
										"nodeType": "Block",
										"src": "2021:79:2",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2040:54:2",
													"nodeType": "YulBlock",
													"src": "2040:54:2",
													"statements": [
														{
															"nativeSrc": "2054:30:2",
															"nodeType": "YulAssignment",
															"src": "2054:30:2",
															"value": {
																"name": "ERC20StorageLocation",
																"nativeSrc": "2064:20:2",
																"nodeType": "YulIdentifier",
																"src": "2064:20:2"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "2054:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "2054:6:2"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 510,
														"isOffset": false,
														"isSlot": true,
														"src": "2054:6:2",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 506,
														"isOffset": false,
														"isSlot": false,
														"src": "2064:20:2",
														"valueSize": 1
													}
												],
												"id": 512,
												"nodeType": "InlineAssembly",
												"src": "2031:63:2"
											}
										]
									},
									"id": 514,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getERC20Storage",
									"nameLocation": "1956:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1972:2:2"
									},
									"returnParameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "2018:1:2",
												"nodeType": "VariableDeclaration",
												"scope": 514,
												"src": "1997:22:2",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
													"typeString": "struct ERC20Upgradeable.ERC20Storage"
												},
												"typeName": {
													"id": 509,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 508,
														"name": "ERC20Storage",
														"nameLocations": [
															"1997:12:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 503,
														"src": "1997:12:2"
													},
													"referencedDeclaration": 503,
													"src": "1997:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1996:24:2"
									},
									"scope": 1079,
									"src": "1947:153:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 529,
										"nodeType": "Block",
										"src": "2355:55:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 525,
															"name": "name_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 517,
															"src": "2388:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 526,
															"name": "symbol_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 519,
															"src": "2395:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 524,
														"name": "__ERC20_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 558,
														"src": "2365:22:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory,string memory)"
														}
													},
													"id": 527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2365:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 528,
												"nodeType": "ExpressionStatement",
												"src": "2365:38:2"
											}
										]
									},
									"documentation": {
										"id": 515,
										"nodeType": "StructuredDocumentation",
										"src": "2106:152:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n Both values are immutable: they can only be set once during construction."
									},
									"id": 530,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 522,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 521,
												"name": "onlyInitializing",
												"nameLocations": [
													"2338:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2338:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2338:16:2"
										}
									],
									"name": "__ERC20_init",
									"nameLocation": "2272:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2299:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "2285:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 516,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2285:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2320:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 530,
												"src": "2306:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 518,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2306:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2284:44:2"
									},
									"returnParameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2355:0:2"
									},
									"scope": 1079,
									"src": "2263:147:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 557,
										"nodeType": "Block",
										"src": "2518:114:2",
										"statements": [
											{
												"assignments": [
													541
												],
												"declarations": [
													{
														"constant": false,
														"id": 541,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2549:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 557,
														"src": "2528:22:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 540,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 539,
																"name": "ERC20Storage",
																"nameLocations": [
																	"2528:12:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 503,
																"src": "2528:12:2"
															},
															"referencedDeclaration": 503,
															"src": "2528:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 544,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 542,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 514,
														"src": "2553:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$503_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2553:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2528:43:2"
											},
											{
												"expression": {
													"id": 549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 545,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 541,
															"src": "2581:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
															}
														},
														"id": 547,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2583:5:2",
														"memberName": "_name",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 500,
														"src": "2581:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 548,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "2591:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2581:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 550,
												"nodeType": "ExpressionStatement",
												"src": "2581:15:2"
											},
											{
												"expression": {
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 551,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 541,
															"src": "2606:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
															}
														},
														"id": 553,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2608:7:2",
														"memberName": "_symbol",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 502,
														"src": "2606:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 554,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 534,
														"src": "2618:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2606:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 556,
												"nodeType": "ExpressionStatement",
												"src": "2606:19:2"
											}
										]
									},
									"id": 558,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 537,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 536,
												"name": "onlyInitializing",
												"nameLocations": [
													"2501:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "2501:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2501:16:2"
										}
									],
									"name": "__ERC20_init_unchained",
									"nameLocation": "2425:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "2462:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "2448:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 531,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2448:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "2483:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "2469:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 533,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2469:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2447:44:2"
									},
									"returnParameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2518:0:2"
									},
									"scope": 1079,
									"src": "2416:216:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1353
									],
									"body": {
										"id": 573,
										"nodeType": "Block",
										"src": "2757:84:2",
										"statements": [
											{
												"assignments": [
													566
												],
												"declarations": [
													{
														"constant": false,
														"id": 566,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2788:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 573,
														"src": "2767:22:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 565,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 564,
																"name": "ERC20Storage",
																"nameLocations": [
																	"2767:12:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 503,
																"src": "2767:12:2"
															},
															"referencedDeclaration": 503,
															"src": "2767:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 569,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 567,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 514,
														"src": "2792:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$503_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2792:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2767:43:2"
											},
											{
												"expression": {
													"expression": {
														"id": 570,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 566,
														"src": "2827:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
														}
													},
													"id": 571,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2829:5:2",
													"memberName": "_name",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 500,
													"src": "2827:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 563,
												"id": 572,
												"nodeType": "Return",
												"src": "2820:14:2"
											}
										]
									},
									"documentation": {
										"id": 559,
										"nodeType": "StructuredDocumentation",
										"src": "2638:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 574,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2706:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2710:2:2"
									},
									"returnParameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 574,
												"src": "2742:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 561,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2742:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2741:15:2"
									},
									"scope": 1079,
									"src": "2697:144:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1359
									],
									"body": {
										"id": 589,
										"nodeType": "Block",
										"src": "3016:86:2",
										"statements": [
											{
												"assignments": [
													582
												],
												"declarations": [
													{
														"constant": false,
														"id": 582,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3047:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 589,
														"src": "3026:22:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 581,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 580,
																"name": "ERC20Storage",
																"nameLocations": [
																	"3026:12:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 503,
																"src": "3026:12:2"
															},
															"referencedDeclaration": 503,
															"src": "3026:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 585,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 583,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 514,
														"src": "3051:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$503_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3051:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3026:43:2"
											},
											{
												"expression": {
													"expression": {
														"id": 586,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 582,
														"src": "3086:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
														}
													},
													"id": 587,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3088:7:2",
													"memberName": "_symbol",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 502,
													"src": "3086:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 579,
												"id": 588,
												"nodeType": "Return",
												"src": "3079:16:2"
											}
										]
									},
									"documentation": {
										"id": 575,
										"nodeType": "StructuredDocumentation",
										"src": "2847:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 590,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2963:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2969:2:2"
									},
									"returnParameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "3001:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 577,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3001:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3000:15:2"
									},
									"scope": 1079,
									"src": "2954:148:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1365
									],
									"body": {
										"id": 598,
										"nodeType": "Block",
										"src": "3791:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3808:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 595,
												"id": 597,
												"nodeType": "Return",
												"src": "3801:9:2"
											}
										]
									},
									"documentation": {
										"id": 591,
										"nodeType": "StructuredDocumentation",
										"src": "3108:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 599,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3744:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3752:2:2"
									},
									"returnParameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "3784:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 593,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3784:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3783:7:2"
									},
									"scope": 1079,
									"src": "3735:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1289
									],
									"body": {
										"id": 614,
										"nodeType": "Block",
										"src": "3911:91:2",
										"statements": [
											{
												"assignments": [
													607
												],
												"declarations": [
													{
														"constant": false,
														"id": 607,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3942:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 614,
														"src": "3921:22:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 606,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 605,
																"name": "ERC20Storage",
																"nameLocations": [
																	"3921:12:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 503,
																"src": "3921:12:2"
															},
															"referencedDeclaration": 503,
															"src": "3921:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 610,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 608,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 514,
														"src": "3946:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$503_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3946:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3921:43:2"
											},
											{
												"expression": {
													"expression": {
														"id": 611,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 607,
														"src": "3981:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
														}
													},
													"id": 612,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3983:12:2",
													"memberName": "_totalSupply",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 498,
													"src": "3981:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 604,
												"id": 613,
												"nodeType": "Return",
												"src": "3974:21:2"
											}
										]
									},
									"documentation": {
										"id": 600,
										"nodeType": "StructuredDocumentation",
										"src": "3823:22:2",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "18160ddd",
									"id": 615,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3859:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 601,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3870:2:2"
									},
									"returnParameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "3902:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 602,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3902:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3901:9:2"
									},
									"scope": 1079,
									"src": "3850:152:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1297
									],
									"body": {
										"id": 634,
										"nodeType": "Block",
										"src": "4109:97:2",
										"statements": [
											{
												"assignments": [
													625
												],
												"declarations": [
													{
														"constant": false,
														"id": 625,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4140:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 634,
														"src": "4119:22:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 624,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 623,
																"name": "ERC20Storage",
																"nameLocations": [
																	"4119:12:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 503,
																"src": "4119:12:2"
															},
															"referencedDeclaration": 503,
															"src": "4119:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 628,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 626,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 514,
														"src": "4144:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$503_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4144:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4119:43:2"
											},
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"id": 629,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 625,
															"src": "4179:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
															}
														},
														"id": 630,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4181:9:2",
														"memberName": "_balances",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 490,
														"src": "4179:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 632,
													"indexExpression": {
														"id": 631,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 618,
														"src": "4191:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4179:20:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 622,
												"id": 633,
												"nodeType": "Return",
												"src": "4172:27:2"
											}
										]
									},
									"documentation": {
										"id": 616,
										"nodeType": "StructuredDocumentation",
										"src": "4008:22:2",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "70a08231",
									"id": 635,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "4044:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4062:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "4054:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 617,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4054:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4053:17:2"
									},
									"returnParameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "4100:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 620,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4100:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4099:9:2"
									},
									"scope": 1079,
									"src": "4035:171:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1307
									],
									"body": {
										"id": 658,
										"nodeType": "Block",
										"src": "4476:103:2",
										"statements": [
											{
												"assignments": [
													646
												],
												"declarations": [
													{
														"constant": false,
														"id": 646,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4494:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 658,
														"src": "4486:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 645,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4486:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 649,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 647,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1107,
														"src": "4502:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4502:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4486:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 651,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 646,
															"src": "4534:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 652,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "4541:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 653,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 640,
															"src": "4545:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 650,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 786,
														"src": "4524:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4524:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 655,
												"nodeType": "ExpressionStatement",
												"src": "4524:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 656,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4568:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 644,
												"id": 657,
												"nodeType": "Return",
												"src": "4561:11:2"
											}
										]
									},
									"documentation": {
										"id": 636,
										"nodeType": "StructuredDocumentation",
										"src": "4212:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 659,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "4410:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4427:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "4419:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4419:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 640,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4439:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "4431:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4431:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4418:27:2"
									},
									"returnParameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 659,
												"src": "4470:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 642,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4470:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4469:6:2"
									},
									"scope": 1079,
									"src": "4401:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1317
									],
									"body": {
										"id": 682,
										"nodeType": "Block",
										"src": "4701:106:2",
										"statements": [
											{
												"assignments": [
													671
												],
												"declarations": [
													{
														"constant": false,
														"id": 671,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4732:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 682,
														"src": "4711:22:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 670,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 669,
																"name": "ERC20Storage",
																"nameLocations": [
																	"4711:12:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 503,
																"src": "4711:12:2"
															},
															"referencedDeclaration": 503,
															"src": "4711:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 674,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 672,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 514,
														"src": "4736:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$503_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4736:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4711:43:2"
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"expression": {
																"id": 675,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 671,
																"src": "4771:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
																	"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																}
															},
															"id": 676,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4773:11:2",
															"memberName": "_allowances",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 496,
															"src": "4771:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 678,
														"indexExpression": {
															"id": 677,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "4785:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4771:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 680,
													"indexExpression": {
														"id": 679,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 664,
														"src": "4792:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4771:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 668,
												"id": 681,
												"nodeType": "Return",
												"src": "4764:36:2"
											}
										]
									},
									"documentation": {
										"id": 660,
										"nodeType": "StructuredDocumentation",
										"src": "4585:22:2",
										"text": "@inheritdoc IERC20"
									},
									"functionSelector": "dd62ed3e",
									"id": 683,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "4621:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4639:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "4631:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 661,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4631:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 664,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4654:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "4646:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 663,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4646:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4630:32:2"
									},
									"returnParameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "4692:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4692:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4691:9:2"
									},
									"scope": 1079,
									"src": "4612:195:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1327
									],
									"body": {
										"id": 706,
										"nodeType": "Block",
										"src": "5193:107:2",
										"statements": [
											{
												"assignments": [
													694
												],
												"declarations": [
													{
														"constant": false,
														"id": 694,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "5211:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 706,
														"src": "5203:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 693,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5203:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 697,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 695,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1107,
														"src": "5219:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5219:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5203:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 699,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 694,
															"src": "5250:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 700,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 686,
															"src": "5257:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 701,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 688,
															"src": "5266:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 698,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															962,
															1030
														],
														"referencedDeclaration": 962,
														"src": "5241:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5241:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 703,
												"nodeType": "ExpressionStatement",
												"src": "5241:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 704,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5289:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 692,
												"id": 705,
												"nodeType": "Return",
												"src": "5282:11:2"
											}
										]
									},
									"documentation": {
										"id": 684,
										"nodeType": "StructuredDocumentation",
										"src": "4813:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 707,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "5123:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5139:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "5131:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5131:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5156:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "5148:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 687,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5148:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5130:32:2"
									},
									"returnParameters": {
										"id": 692,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "5187:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 690,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5187:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5186:6:2"
									},
									"scope": 1079,
									"src": "5114:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1339
									],
									"body": {
										"id": 738,
										"nodeType": "Block",
										"src": "5985:151:2",
										"statements": [
											{
												"assignments": [
													720
												],
												"declarations": [
													{
														"constant": false,
														"id": 720,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "6003:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 738,
														"src": "5995:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 719,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5995:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 723,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 721,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1107,
														"src": "6013:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6013:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5995:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 725,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 710,
															"src": "6051:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 726,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 720,
															"src": "6057:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 727,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 714,
															"src": "6066:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 724,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1078,
														"src": "6035:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6035:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 729,
												"nodeType": "ExpressionStatement",
												"src": "6035:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 731,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 710,
															"src": "6092:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 732,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 712,
															"src": "6098:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 733,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 714,
															"src": "6102:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 730,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 786,
														"src": "6082:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6082:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 735,
												"nodeType": "ExpressionStatement",
												"src": "6082:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 736,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6125:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 718,
												"id": 737,
												"nodeType": "Return",
												"src": "6118:11:2"
											}
										]
									},
									"documentation": {
										"id": 708,
										"nodeType": "StructuredDocumentation",
										"src": "5306:581:2",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 739,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5901:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5922:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "5914:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5914:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5936:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "5928:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 711,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5928:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5948:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "5940:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 713,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5940:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5913:41:2"
									},
									"returnParameters": {
										"id": 718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 717,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 739,
												"src": "5979:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 716,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5979:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5978:6:2"
									},
									"scope": 1079,
									"src": "5892:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 785,
										"nodeType": "Block",
										"src": "6578:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 749,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 742,
														"src": "6592:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 752,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6608:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 751,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6600:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 750,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6600:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 753,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6600:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6592:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 763,
												"nodeType": "IfStatement",
												"src": "6588:86:2",
												"trueBody": {
													"id": 762,
													"nodeType": "Block",
													"src": "6612:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 758,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6660:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 757,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6652:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 756,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6652:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 759,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6652:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 755,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1142,
																	"src": "6633:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 760,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6633:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 761,
															"nodeType": "RevertStatement",
															"src": "6626:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 764,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 744,
														"src": "6687:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 767,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6701:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 766,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6693:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 765,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6693:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 768,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6693:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6687:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 778,
												"nodeType": "IfStatement",
												"src": "6683:86:2",
												"trueBody": {
													"id": 777,
													"nodeType": "Block",
													"src": "6705:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 773,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "6755:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 772,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "6747:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 771,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "6747:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 774,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6747:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 770,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1147,
																	"src": "6726:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 775,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6726:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 776,
															"nodeType": "RevertStatement",
															"src": "6719:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 780,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 742,
															"src": "6786:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 781,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 744,
															"src": "6792:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 782,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 746,
															"src": "6796:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 779,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 878,
														"src": "6778:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6778:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 784,
												"nodeType": "ExpressionStatement",
												"src": "6778:24:2"
											}
										]
									},
									"documentation": {
										"id": 740,
										"nodeType": "StructuredDocumentation",
										"src": "6142:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 786,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "6518:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6536:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "6528:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 741,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6528:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 744,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6550:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "6542:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 743,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6542:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6562:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 786,
												"src": "6554:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 745,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6554:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6527:41:2"
									},
									"returnParameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6578:0:2"
									},
									"scope": 1079,
									"src": "6509:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 877,
										"nodeType": "Block",
										"src": "7199:1095:2",
										"statements": [
											{
												"assignments": [
													798
												],
												"declarations": [
													{
														"constant": false,
														"id": 798,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7230:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 877,
														"src": "7209:22:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 797,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 796,
																"name": "ERC20Storage",
																"nameLocations": [
																	"7209:12:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 503,
																"src": "7209:12:2"
															},
															"referencedDeclaration": 503,
															"src": "7209:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 801,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 799,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 514,
														"src": "7234:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$503_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7234:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7209:43:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 802,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 789,
														"src": "7266:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 805,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7282:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 804,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7274:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 803,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7274:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 806,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7274:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7266:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 844,
													"nodeType": "Block",
													"src": "7442:366:2",
													"statements": [
														{
															"assignments": [
																816
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 816,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "7464:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 844,
																	"src": "7456:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 815,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "7456:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 821,
															"initialValue": {
																"baseExpression": {
																	"expression": {
																		"id": 817,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 798,
																		"src": "7478:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
																			"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																		}
																	},
																	"id": 818,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7480:9:2",
																	"memberName": "_balances",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 490,
																	"src": "7478:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 820,
																"indexExpression": {
																	"id": 819,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 789,
																	"src": "7490:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "7478:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "7456:39:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 824,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 822,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 816,
																	"src": "7513:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 823,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 793,
																	"src": "7527:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7513:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 832,
															"nodeType": "IfStatement",
															"src": "7509:115:2",
															"trueBody": {
																"id": 831,
																"nodeType": "Block",
																"src": "7534:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 826,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 789,
																					"src": "7584:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 827,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 816,
																					"src": "7590:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 828,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 793,
																					"src": "7603:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 825,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1137,
																				"src": "7559:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 829,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7559:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 830,
																		"nodeType": "RevertStatement",
																		"src": "7552:57:2"
																	}
																]
															}
														},
														{
															"id": 843,
															"nodeType": "UncheckedBlock",
															"src": "7637:161:2",
															"statements": [
																{
																	"expression": {
																		"id": 841,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"expression": {
																					"id": 833,
																					"name": "$",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 798,
																					"src": "7744:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
																						"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																					}
																				},
																				"id": 836,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7746:9:2",
																				"memberName": "_balances",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 490,
																				"src": "7744:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 837,
																			"indexExpression": {
																				"id": 835,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 789,
																				"src": "7756:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7744:17:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 840,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 838,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 816,
																				"src": "7764:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 839,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 793,
																				"src": "7778:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7764:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7744:39:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 842,
																	"nodeType": "ExpressionStatement",
																	"src": "7744:39:2"
																}
															]
														}
													]
												},
												"id": 845,
												"nodeType": "IfStatement",
												"src": "7262:546:2",
												"trueBody": {
													"id": 814,
													"nodeType": "Block",
													"src": "7286:150:2",
													"statements": [
														{
															"expression": {
																"id": 812,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 808,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 798,
																		"src": "7402:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
																			"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																		}
																	},
																	"id": 810,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "7404:12:2",
																	"memberName": "_totalSupply",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 498,
																	"src": "7402:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 811,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 793,
																	"src": "7420:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7402:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 813,
															"nodeType": "ExpressionStatement",
															"src": "7402:23:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 846,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 791,
														"src": "7822:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 849,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7836:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 848,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7828:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 847,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7828:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 850,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7828:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7822:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 869,
													"nodeType": "Block",
													"src": "8039:208:2",
													"statements": [
														{
															"id": 868,
															"nodeType": "UncheckedBlock",
															"src": "8053:184:2",
															"statements": [
																{
																	"expression": {
																		"id": 866,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"expression": {
																					"id": 860,
																					"name": "$",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 798,
																					"src": "8198:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
																						"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																					}
																				},
																				"id": 863,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "8200:9:2",
																				"memberName": "_balances",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 490,
																				"src": "8198:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 864,
																			"indexExpression": {
																				"id": 862,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 791,
																				"src": "8210:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "8198:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 865,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 793,
																			"src": "8217:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "8198:24:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 867,
																	"nodeType": "ExpressionStatement",
																	"src": "8198:24:2"
																}
															]
														}
													]
												},
												"id": 870,
												"nodeType": "IfStatement",
												"src": "7818:429:2",
												"trueBody": {
													"id": 859,
													"nodeType": "Block",
													"src": "7840:193:2",
													"statements": [
														{
															"id": 858,
															"nodeType": "UncheckedBlock",
															"src": "7854:169:2",
															"statements": [
																{
																	"expression": {
																		"id": 856,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"expression": {
																				"id": 852,
																				"name": "$",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 798,
																				"src": "7985:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
																					"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																				}
																			},
																			"id": 854,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"memberLocation": "7987:12:2",
																			"memberName": "_totalSupply",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 498,
																			"src": "7985:14:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 855,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 793,
																			"src": "8003:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7985:23:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 857,
																	"nodeType": "ExpressionStatement",
																	"src": "7985:23:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 872,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 789,
															"src": "8271:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 873,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "8277:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 874,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "8281:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 871,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1274,
														"src": "8262:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 875,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8262:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 876,
												"nodeType": "EmitStatement",
												"src": "8257:30:2"
											}
										]
									},
									"documentation": {
										"id": 787,
										"nodeType": "StructuredDocumentation",
										"src": "6815:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 878,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "7133:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7149:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "7141:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 788,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7141:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7163:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "7155:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 790,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7155:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7175:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 878,
												"src": "7167:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 792,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7167:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7140:41:2"
									},
									"returnParameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7199:0:2"
									},
									"scope": 1079,
									"src": "7124:1170:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 910,
										"nodeType": "Block",
										"src": "8693:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 886,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 881,
														"src": "8707:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 889,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8726:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 888,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8718:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 887,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8718:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 890,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8718:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8707:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 900,
												"nodeType": "IfStatement",
												"src": "8703:91:2",
												"trueBody": {
													"id": 899,
													"nodeType": "Block",
													"src": "8730:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 895,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8780:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 894,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8772:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 893,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8772:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 896,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8772:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 892,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1147,
																	"src": "8751:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 897,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8751:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 898,
															"nodeType": "RevertStatement",
															"src": "8744:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 904,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8819:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 903,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8811:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 902,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8811:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 905,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8811:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 906,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 881,
															"src": "8823:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 907,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 883,
															"src": "8832:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 901,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 878,
														"src": "8803:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8803:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 909,
												"nodeType": "ExpressionStatement",
												"src": "8803:35:2"
											}
										]
									},
									"documentation": {
										"id": 879,
										"nodeType": "StructuredDocumentation",
										"src": "8300:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 911,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "8646:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 881,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8660:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "8652:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 880,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8652:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8677:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 911,
												"src": "8669:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 882,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8669:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8651:32:2"
									},
									"returnParameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8693:0:2"
									},
									"scope": 1079,
									"src": "8637:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 943,
										"nodeType": "Block",
										"src": "9219:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 924,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 919,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 914,
														"src": "9233:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 922,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9252:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 921,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9244:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 920,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9244:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 923,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9244:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9233:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 933,
												"nodeType": "IfStatement",
												"src": "9229:89:2",
												"trueBody": {
													"id": 932,
													"nodeType": "Block",
													"src": "9256:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 928,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9304:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 927,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9296:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 926,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9296:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 929,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9296:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 925,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1142,
																	"src": "9277:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 930,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9277:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 931,
															"nodeType": "RevertStatement",
															"src": "9270:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 935,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 914,
															"src": "9335:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 938,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9352:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 937,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9344:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 936,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9344:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 939,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9344:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 940,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 916,
															"src": "9356:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 934,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 878,
														"src": "9327:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9327:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 942,
												"nodeType": "ExpressionStatement",
												"src": "9327:35:2"
											}
										]
									},
									"documentation": {
										"id": 912,
										"nodeType": "StructuredDocumentation",
										"src": "8851:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 944,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "9172:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "9186:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "9178:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 913,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9178:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9203:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 944,
												"src": "9195:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 915,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9195:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9177:32:2"
									},
									"returnParameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9219:0:2"
									},
									"scope": 1079,
									"src": "9163:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 961,
										"nodeType": "Block",
										"src": "9979:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 955,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 947,
															"src": "9998:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 956,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 949,
															"src": "10005:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 957,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 951,
															"src": "10014:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 958,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10021:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 954,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															962,
															1030
														],
														"referencedDeclaration": 1030,
														"src": "9989:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9989:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 960,
												"nodeType": "ExpressionStatement",
												"src": "9989:37:2"
											}
										]
									},
									"documentation": {
										"id": 945,
										"nodeType": "StructuredDocumentation",
										"src": "9375:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner`'s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 962,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9914:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9931:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "9923:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 946,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9923:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9946:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "9938:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 948,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9938:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9963:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "9955:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 950,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9955:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9922:47:2"
									},
									"returnParameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9979:0:2"
									},
									"scope": 1079,
									"src": "9905:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1029,
										"nodeType": "Block",
										"src": "10978:389:2",
										"statements": [
											{
												"assignments": [
													976
												],
												"declarations": [
													{
														"constant": false,
														"id": 976,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "11009:1:2",
														"nodeType": "VariableDeclaration",
														"scope": 1029,
														"src": "10988:22:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
															"typeString": "struct ERC20Upgradeable.ERC20Storage"
														},
														"typeName": {
															"id": 975,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 974,
																"name": "ERC20Storage",
																"nameLocations": [
																	"10988:12:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 503,
																"src": "10988:12:2"
															},
															"referencedDeclaration": 503,
															"src": "10988:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
																"typeString": "struct ERC20Upgradeable.ERC20Storage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 979,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 977,
														"name": "_getERC20Storage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 514,
														"src": "11013:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_ERC20Storage_$503_storage_ptr_$",
															"typeString": "function () pure returns (struct ERC20Upgradeable.ERC20Storage storage pointer)"
														}
													},
													"id": 978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11013:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
														"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10988:43:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 980,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 965,
														"src": "11045:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 983,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11062:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 982,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11054:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 981,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11054:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 984,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11054:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11045:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 994,
												"nodeType": "IfStatement",
												"src": "11041:89:2",
												"trueBody": {
													"id": 993,
													"nodeType": "Block",
													"src": "11066:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 989,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11116:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 988,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11108:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 987,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11108:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 990,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11108:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 986,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1161,
																	"src": "11087:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 991,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11087:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 992,
															"nodeType": "RevertStatement",
															"src": "11080:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 995,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 967,
														"src": "11143:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 998,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11162:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 997,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11154:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 996,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11154:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 999,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11154:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11143:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1009,
												"nodeType": "IfStatement",
												"src": "11139:90:2",
												"trueBody": {
													"id": 1008,
													"nodeType": "Block",
													"src": "11166:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1004,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11215:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1003,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "11207:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1002,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "11207:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1005,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11207:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1001,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1166,
																	"src": "11187:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1006,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11187:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1007,
															"nodeType": "RevertStatement",
															"src": "11180:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1018,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"expression": {
																	"id": 1010,
																	"name": "$",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 976,
																	"src": "11238:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_ERC20Storage_$503_storage_ptr",
																		"typeString": "struct ERC20Upgradeable.ERC20Storage storage pointer"
																	}
																},
																"id": 1014,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11240:11:2",
																"memberName": "_allowances",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 496,
																"src": "11238:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 1015,
															"indexExpression": {
																"id": 1012,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 965,
																"src": "11252:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11238:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1016,
														"indexExpression": {
															"id": 1013,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "11259:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11238:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1017,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 969,
														"src": "11270:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11238:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1019,
												"nodeType": "ExpressionStatement",
												"src": "11238:37:2"
											},
											{
												"condition": {
													"id": 1020,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 971,
													"src": "11289:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1028,
												"nodeType": "IfStatement",
												"src": "11285:76:2",
												"trueBody": {
													"id": 1027,
													"nodeType": "Block",
													"src": "11300:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1022,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 965,
																		"src": "11328:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1023,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 967,
																		"src": "11335:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1024,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 969,
																		"src": "11344:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1021,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1283,
																	"src": "11319:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 1025,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11319:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1026,
															"nodeType": "EmitStatement",
															"src": "11314:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 963,
										"nodeType": "StructuredDocumentation",
										"src": "10039:836:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 1030,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "10889:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10906:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "10898:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 964,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10898:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10921:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "10913:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 966,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10913:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10938:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "10930:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 968,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10930:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10950:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 1030,
												"src": "10945:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 970,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10945:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10897:63:2"
									},
									"returnParameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10978:0:2"
									},
									"scope": 1079,
									"src": "10880:487:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1077,
										"nodeType": "Block",
										"src": "11738:387:2",
										"statements": [
											{
												"assignments": [
													1041
												],
												"declarations": [
													{
														"constant": false,
														"id": 1041,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "11756:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 1077,
														"src": "11748:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1040,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11748:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1046,
												"initialValue": {
													"arguments": [
														{
															"id": 1043,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1033,
															"src": "11785:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1044,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1035,
															"src": "11792:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1042,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 683,
														"src": "11775:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 1045,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11775:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11748:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1047,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1041,
														"src": "11814:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1050,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11838:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1049,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "11838:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1048,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11833:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1051,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11833:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1052,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11847:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11833:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11814:36:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1076,
												"nodeType": "IfStatement",
												"src": "11810:309:2",
												"trueBody": {
													"id": 1075,
													"nodeType": "Block",
													"src": "11852:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1056,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1054,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1041,
																	"src": "11870:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1055,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1037,
																	"src": "11889:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11870:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1064,
															"nodeType": "IfStatement",
															"src": "11866:130:2",
															"trueBody": {
																"id": 1063,
																"nodeType": "Block",
																"src": "11896:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1058,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1035,
																					"src": "11948:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1059,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1041,
																					"src": "11957:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 1060,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1037,
																					"src": "11975:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1057,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1156,
																				"src": "11921:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 1061,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "11921:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1062,
																		"nodeType": "RevertStatement",
																		"src": "11914:67:2"
																	}
																]
															}
														},
														{
															"id": 1074,
															"nodeType": "UncheckedBlock",
															"src": "12009:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1066,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1033,
																				"src": "12046:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1067,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1035,
																				"src": "12053:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1070,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1068,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1041,
																					"src": "12062:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 1069,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1037,
																					"src": "12081:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12062:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 1071,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12088:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 1065,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				962,
																				1030
																			],
																			"referencedDeclaration": 1030,
																			"src": "12037:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 1072,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12037:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1073,
																	"nodeType": "ExpressionStatement",
																	"src": "12037:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1031,
										"nodeType": "StructuredDocumentation",
										"src": "11373:271:2",
										"text": " @dev Updates `owner`'s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 1078,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "11658:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1033,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "11682:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "11674:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1032,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11674:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "11697:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "11689:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1034,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11689:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11714:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "11706:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1036,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11706:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11673:47:2"
									},
									"returnParameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11738:0:2"
									},
									"scope": 1079,
									"src": "11649:476:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1080,
							"src": "1281:10846:2",
							"usedErrors": [
								211,
								214,
								1137,
								1142,
								1147,
								1156,
								1161,
								1166
							],
							"usedEvents": [
								219,
								1274,
								1283
							]
						}
					],
					"src": "105:12023:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1125
						],
						"Initializable": [
							462
						]
					},
					"id": 1126,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1081,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 1083,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1126,
							"sourceUnit": 463,
							"src": "126:63:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1082,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 462,
										"src": "134:13:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1085,
										"name": "Initializable",
										"nameLocations": [
											"728:13:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 462,
										"src": "728:13:3"
									},
									"id": 1086,
									"nodeType": "InheritanceSpecifier",
									"src": "728:13:3"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1084,
								"nodeType": "StructuredDocumentation",
								"src": "191:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1125,
							"linearizedBaseContracts": [
								1125,
								462
							],
							"name": "ContextUpgradeable",
							"nameLocation": "706:18:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1091,
										"nodeType": "Block",
										"src": "800:7:3",
										"statements": []
									},
									"id": 1092,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1089,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1088,
												"name": "onlyInitializing",
												"nameLocations": [
													"783:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "783:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "783:16:3"
										}
									],
									"name": "__Context_init",
									"nameLocation": "757:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "771:2:3"
									},
									"returnParameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "800:0:3"
									},
									"scope": 1125,
									"src": "748:59:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1097,
										"nodeType": "Block",
										"src": "875:7:3",
										"statements": []
									},
									"id": 1098,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1095,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1094,
												"name": "onlyInitializing",
												"nameLocations": [
													"858:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 357,
												"src": "858:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "858:16:3"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "822:24:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "846:2:3"
									},
									"returnParameters": {
										"id": 1096,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "875:0:3"
									},
									"scope": 1125,
									"src": "813:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1106,
										"nodeType": "Block",
										"src": "949:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1103,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "966:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "970:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "966:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1102,
												"id": 1105,
												"nodeType": "Return",
												"src": "959:17:3"
											}
										]
									},
									"id": 1107,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "896:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "906:2:3"
									},
									"returnParameters": {
										"id": 1102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1107,
												"src": "940:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:9:3"
									},
									"scope": 1125,
									"src": "887:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1115,
										"nodeType": "Block",
										"src": "1056:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1112,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1073:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1077:4:3",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1073:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1111,
												"id": 1114,
												"nodeType": "Return",
												"src": "1066:15:3"
											}
										]
									},
									"id": 1116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "998:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1006:2:3"
									},
									"returnParameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1110,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1116,
												"src": "1040:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1109,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1040:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:16:3"
									},
									"scope": 1125,
									"src": "989:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1123,
										"nodeType": "Block",
										"src": "1166:25:3",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1121,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1183:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1120,
												"id": 1122,
												"nodeType": "Return",
												"src": "1176:8:3"
											}
										]
									},
									"id": 1124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "1103:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1123:2:3"
									},
									"returnParameters": {
										"id": 1120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1124,
												"src": "1157:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:9:3"
									},
									"scope": 1125,
									"src": "1094:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1126,
							"src": "688:505:3",
							"usedErrors": [
								211,
								214
							],
							"usedEvents": [
								219
							]
						}
					],
					"src": "101:1093:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							1262
						],
						"IERC20Errors": [
							1167
						],
						"IERC721Errors": [
							1215
						]
					},
					"id": 1263,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1127,
							"literals": [
								"solidity",
								">=",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1128,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:4",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 1167,
							"linearizedBaseContracts": [
								1167
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1129,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:4",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 1137,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1131,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "654:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "670:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1137,
												"src": "687:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:4"
									},
									"src": "623:80:4"
								},
								{
									"documentation": {
										"id": 1138,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 1142,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1140,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "891:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1139,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:4"
									},
									"src": "866:41:4"
								},
								{
									"documentation": {
										"id": 1143,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 1147,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1145,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1147,
												"src": "1104:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:4"
									},
									"src": "1077:45:4"
								},
								{
									"documentation": {
										"id": 1148,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:4",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 1156,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "1511:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "1528:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1151,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1156,
												"src": "1547:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:4"
									},
									"src": "1478:85:4"
								},
								{
									"documentation": {
										"id": 1157,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 1161,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "1775:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1158,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:4"
									},
									"src": "1748:45:4"
								},
								{
									"documentation": {
										"id": 1162,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:4",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 1166,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1166,
												"src": "2025:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:4"
									},
									"src": "1999:43:4"
								}
							],
							"scope": 1263,
							"src": "280:1764:4",
							"usedErrors": [
								1137,
								1142,
								1147,
								1156,
								1161,
								1166
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1168,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:4",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 1215,
							"linearizedBaseContracts": [
								1215
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1169,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:4",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 1173,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1171,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1173,
												"src": "2469:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:4"
									},
									"src": "2444:40:4"
								},
								{
									"documentation": {
										"id": 1174,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:4",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 1178,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1176,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1178,
												"src": "2656:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:4"
									},
									"src": "2627:46:4"
								},
								{
									"documentation": {
										"id": 1179,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:4",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 1187,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1181,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "3000:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "3016:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1182,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "3033:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:4"
									},
									"src": "2973:75:4"
								},
								{
									"documentation": {
										"id": 1188,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 1192,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1190,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "3237:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:4"
									},
									"src": "3211:42:4"
								},
								{
									"documentation": {
										"id": 1193,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 1197,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "3451:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:4"
									},
									"src": "3423:46:4"
								},
								{
									"documentation": {
										"id": 1198,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:4",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 1204,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "3760:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1204,
												"src": "3778:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1201,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:4"
									},
									"src": "3727:68:4"
								},
								{
									"documentation": {
										"id": 1205,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 1209,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1207,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1209,
												"src": "4008:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:4"
									},
									"src": "3980:46:4"
								},
								{
									"documentation": {
										"id": 1210,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:4",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 1214,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1214,
												"src": "4262:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:4"
									},
									"src": "4234:46:4"
								}
							],
							"scope": 1263,
							"src": "2190:2092:4",
							"usedErrors": [
								1173,
								1178,
								1187,
								1192,
								1197,
								1204,
								1209,
								1214
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1216,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:4",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 1262,
							"linearizedBaseContracts": [
								1262
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1217,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:4",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 1227,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1219,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "4860:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1221,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "4876:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1223,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "4893:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1225,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "4909:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1224,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:4"
									},
									"src": "4827:99:4"
								},
								{
									"documentation": {
										"id": 1228,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 1232,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1230,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1232,
												"src": "5116:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:4"
									},
									"src": "5089:43:4"
								},
								{
									"documentation": {
										"id": 1233,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 1237,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1235,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1237,
												"src": "5331:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:4"
									},
									"src": "5302:47:4"
								},
								{
									"documentation": {
										"id": 1238,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:4",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 1244,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1244,
												"src": "5651:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1239,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1242,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1244,
												"src": "5669:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:4"
									},
									"src": "5616:68:4"
								},
								{
									"documentation": {
										"id": 1245,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 1249,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1247,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "5898:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1246,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:4"
									},
									"src": "5869:47:4"
								},
								{
									"documentation": {
										"id": 1250,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:4",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 1254,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1254,
												"src": "6153:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:4"
									},
									"src": "6124:47:4"
								},
								{
									"documentation": {
										"id": 1255,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:4",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 1261,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1257,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "6494:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 1261,
												"src": "6513:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:4"
									},
									"src": "6462:73:4"
								}
							],
							"scope": 1263,
							"src": "4430:2107:4",
							"usedErrors": [
								1227,
								1232,
								1237,
								1244,
								1249,
								1254,
								1261
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1340
						]
					},
					"id": 1341,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1264,
							"literals": [
								"solidity",
								">=",
								"0.4",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "106:25:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1265,
								"nodeType": "StructuredDocumentation",
								"src": "133:71:5",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 1340,
							"linearizedBaseContracts": [
								1340
							],
							"name": "IERC20",
							"nameLocation": "215:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1266,
										"nodeType": "StructuredDocumentation",
										"src": "228:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1274,
									"name": "Transfer",
									"nameLocation": "397:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1268,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "422:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1274,
												"src": "406:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1267,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "406:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1270,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "444:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1274,
												"src": "428:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "428:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1272,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "456:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1274,
												"src": "448:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1271,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "405:57:5"
									},
									"src": "391:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1275,
										"nodeType": "StructuredDocumentation",
										"src": "469:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1283,
									"name": "Approval",
									"nameLocation": "628:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1277,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "653:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "637:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "637:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1279,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "676:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "660:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1278,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1281,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "693:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "685:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "636:63:5"
									},
									"src": "622:78:5"
								},
								{
									"documentation": {
										"id": 1284,
										"nodeType": "StructuredDocumentation",
										"src": "706:65:5",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1289,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "785:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1285,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "796:2:5"
									},
									"returnParameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "822:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:9:5"
									},
									"scope": 1340,
									"src": "776:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1290,
										"nodeType": "StructuredDocumentation",
										"src": "837:71:5",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1297,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "922:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1292,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "940:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "932:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "932:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "931:17:5"
									},
									"returnParameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "972:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "972:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "971:9:5"
									},
									"scope": 1340,
									"src": "913:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1298,
										"nodeType": "StructuredDocumentation",
										"src": "987:213:5",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1307,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1214:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1300,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1231:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "1223:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1302,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1243:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "1235:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1301,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1235:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:27:5"
									},
									"returnParameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1305,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1307,
												"src": "1268:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1304,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:5"
									},
									"scope": 1340,
									"src": "1205:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1308,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1317,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1310,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1317,
												"src": "1568:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1312,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1317,
												"src": "1583:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:5"
									},
									"returnParameters": {
										"id": 1316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1315,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1317,
												"src": "1623:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:5"
									},
									"scope": 1340,
									"src": "1549:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1318,
										"nodeType": "StructuredDocumentation",
										"src": "1638:667:5",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1327,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2319:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1320,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2335:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "2327:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2327:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2352:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "2344:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2344:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2326:32:5"
									},
									"returnParameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1325,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "2377:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1324,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2377:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2376:6:5"
									},
									"scope": 1340,
									"src": "2310:73:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1328,
										"nodeType": "StructuredDocumentation",
										"src": "2389:297:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1339,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2700:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1330,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2721:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "2713:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1332,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2735:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "2727:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2747:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "2739:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2739:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:41:5"
									},
									"returnParameters": {
										"id": 1338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "2772:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1336,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2772:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2771:6:5"
									},
									"scope": 1340,
									"src": "2691:87:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1341,
							"src": "205:2575:5",
							"usedErrors": [],
							"usedEvents": [
								1274,
								1283
							]
						}
					],
					"src": "106:2675:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1340
						],
						"IERC20Metadata": [
							1366
						]
					},
					"id": 1367,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1342,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".2"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1344,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1367,
							"sourceUnit": 1341,
							"src": "151:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1343,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1340,
										"src": "159:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1346,
										"name": "IERC20",
										"nameLocations": [
											"306:6:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1340,
										"src": "306:6:6"
									},
									"id": 1347,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:6"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1345,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:6",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 1366,
							"linearizedBaseContracts": [
								1366,
								1340
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1348,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:6",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1353,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:6"
									},
									"returnParameters": {
										"id": 1352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1353,
												"src": "417:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1350,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:6"
									},
									"scope": 1366,
									"src": "378:54:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1354,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:6",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1359,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1355,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:6"
									},
									"returnParameters": {
										"id": 1358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1357,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1359,
												"src": "540:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1356,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:6"
									},
									"scope": 1366,
									"src": "499:56:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1360,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:6",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1365,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1361,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:6"
									},
									"returnParameters": {
										"id": 1364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1363,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1365,
												"src": "674:5:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1362,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:6"
									},
									"scope": 1366,
									"src": "631:50:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1367,
							"src": "278:405:6",
							"usedErrors": [],
							"usedEvents": [
								1274,
								1283
							]
						}
					],
					"src": "125:559:6"
				},
				"id": 6
			},
			"Token.sol": {
				"ast": {
					"absolutePath": "Token.sol",
					"exportedSymbols": {
						"ERC20Upgradeable": [
							1079
						],
						"OwnableUpgradeable": [
							194
						],
						"Token": [
							1431
						]
					},
					"id": 1432,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1368,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".13"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
							"id": 1370,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1432,
							"sourceUnit": 1080,
							"src": "158:102:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1369,
										"name": "ERC20Upgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1079,
										"src": "166:16:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol",
							"id": 1372,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1432,
							"sourceUnit": 195,
							"src": "261:101:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1371,
										"name": "OwnableUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 194,
										"src": "269:18:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1374,
										"name": "ERC20Upgradeable",
										"nameLocations": [
											"591:16:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1079,
										"src": "591:16:7"
									},
									"id": 1375,
									"nodeType": "InheritanceSpecifier",
									"src": "591:16:7"
								},
								{
									"baseName": {
										"id": 1376,
										"name": "OwnableUpgradeable",
										"nameLocations": [
											"609:18:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 194,
										"src": "609:18:7"
									},
									"id": 1377,
									"nodeType": "InheritanceSpecifier",
									"src": "609:18:7"
								}
							],
							"canonicalName": "Token",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1373,
								"nodeType": "StructuredDocumentation",
								"src": "364:208:7",
								"text": " @title Token\n @dev A simple upgradeable ERC20 token contract with mint and burn functionality\n @notice This contract inherits from OpenZeppelin's upgradeable contracts to support proxy patterns"
							},
							"fullyImplemented": true,
							"id": 1431,
							"linearizedBaseContracts": [
								1431,
								194,
								1079,
								1167,
								1366,
								1340,
								1125,
								462
							],
							"name": "Token",
							"nameLocation": "582:5:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1397,
										"nodeType": "Block",
										"src": "1090:233:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1388,
															"name": "name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1380,
															"src": "1193:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 1389,
															"name": "symbol",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1382,
															"src": "1199:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1387,
														"name": "__ERC20_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 530,
														"src": "1180:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory,string memory)"
														}
													},
													"id": 1390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1180:26:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1391,
												"nodeType": "ExpressionStatement",
												"src": "1180:26:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1393,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1305:3:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1394,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1309:6:7",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1305:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1392,
														"name": "__Ownable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1290:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1290:26:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1396,
												"nodeType": "ExpressionStatement",
												"src": "1290:26:7"
											}
										]
									},
									"documentation": {
										"id": 1378,
										"nodeType": "StructuredDocumentation",
										"src": "639:343:7",
										"text": " @dev Initializes the token contract with name and symbol\n @param name The name of the token (e.g., \"MyToken\")\n @param symbol The symbol of the token (e.g., \"MTK\")\n @notice This function replaces the constructor in upgradeable contracts\n @notice Can only be called once due to the initializer modifier"
									},
									"functionSelector": "4cd88b76",
									"id": 1398,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1385,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1384,
												"name": "initializer",
												"nameLocations": [
													"1078:11:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 302,
												"src": "1078:11:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1078:11:7"
										}
									],
									"name": "initialize",
									"nameLocation": "996:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1380,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "1030:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1398,
												"src": "1016:18:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1379,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1016:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1382,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "1058:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1398,
												"src": "1044:20:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1381,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1044:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1006:64:7"
									},
									"returnParameters": {
										"id": 1386,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1090:0:7"
									},
									"scope": 1431,
									"src": "987:336:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1413,
										"nodeType": "Block",
										"src": "1711:109:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1409,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1401,
															"src": "1802:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1410,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1403,
															"src": "1806:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1408,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 911,
														"src": "1796:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1796:17:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1412,
												"nodeType": "ExpressionStatement",
												"src": "1796:17:7"
											}
										]
									},
									"documentation": {
										"id": 1399,
										"nodeType": "StructuredDocumentation",
										"src": "1329:318:7",
										"text": " @dev Mints new tokens to a specified address\n @param to The address that will receive the newly minted tokens\n @param amount The amount of tokens to mint (in wei units)\n @notice Only the contract owner can call this function\n @notice This increases the total supply of tokens"
									},
									"functionSelector": "40c10f19",
									"id": 1414,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1406,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1405,
												"name": "onlyOwner",
												"nameLocations": [
													"1701:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "1701:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "1701:9:7"
										}
									],
									"name": "mint",
									"nameLocation": "1661:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1401,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1674:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "1666:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1400,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1666:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1403,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1686:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "1678:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1678:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1665:28:7"
									},
									"returnParameters": {
										"id": 1407,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1711:0:7"
									},
									"scope": 1431,
									"src": "1652:168:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1429,
										"nodeType": "Block",
										"src": "2277:106:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1425,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1417,
															"src": "2365:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1426,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1419,
															"src": "2369:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1424,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 944,
														"src": "2359:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2359:17:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1428,
												"nodeType": "ExpressionStatement",
												"src": "2359:17:7"
											}
										]
									},
									"documentation": {
										"id": 1415,
										"nodeType": "StructuredDocumentation",
										"src": "1826:387:7",
										"text": " @dev Burns tokens from a specified address\n @param to The address from which tokens will be burned\n @param amount The amount of tokens to burn (in wei units)\n @notice Only the contract owner can call this function\n @notice This decreases the total supply of tokens\n @notice The address must have sufficient balance for the burn to succeed"
									},
									"functionSelector": "9dc29fac",
									"id": 1430,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1422,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1421,
												"name": "onlyOwner",
												"nameLocations": [
													"2267:9:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 89,
												"src": "2267:9:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2267:9:7"
										}
									],
									"name": "burn",
									"nameLocation": "2227:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1417,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2240:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1430,
												"src": "2232:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2232:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1419,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2252:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1430,
												"src": "2244:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2244:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2231:28:7"
									},
									"returnParameters": {
										"id": 1423,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2277:0:7"
									},
									"scope": 1431,
									"src": "2218:165:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1432,
							"src": "573:1812:7",
							"usedErrors": [
								30,
								35,
								211,
								214,
								1137,
								1142,
								1147,
								1156,
								1161,
								1166
							],
							"usedEvents": [
								41,
								219,
								1274,
								1283
							]
						}
					],
					"src": "32:2353:7"
				},
				"id": 7
			}
		}
	}
}